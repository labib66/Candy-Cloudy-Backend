{"version":3,"file":"drive-routes-709cc1cb.js","sources":["../../../node_modules/@tanstack/query-core/build/modern/infiniteQueryObserver.js","../../../node_modules/@tanstack/react-query/build/modern/useInfiniteQuery.js","../../../resources/client/drive/drive-query-keys.ts","../../../resources/client/drive/shareable-link/shareable-link-page/link-page-store.ts","../../../resources/client/drive/shareable-link/queries/use-shareable-link-page.ts","../../../resources/client/drive/shareable-link/shareable-link-page/queries/check-link-password.ts","../../../resources/client/drive/shareable-link/shareable-link-page/queries/import-into-own-drive.ts","../../../resources/client/drive/shareable-link/shareable-link-page/shareable-link-page-action-buttons.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/shareable-link-navbar.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/password-page.tsx","../../../resources/client/drive/file-view/file-grid/base-file-grid-item.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-file-grid.tsx","../../../resources/client/drive/drive-store.ts","../../../resources/client/drive/shareable-link/queries/create-shareable-link.ts","../../../resources/client/drive/files/queries/use-add-star-to-entries.ts","../../../resources/client/drive/files/queries/use-remove-star-from-entries.ts","../../../resources/client/drive/files/queries/use-duplicate-entries.ts","../../../resources/client/drive/drive-page/add-files.svg","../../../resources/client/drive/drive-page/time-management.svg","../../../resources/client/drive/drive-page/file-searching.svg","../../../resources/client/drive/drive-page/throw-away.svg","../../../resources/client/drive/drive-page/loving-it.svg","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/share.svg","../../../resources/client/drive/drive-page/drive-page.tsx","../../../resources/client/drive/files/queries/use-delete-entries.ts","../../../resources/client/drive/share-dialog/queries/use-unshare-entries.ts","../../../resources/client/drive/files/queries/use-restore-entries.ts","../../../resources/client/drive/entry-actions/use-entry-actions.ts","../../../resources/client/drive/layout/sidebar/storage-summary/storage-summary.ts","../../../resources/client/drive/uploading/use-drive-upload-queue.ts","../../../resources/client/drive/entry-actions/use-drive-page-actions.ts","../../../resources/client/drive/entry-actions/entry-action-menu-trigger.tsx","../../../resources/client/drive/file-view/file-table/file-table-columns.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-file-table.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/use-navigate-to-subfolder.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-file-view.tsx","../../../common/resources/client/ui/layout/dashboard-content-header.tsx","../../../resources/client/drive/files/queries/use-folder-path.ts","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-breadcrumb.tsx","../../../resources/client/drive/layout/sorting/available-sorts.ts","../../../resources/client/drive/layout/sorting/entries-sort-button.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-header.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/shareable-link-page-file-preview.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/shareable-link-page.tsx","../../../common/resources/client/ui/progress/meter.tsx","../../../resources/client/drive/layout/sidebar/storage-summary/storage-meter.tsx","../../../common/resources/client/workspace/requests/create-workspace.ts","../../../common/resources/client/workspace/new-workspace-dialog.tsx","../../../common/resources/client/workspace/requests/workspace-with-members.ts","../../../common/resources/client/workspace/requests/invite-members.ts","../../../common/resources/client/workspace/requests/resend-invite.ts","../../../common/resources/client/utils/string/is-email.ts","../../../common/resources/client/workspace/requests/change-role.ts","../../../common/resources/client/workspace/requests/remove-member.ts","../../../common/resources/client/workspace/leave-workspace-confirmation.tsx","../../../common/resources/client/workspace/workspace-members-dialog.tsx","../../../common/resources/client/workspace/requests/update-workspace.ts","../../../common/resources/client/workspace/rename-workspace-dialog.tsx","../../../common/resources/client/workspace/requests/delete-workspace.ts","../../../common/resources/client/billing/upgrade/policy-fail-message.tsx","../../../common/resources/client/workspace/workspace-selector.tsx","../../../resources/client/drive/menu-positions.ts","../../../node_modules/performant-array-to-tree/build/arrayToTree.min.js","../../../resources/client/drive/files/queries/use-folders.ts","../../../resources/client/drive/files/queries/use-move-entries.ts","../../../resources/client/drive/files/utils/can-move-entries-into.ts","../../../resources/client/drive/files/use-folder-drop-action.ts","../../../resources/client/drive/layout/sidebar/folder-tree-drag-id.ts","../../../resources/client/drive/layout/sidebar/use-sidebar-tree-drop-target.ts","../../../common/resources/client/ui/tree/tree-context.tsx","../../../common/resources/client/ui/tree/render-tree.ts","../../../common/resources/client/ui/tree/tree-label.tsx","../../../common/resources/client/ui/tree/tree-item.tsx","../../../common/resources/client/ui/tree/tree.tsx","../../../resources/client/drive/layout/sidebar/folder-tree.tsx","../../../resources/client/drive/layout/sidebar/sidebar-menu.tsx","../../../resources/client/drive/layout/create-new-button.tsx","../../../resources/client/drive/layout/sidebar/sidebar.tsx","../../../resources/client/drive/files/queries/use-paginated-entries.ts","../../../resources/client/drive/search/drive-search-filters.ts","../../../resources/client/drive/search/search-filter-list.tsx","../../../common/resources/client/ui/interactions/utils/restrict-resizable-within-boundary.ts","../../../common/resources/client/ui/interactions/dnd/mouse-selection/use-mouse-selectable.ts","../../../common/resources/client/ui/interactions/utils/rects-intersect.ts","../../../common/resources/client/ui/interactions/dnd/mouse-selection/use-mouse-selection-box.ts","../../../resources/client/drive/files/queries/use-entries.ts","../../../resources/client/drive/files/use-selected-entries.ts","../../../resources/client/drive/entry-actions/entry-action-list.tsx","../../../resources/client/drive/files/drive-context-menu.tsx","../../../common/resources/client/utils/hooks/is-touch-device.ts","../../../resources/client/drive/file-view/use-file-view-dnd.ts","../../../resources/client/drive/file-view/file-table/file-table-row.tsx","../../../resources/client/drive/file-view/use-view-item-action-handler.ts","../../../resources/client/drive/file-view/file-table/file-table.tsx","../../../resources/client/drive/file-view/file-grid/file-grid-item.tsx","../../../resources/client/drive/file-view/file-grid/file-grid.tsx","../../../resources/client/drive/layout/sorting/drive-sort-button.tsx","../../../resources/client/drive/page-breadcrumbs.tsx","../../../common/resources/client/ui/infinite-scroll/infinite-scroll-sentinel.tsx","../../../resources/client/drive/drop-target-mask.tsx","../../../resources/client/drive/file-view/file-view.tsx","../../../resources/client/drive/uploading/upload-queue-item.tsx","../../../resources/client/drive/uploading/upload-queue.tsx","../../../resources/client/drive/details-sidebar/detailed-examination.svg","../../../resources/client/drive/details-sidebar/details-sidebar-header.tsx","../../../resources/client/drive/details-sidebar/details-sidebar-section-header.tsx","../../../resources/client/drive/details-sidebar/requests/use-sync-entry-tags.ts","../../../resources/client/drive/details-sidebar/requests/use-file-entry-tags.ts","../../../resources/client/drive/details-sidebar/details-sidebar-tags.tsx","../../../resources/client/drive/details-sidebar/details-sidebar-properties.tsx","../../../resources/client/drive/details-sidebar/details-sidebar.tsx","../../../resources/client/drive/files/queries/use-rename-entry.ts","../../../resources/client/drive/files/dialogs/rename-entry-dialog.tsx","../../../resources/client/drive/files/queries/create-folder.ts","../../../resources/client/drive/files/dialogs/new-folder-dialog.tsx","../../../resources/client/drive/files/dialogs/entry-preview-dialog.tsx","../../../resources/client/drive/share-dialog/queries/use-share-entry.ts","../../../resources/client/drive/files/drive-entry.ts","../../../resources/client/drive/share-dialog/permission-selector.tsx","../../../resources/client/drive/share-dialog/queries/use-change-permission.ts","../../../common/resources/client/ui/images/user-avatar.tsx","../../../resources/client/drive/share-dialog/member-list.tsx","../../../resources/client/drive/share-dialog/share-panel.tsx","../../../resources/client/drive/shareable-link/queries/use-entry-shareable-link.ts","../../../resources/client/drive/shareable-link/queries/use-delete-shareable-link.ts","../../../common/resources/client/utils/string/random-string.ts","../../../resources/client/drive/share-dialog/link-panel/shareable-link-panel.tsx","../../../resources/client/drive/shareable-link/queries/use-update-shareable-link.ts","../../../resources/client/drive/share-dialog/link-panel/link-settings-dialog.tsx","../../../resources/client/drive/share-dialog/share-dialog.tsx","../../../resources/client/drive/files/dialogs/move-entries-dialog/move-entries-dialog-search.tsx","../../../resources/client/drive/files/dialogs/move-entries-dialog/move-entries-dialog-breadcrumbs.tsx","../../../resources/client/drive/files/dialogs/move-entries-dialog/my-files.svg","../../../resources/client/drive/files/dialogs/move-entries-dialog/move-entries-dialog-folder-list.tsx","../../../resources/client/drive/files/dialogs/move-entries-dialog/move-entries-dialog.tsx","../../../resources/client/drive/files/dialogs/delete-entries-forever-dialog.tsx","../../../resources/client/drive/files/dialogs/block-trash-folder-view-dialog.tsx","../../../resources/client/drive/files/dialogs/drive-dialogs-container.tsx","../../../resources/client/drive/search/navbar-search.tsx","../../../common/resources/client/ui/interactions/dnd/use-drag-monitor.ts","../../../resources/client/drive/file-view/entry-drag-preview.tsx","../../../resources/client/drive/layout/drive-content-header.tsx","../../../resources/client/drive/layout/drive-layout.tsx","../../../resources/client/drive/drive-routes.tsx"],"sourcesContent":["// src/infiniteQueryObserver.ts\nimport { QueryObserver } from \"./queryObserver.js\";\nimport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior\n} from \"./infiniteQueryBehavior.js\";\nvar InfiniteQueryObserver = class extends QueryObserver {\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  constructor(client, options) {\n    super(client, options);\n  }\n  bindMethods() {\n    super.bindMethods();\n    this.fetchNextPage = this.fetchNextPage.bind(this);\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this);\n  }\n  setOptions(options, notifyOptions) {\n    super.setOptions(\n      {\n        ...options,\n        behavior: infiniteQueryBehavior()\n      },\n      notifyOptions\n    );\n  }\n  getOptimisticResult(options) {\n    options.behavior = infiniteQueryBehavior();\n    return super.getOptimisticResult(options);\n  }\n  fetchNextPage(options) {\n    return this.fetch({\n      ...options,\n      meta: {\n        fetchMore: { direction: \"forward\" }\n      }\n    });\n  }\n  fetchPreviousPage(options) {\n    return this.fetch({\n      ...options,\n      meta: {\n        fetchMore: { direction: \"backward\" }\n      }\n    });\n  }\n  createResult(query, options) {\n    const { state } = query;\n    const result = super.createResult(query, options);\n    const { isFetching, isRefetching } = result;\n    const isFetchingNextPage = isFetching && state.fetchMeta?.fetchMore?.direction === \"forward\";\n    const isFetchingPreviousPage = isFetching && state.fetchMeta?.fetchMore?.direction === \"backward\";\n    return {\n      ...result,\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: hasNextPage(options, state.data),\n      hasPreviousPage: hasPreviousPage(options, state.data),\n      isFetchingNextPage,\n      isFetchingPreviousPage,\n      isRefetching: isRefetching && !isFetchingNextPage && !isFetchingPreviousPage\n    };\n  }\n};\nexport {\n  InfiniteQueryObserver\n};\n//# sourceMappingURL=infiniteQueryObserver.js.map","\"use client\";\n\n// src/useInfiniteQuery.ts\nimport { InfiniteQueryObserver } from \"@tanstack/query-core\";\nimport { useBaseQuery } from \"./useBaseQuery.js\";\nfunction useInfiniteQuery(options, queryClient) {\n  return useBaseQuery(\n    options,\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n    InfiniteQueryObserver,\n    queryClient\n  );\n}\nexport {\n  useInfiniteQuery\n};\n//# sourceMappingURL=useInfiniteQuery.js.map","import type {DriveApiIndexParams} from './files/queries/use-paginated-entries';\nimport type {UserFoldersApiParams} from './files/queries/use-folders';\nimport {queryClient} from '@common/http/query-client';\nimport {Key} from 'react';\n\nexport const DriveQueryKeys = {\n  fetchEntries: (params?: DriveApiIndexParams) => {\n    const key: ('drive-entries' | DriveApiIndexParams)[] = ['drive-entries'];\n    if (params) key.push(params);\n    return key;\n  },\n  fetchUserFolders(params?: UserFoldersApiParams) {\n    const key: (string | UserFoldersApiParams)[] = ['user-folders'];\n    if (params) {\n      key.push(params);\n    }\n    return key;\n  },\n  fetchShareableLink: (params?: {hash?: string; sort?: string}) => {\n    const key: (string | object)[] = ['shareable-link'];\n    if (params) {\n      key.push(params);\n    }\n    return key;\n  },\n  fetchFolderPath(\n    hash?: string,\n    params?: Record<string, string | number | null>,\n  ) {\n    const key: (string | any)[] = ['folder-path'];\n    if (hash) {\n      key.push(hash);\n    }\n    if (params) {\n      key.push(params);\n    }\n    return key;\n  },\n  fetchEntryShareableLink: (entryId: number) => {\n    return ['file-entries', entryId, 'shareable-link'];\n  },\n  fetchFileEntry: (id?: number) => {\n    const key: Key[] = ['drive/file-entries/model'];\n    if (id) key.push(id);\n    return key;\n  },\n  fetchStorageSummary: ['storage-summary'],\n};\n\nexport function invalidateEntryQueries() {\n  return Promise.all([\n    queryClient.invalidateQueries({queryKey: DriveQueryKeys.fetchEntries()}),\n    queryClient.invalidateQueries({queryKey: DriveQueryKeys.fetchFolderPath()}),\n    queryClient.invalidateQueries({\n      queryKey: DriveQueryKeys.fetchUserFolders(),\n    }),\n    // fetching model for single file entry in \"useFileEntry\"\n    queryClient.invalidateQueries({queryKey: DriveQueryKeys.fetchFileEntry()}),\n  ]);\n}\n","import {create} from 'zustand';\nimport {immer} from 'zustand/middleware/immer';\nimport {DriveSortDescriptor} from '../../drive-store';\nimport {\n  getFromLocalStorage,\n  setInLocalStorage,\n} from '@common/utils/hooks/local-storage';\n\ninterface LinkPageState {\n  password: string | null;\n  setPassword: (value: string) => void;\n  isPasswordProtected: boolean;\n  setIsPasswordProtected: (value: boolean) => void;\n  activeSort: DriveSortDescriptor;\n  setActiveSort: (value: DriveSortDescriptor) => void;\n  viewMode: 'grid' | 'list';\n  setViewMode: (mode: 'grid' | 'list') => void;\n}\n\nexport const useLinkPageStore = create<LinkPageState>()(\n  immer(set => ({\n    password: null,\n    viewMode: getFromLocalStorage<'list' | 'grid'>('drive.viewMode'),\n    activeSort: {\n      orderBy: 'updated_at',\n      orderDir: 'desc',\n    },\n    setPassword: value => {\n      set(state => {\n        state.password = value;\n      });\n    },\n    isPasswordProtected: false,\n    setIsPasswordProtected: value => {\n      set(state => {\n        state.isPasswordProtected = value;\n      });\n    },\n\n    setViewMode: mode => {\n      set(state => {\n        state.viewMode = mode;\n        setInLocalStorage('drive.viewMode', mode);\n      });\n    },\n    setActiveSort: value => {\n      set(state => {\n        state.activeSort = value;\n      });\n    },\n  }))\n);\n\nexport function linkPageState() {\n  return useLinkPageStore.getState();\n}\n","import {keepPreviousData, useInfiniteQuery} from '@tanstack/react-query';\nimport {useParams} from 'react-router-dom';\nimport type {FetchShareableLinkResponse} from './use-entry-shareable-link';\nimport type {DriveEntry} from '../../files/drive-entry';\nimport {DriveQueryKeys} from '../../drive-query-keys';\nimport {\n  linkPageState,\n  useLinkPageStore,\n} from '../shareable-link-page/link-page-store';\nimport {LengthAwarePaginationResponse} from '@common/http/backend-response/pagination-response';\nimport {apiClient} from '@common/http/query-client';\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\n\nexport interface FetchShareableLinkPageResponse\n  extends FetchShareableLinkResponse {\n  folderChildren: LengthAwarePaginationResponse<DriveEntry>;\n  passwordInvalid: boolean;\n}\n\nexport function useShareableLinkPage() {\n  const {hash} = useParams();\n  const {orderBy, orderDir} = useLinkPageStore(s => s.activeSort);\n  const order = `${orderBy}:${orderDir}`;\n  const isPasswordProtected = useLinkPageStore(s => s.isPasswordProtected);\n  const password = useLinkPageStore(s => s.password);\n\n  const query = useInfiniteQuery({\n    queryKey: DriveQueryKeys.fetchShareableLink({hash, sort: order}),\n    queryFn: async ({pageParam = 1}) => {\n      const response = await fetchLinkByHash({\n        hash: hash!,\n        page: pageParam,\n        order,\n        password,\n      });\n      if (response.passwordInvalid) {\n        linkPageState().setIsPasswordProtected(true);\n      }\n      return response;\n    },\n    initialData: () => {\n      const data = getBootstrapData().loaders?.shareableLinkPage;\n      if (data && data.link?.hash === hash) {\n        if (data.passwordInvalid) {\n          linkPageState().setIsPasswordProtected(true);\n        }\n        return {\n          pageParams: [undefined, 1],\n          pages: [data],\n        };\n      }\n    },\n    initialPageParam: 1,\n    getNextPageParam: lastResponse => {\n      if (!lastResponse.folderChildren) return undefined;\n      const currentPage = lastResponse.folderChildren.current_page;\n      const lastPage = lastResponse.folderChildren.last_page;\n      if (currentPage >= lastPage) {\n        return undefined;\n      }\n      return currentPage + 1;\n    },\n    // disable query if link is password protected and correct\n    // password was not entered yet, to prevent unnecessary requests\n    enabled: (!!hash && !isPasswordProtected) || password != null,\n    placeholderData: keepPreviousData,\n  });\n\n  return {\n    ...query,\n    link: query.data?.pages[0].link,\n    entries: query.data?.pages.flatMap(p => p.folderChildren?.data),\n  };\n}\n\ninterface FetchLinkByHashParams {\n  hash: string;\n  page?: number;\n  order?: string;\n  password?: string | null;\n}\nfunction fetchLinkByHash({\n  hash,\n  page = 1,\n  order,\n  password,\n}: FetchLinkByHashParams): Promise<FetchShareableLinkPageResponse> {\n  return apiClient\n    .get(`shareable-links/${hash}`, {\n      params: {loader: 'shareableLinkPage', page, order, password},\n    })\n    .then(response => response.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {linkPageState} from '../link-page-store';\nimport {apiClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {message} from '@common/i18n/message';\n\ninterface Response extends BackendResponse {\n  matches: boolean;\n}\n\ninterface Props {\n  password: string;\n  linkHash: string;\n}\n\nfunction checkLinkPassword({password, linkHash}: Props): Promise<Response> {\n  return apiClient\n    .post(`shareable-links/${linkHash}/check-password`, {password})\n    .then(r => r.data);\n}\n\nexport function useCheckLinkPassword() {\n  return useMutation({\n    mutationFn: (props: Props) => checkLinkPassword(props),\n    onSuccess: (response, props) => {\n      if (response.matches) {\n        linkPageState().setPassword(props.password);\n      }\n    },\n    onError: err => showHttpErrorToast(err, message('Could not create link')),\n  });\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {DriveEntryUser} from '../../../files/drive-entry';\nimport {toast} from '@common/ui/toast/toast';\nimport {useLinkPageStore} from '../link-page-store';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {DriveQueryKeys} from '../../../drive-query-keys';\nimport {message} from '@common/i18n/message';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  users: DriveEntryUser[];\n}\n\ninterface Props {\n  password: string | null;\n  linkId: number;\n}\n\nfunction importIntoOwnDrive({linkId, password}: Props): Promise<Response> {\n  return apiClient\n    .post(`shareable-links/${linkId}/import`, {password})\n    .then(r => r.data);\n}\n\nexport function useImportIntoOwnDrive() {\n  const password = useLinkPageStore(s => s.password);\n  return useMutation({\n    mutationFn: (props: Omit<Props, 'password'>) =>\n      importIntoOwnDrive({...props, password}),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({\n        queryKey: DriveQueryKeys.fetchShareableLink(),\n      });\n      toast(message('Item imported into your drive'));\n    },\n    onError: err => showHttpErrorToast(err, message('Could not create link')),\n  });\n}\n","import {useShareableLinkPage} from '../queries/use-shareable-link-page';\nimport {useAuth} from '@common/auth/use-auth';\nimport {useFileEntryUrls} from '@common/uploads/hooks/file-entry-urls';\nimport {useImportIntoOwnDrive} from './queries/import-into-own-drive';\nimport {Button} from '@common/ui/buttons/button';\nimport {FileDownloadIcon} from '@common/icons/material/FileDownload';\nimport {downloadFileFromUrl} from '@common/uploads/utils/download-file-from-url';\nimport {Trans} from '@common/i18n/trans';\nimport {\n  Menu,\n  MenuItem,\n  MenuTrigger,\n} from '@common/ui/navigation/menu/menu-trigger';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {KeyboardArrowDownIcon} from '@common/icons/material/KeyboardArrowDown';\nimport {ImportExportIcon} from '@common/icons/material/ImportExport';\nimport React, {Fragment} from 'react';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\n\nexport function ShareableLinkPageActionButtons() {\n  const {link} = useShareableLinkPage();\n  const {user, isLoggedIn} = useAuth();\n  const {downloadUrl} = useFileEntryUrls(link?.entry);\n  const importIntoOwnDrive = useImportIntoOwnDrive();\n  const alreadyImported = link?.entry?.users!.find(u => u.id === user?.id);\n\n  if (!link?.entry) return null;\n\n  return (\n    <div>\n      {link.allow_download && <DownloadButton downloadUrl={downloadUrl} />}\n      {!alreadyImported && isLoggedIn && link.allow_edit && (\n        <MenuTrigger\n          onItemSelected={key => {\n            if (key === 'import') {\n              importIntoOwnDrive.mutate({linkId: link.id});\n            } else if (key === 'download') {\n              if (downloadUrl) {\n                downloadFileFromUrl(downloadUrl);\n              }\n            }\n          }}\n        >\n          <IconButton className=\"ml-6\" disabled={importIntoOwnDrive.isPending}>\n            <KeyboardArrowDownIcon />\n          </IconButton>\n          <Menu>\n            <MenuItem value=\"download\" startIcon={<FileDownloadIcon />}>\n              <Trans message=\"Download\" />\n            </MenuItem>\n            <MenuItem value=\"import\" startIcon={<ImportExportIcon />}>\n              <Trans message=\"Save a copy to your own drive\" />\n            </MenuItem>\n          </Menu>\n        </MenuTrigger>\n      )}\n    </div>\n  );\n}\n\ninterface DownloadButtonProps {\n  downloadUrl: string | undefined;\n}\nfunction DownloadButton({downloadUrl}: DownloadButtonProps) {\n  return (\n    <Fragment>\n      <Tooltip label={<Trans message=\"Download\" />}>\n        <IconButton\n          className=\"md:hidden\"\n          onClick={() => {\n            if (downloadUrl) {\n              downloadFileFromUrl(downloadUrl);\n            }\n          }}\n        >\n          <FileDownloadIcon />\n        </IconButton>\n      </Tooltip>\n      <Button\n        className=\"max-md:hidden\"\n        size=\"sm\"\n        variant=\"flat\"\n        color=\"chip\"\n        startIcon={<FileDownloadIcon />}\n        onClick={() => {\n          if (downloadUrl) {\n            downloadFileFromUrl(downloadUrl);\n          }\n        }}\n      >\n        <Trans message=\"Download\" />\n      </Button>\n    </Fragment>\n  );\n}\n","import React from 'react';\nimport {FileTypeIcon} from '@common/uploads/file-type-icon/file-type-icon';\nimport {Navbar} from '@common/ui/navigation/navbar/navbar';\nimport {useShareableLinkPage} from '../queries/use-shareable-link-page';\nimport {ShareableLinkPageActionButtons} from './shareable-link-page-action-buttons';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\n\nexport function ShareableLinkNavbar() {\n  const {link} = useShareableLinkPage();\n  const isMobile = useIsMobileMediaQuery();\n  return (\n    <Navbar\n      size=\"md\"\n      color=\"bg\"\n      className=\"flex-shrink-0\"\n      rightChildren={link?.entry && <ShareableLinkPageActionButtons />}\n      menuPosition=\"shareable-link-page\"\n      hideLogo={isMobile}\n    >\n      {link?.entry && link.entry.type !== 'folder' && (\n        <div className=\"fex-auto flex min-w-0 items-center gap-10\">\n          <FileTypeIcon className=\"flex-shrink-0\" type={link.entry.type} />\n          <div className=\"flex-auto overflow-hidden overflow-ellipsis whitespace-nowrap font-medium\">\n            {link.entry.name}\n          </div>\n        </div>\n      )}\n    </Navbar>\n  );\n}\n","import {useState} from 'react';\nimport {SvgImage} from '@common/ui/images/svg-image/svg-image';\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {Button} from '@common/ui/buttons/button';\nimport {useCheckLinkPassword} from './queries/check-link-password';\nimport {Trans} from '@common/i18n/trans';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {ShareableLinkNavbar} from './shareable-link-navbar';\nimport {useParams} from 'react-router-dom';\nimport secureFilesSvg from '@common/auth/ui/account-settings/access-token-panel/secure-files.svg';\n\nexport function PasswordPage() {\n  const {trans} = useTrans();\n  const {hash} = useParams();\n  const fieldLabel = trans({message: 'Password'});\n  const [password, setPassword] = useState<string>('');\n  const checkPassword = useCheckLinkPassword();\n  const linkHash = hash ? hash.split(':')[0] : null;\n\n  const passwordIsInvalid = checkPassword.data && !checkPassword.data.matches;\n\n  return (\n    <div className=\"flex h-screen flex-col bg-alt\">\n      <ShareableLinkNavbar />\n      <div className=\"mx-auto my-80 px-10 md:px-20\">\n        <div className=\"flex max-w-[560px] flex-col items-center gap-40 rounded border bg p-24 md:flex-row md:gap-14\">\n          <div className=\"h-132 w-[165px]\">\n            <SvgImage src={secureFilesSvg} />\n          </div>\n          <form\n            onSubmit={e => {\n              e.preventDefault();\n              checkPassword.mutate({\n                linkHash: linkHash!,\n                password,\n              });\n            }}\n          >\n            <span className=\"text-sm\">\n              <Trans message=\"The link you are trying to access is password protected.\" />\n            </span>\n            <TextField\n              autoFocus\n              placeholder={fieldLabel}\n              aria-label={fieldLabel}\n              className=\"mb-20 mt-10\"\n              type=\"password\"\n              value={password}\n              required\n              errorMessage={\n                passwordIsInvalid && <Trans message=\"Password is not valid\" />\n              }\n              onChange={e => {\n                setPassword(e.target.value);\n              }}\n            />\n            <div className=\"text-right\">\n              <Button\n                variant=\"flat\"\n                color=\"primary\"\n                type=\"submit\"\n                className=\"w-full md:w-auto\"\n                disabled={checkPassword.isPending}\n              >\n                <Trans message=\"Enter\" />\n              </Button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, {ComponentPropsWithoutRef, ReactNode} from 'react';\nimport clsx from 'clsx';\nimport {FileThumbnail} from '@common/uploads/file-type-icon/file-thumbnail';\nimport {DriveEntry} from '../../files/drive-entry';\n\ninterface BaseFileGridItemProps extends ComponentPropsWithoutRef<'div'> {\n  entry: DriveEntry;\n  className?: string;\n  isSelected?: boolean;\n  isMobileMode?: boolean;\n  footerAdornment?: ReactNode;\n}\n\nexport const BaseFileGridItem = React.forwardRef<\n  HTMLDivElement,\n  BaseFileGridItemProps\n>(\n  (\n    {entry, className, isSelected, isMobileMode, footerAdornment, ...domProps},\n    ref\n  ) => {\n    return (\n      <div\n        {...domProps}\n        ref={ref}\n        className={clsx(\n          'shadow rounded border aspect-square flex flex-col grid-item transition-shadow-opacity select-none overflow-hidden outline-none dark:bg-alt',\n          isSelected && 'border-primary',\n          className\n        )}\n      >\n        <div className=\"flex-auto relative min-h-0\">\n          <FileThumbnail\n            className=\"h-full w-full\"\n            iconClassName=\"block w-70 h-70 absolute m-auto inset-0\"\n            file={entry}\n          />\n        </div>\n        <Footer\n          entry={entry}\n          isSelected={isSelected}\n          isMobile={isMobileMode}\n          adornment={footerAdornment}\n        />\n      </div>\n    );\n  }\n);\n\ninterface FooterProps {\n  entry: DriveEntry;\n  isSelected?: boolean;\n  isMobile?: boolean;\n  adornment?: ReactNode;\n}\nfunction Footer({entry, isSelected, isMobile, adornment}: FooterProps) {\n  return (\n    <div\n      className={clsx(\n        'text-sm h-48 flex-shrink-0 flex items-center',\n        isMobile ? 'justify-between gap-10 pl-18 pr-2' : 'justify-center px-16',\n        isSelected && 'bg-primary-light/20'\n      )}\n    >\n      <div className=\"min-w-0 whitespace-nowrap overflow-hidden overflow-ellipsis\">\n        {entry.name}\n      </div>\n      {adornment}\n    </div>\n  );\n}\n","import {BaseFileGridItem} from '../../../file-view/file-grid/base-file-grid-item';\nimport React from 'react';\nimport {DriveEntry} from '../../../files/drive-entry';\n\nexport interface FolderPreviewGridProps {\n  entries: DriveEntry[];\n  onEntrySelected: (entry: DriveEntry, index: number) => void;\n}\nexport function FolderPreviewFileGrid({\n  entries,\n  onEntrySelected,\n}: FolderPreviewGridProps) {\n  return (\n    <div className=\"file-grid\">\n      {entries.map((entry, index) => (\n        <BaseFileGridItem\n          tabIndex={-1}\n          className=\"hover:shadow-md cursor-pointer bg\"\n          entry={entry}\n          key={entry.id}\n          onContextMenu={e => {\n            e.preventDefault();\n          }}\n          onKeyDown={e => {\n            if (e.key === 'Enter' || e.key === ' ') {\n              onEntrySelected(entry, index);\n            }\n          }}\n          onClick={() => {\n            onEntrySelected(entry, index);\n          }}\n        />\n      ))}\n    </div>\n  );\n}\n","import {enableMapSet} from 'immer';\nimport {create} from 'zustand';\nimport {immer} from 'zustand/middleware/immer';\nimport type {DrivePage} from './drive-page/drive-page';\nimport {Key} from 'react';\nimport {DriveEntry} from './files/drive-entry';\nimport {SortColumn, SortDirection} from './layout/sorting/available-sorts';\nimport {\n  getFromLocalStorage,\n  setInLocalStorage,\n} from '@common/utils/hooks/local-storage';\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\n\nconst stableArray: DriveEntry[] = [];\nenableMapSet();\n\nexport type DriveDialog =\n  | 'rename'\n  | 'newFolder'\n  | 'preview'\n  | 'share'\n  | 'getLink'\n  | 'moveTo'\n  | 'confirmAndDeleteForever'\n  | 'trashFolderBlock';\n\nexport interface ActiveActionDialog {\n  name: DriveDialog;\n  entries: DriveEntry[];\n}\n\nexport interface DriveSortDescriptor {\n  orderBy?: SortColumn;\n  orderDir?: SortDirection;\n}\n\ninterface State {\n  uploadQueueIsOpen: boolean;\n  selectedEntries: Set<number>;\n  sidebarExpandedKeys: Key[];\n  activePage?: DrivePage;\n  activeActionDialog?: {\n    name: DriveDialog;\n    entries: DriveEntry[];\n  } | null;\n  entriesBeingDragged: number[];\n  viewMode: 'grid' | 'list';\n  sortDescriptor: DriveSortDescriptor;\n  contextMenuData: {x: number; y: number; entry?: DriveEntry} | null;\n}\n\ninterface Actions {\n  setUploadQueueIsOpen: (isOpen: boolean) => void;\n  setSidebarExpandedKeys: (keys: Key[]) => void;\n  expandSidebarItem: (key: Key) => void;\n  collapseSidebarItem: (key: Key) => void;\n  toggleSidebarItem: (key: Key) => void;\n  setActivePage: (page: DrivePage) => void;\n  setActiveActionDialog: (\n    name: DriveDialog | null,\n    entries?: DriveEntry[]\n  ) => void;\n  setViewMode: (mode: 'grid' | 'list') => void;\n  setSortDescriptor: (value: DriveSortDescriptor) => void;\n  setContextMenuData: (\n    position: {x: number; y: number; entry?: DriveEntry} | null\n  ) => void;\n  setEntriesBeingDragged: (value: number[]) => void;\n  selectEntries: (\n    entries: (number | undefined | null)[],\n    merge?: boolean\n  ) => void;\n  deselectEntries: (entries: number[] | 'all') => void;\n  reset: () => void;\n}\n\nconst initialState: State = {\n  uploadQueueIsOpen: false,\n  contextMenuData: null,\n  selectedEntries: new Set(),\n  entriesBeingDragged: [],\n  activeActionDialog: null,\n  sidebarExpandedKeys: [],\n  viewMode: getFromLocalStorage<'list' | 'grid'>(\n    'drive.viewMode',\n    getBootstrapData().settings?.drive?.default_view || 'grid'\n  ),\n  sortDescriptor: {\n    orderBy: 'updated_at',\n    orderDir: 'desc',\n  },\n};\n\nexport const useDriveStore = create<State & Actions>()(\n  immer((set, get) => ({\n    ...initialState,\n    setUploadQueueIsOpen: isOpen => {\n      set(state => {\n        state.uploadQueueIsOpen = isOpen;\n      });\n    },\n    setContextMenuData: data => {\n      set(state => {\n        state.contextMenuData = data;\n      });\n    },\n    setSortDescriptor: value => {\n      set(state => {\n        const activePageId = get().activePage?.id;\n        if (activePageId) {\n          setInLocalStorage('selectedSorting', {\n            ...getFromLocalStorage('selectedSorting'),\n            [activePageId]: value,\n          });\n        }\n        state.sortDescriptor = value;\n      });\n    },\n    setActivePage: value => {\n      set(state => {\n        state.activePage = value;\n\n        const storedDescriptor =\n          getFromLocalStorage('selectedSorting')?.[value.id];\n        state.sortDescriptor = storedDescriptor\n          ? storedDescriptor\n          : value.sortDescriptor;\n      });\n    },\n    setEntriesBeingDragged: value => {\n      set(state => {\n        state.entriesBeingDragged = value;\n      });\n    },\n    setActiveActionDialog: (name, entries = stableArray) => {\n      set(state => {\n        const current = get().activeActionDialog;\n        // prevent creating a new object, if neither name nor entries changed\n        if (current?.name !== name || current.entries !== entries) {\n          state.activeActionDialog = name ? {name, entries} : null;\n        }\n      });\n    },\n    setViewMode: mode => {\n      set(state => {\n        state.viewMode = mode;\n        setInLocalStorage('drive.viewMode', mode);\n      });\n    },\n    setSidebarExpandedKeys: value =>\n      set(state => {\n        state.sidebarExpandedKeys = value;\n      }),\n    expandSidebarItem: key =>\n      set(state => {\n        if (!state.sidebarExpandedKeys.includes(key)) {\n          state.sidebarExpandedKeys.push(key);\n        }\n      }),\n    collapseSidebarItem: key =>\n      set(state => {\n        const index = state.sidebarExpandedKeys.indexOf(key);\n        if (index > -1) {\n          state.sidebarExpandedKeys.splice(index, 1);\n        }\n      }),\n    toggleSidebarItem: key =>\n      set(state => {\n        if (state.sidebarExpandedKeys.includes(key)) {\n          state.expandSidebarItem(key);\n        } else {\n          state.collapseSidebarItem(key);\n        }\n      }),\n    selectEntries: (entries, merge) => {\n      set(state => {\n        if (!merge) {\n          state.selectedEntries.clear();\n        }\n        entries.forEach(e => e && state.selectedEntries.add(e));\n      });\n    },\n    deselectEntries: entries => {\n      set(state => {\n        if (!state.selectedEntries.size) return;\n        if (entries === 'all') {\n          state.selectedEntries = new Set();\n        } else {\n          entries.forEach(e => state.selectedEntries.delete(e));\n        }\n      });\n    },\n    reset: () => {\n      set(initialState);\n    },\n  }))\n);\n\nexport function driveState() {\n  return useDriveStore.getState();\n}\n\nexport function useActiveDialogEntry() {\n  const dialog = useDriveStore(s => s.activeActionDialog);\n  // this will only be used inside dialog, so entry will always be set in that case\n  return dialog?.entries[0]!;\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {FetchShareableLinkResponse} from './use-entry-shareable-link';\nimport {DriveQueryKeys} from '../../drive-query-keys';\nimport {message} from '@common/i18n/message';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\nfunction createShareableLink(\n  entryId?: number | null,\n): Promise<FetchShareableLinkResponse> {\n  if (!entryId) {\n    return Promise.reject(new Error('Invalid entry id'));\n  }\n  return apiClient\n    .post(`file-entries/${entryId}/shareable-link`)\n    .then(response => response.data);\n}\n\ninterface Payload {\n  entryId: number;\n}\nexport function useCreateShareableLink() {\n  return useMutation({\n    mutationFn: ({entryId}: Payload) => createShareableLink(entryId),\n    onSuccess: (data, {entryId}) => {\n      queryClient.setQueryData<FetchShareableLinkResponse>(\n        DriveQueryKeys.fetchEntryShareableLink(entryId),\n        data,\n      );\n    },\n    onError: err => showHttpErrorToast(err, message('Could not create link')),\n  });\n}\n","import {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@common/ui/toast/toast';\nimport {Tag} from '@common/tags/tag';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\nimport {message} from '@common/i18n/message';\nimport {useMutation} from '@tanstack/react-query';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  tag: Tag;\n}\n\ninterface Payload {\n  entryIds: number[];\n}\n\nfunction addStarToEntries({entryIds}: Payload): Promise<Response> {\n  return apiClient\n    .post('file-entries/star', {entryIds})\n    .then(response => response.data);\n}\n\nexport function useAddStarToEntries() {\n  return useMutation({\n    mutationFn: (payload: Payload) => addStarToEntries(payload),\n    onSuccess: (data, {entryIds}) => {\n      invalidateEntryQueries();\n      toast(\n        message('Starred [one 1 item|other :count items]', {\n          values: {count: entryIds.length},\n        }),\n      );\n    },\n    onError: err => showHttpErrorToast(err, message('Could not star items')),\n  });\n}\n","import {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@common/ui/toast/toast';\nimport {Tag} from '@common/tags/tag';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\nimport {message} from '@common/i18n/message';\nimport {useMutation} from '@tanstack/react-query';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  tag: Tag;\n}\n\ninterface Payload {\n  entryIds: number[];\n}\n\nfunction removeStarFromEntries({entryIds}: Payload): Promise<Response> {\n  return apiClient\n    .post('file-entries/unstar', {entryIds})\n    .then(response => response.data);\n}\n\nexport function useRemoveStarFromEntries() {\n  return useMutation({\n    mutationFn: (payload: Payload) => removeStarFromEntries(payload),\n    onSuccess: (data, {entryIds}) => {\n      invalidateEntryQueries();\n      toast(\n        message('Removed star from [one 1 item|other :count items]', {\n          values: {count: entryIds.length},\n        }),\n      );\n    },\n    onError: err => showHttpErrorToast(err, message('Could not remove star')),\n  });\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {DriveEntry} from '../drive-entry';\nimport {toast} from '@common/ui/toast/toast';\nimport {DriveQueryKeys, invalidateEntryQueries} from '../../drive-query-keys';\nimport {message} from '@common/i18n/message';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  entries: DriveEntry[];\n}\n\ninterface Payload {\n  entryIds: number[];\n  destinationId?: number;\n}\n\nfunction duplicateEntries(payload: Payload): Promise<Response> {\n  return apiClient\n    .post('file-entries/duplicate', payload)\n    .then(response => response.data);\n}\n\nexport function useDuplicateEntries() {\n  return useMutation({\n    mutationFn: (payload: Payload) => {\n      toast.loading(\n        message('Duplicating [one 1 item|other :count items]...', {\n          values: {\n            count: payload.entryIds.length,\n          },\n        }),\n        {disableExitAnimation: true},\n      );\n      return duplicateEntries(payload);\n    },\n    onSuccess: (r, p) => {\n      invalidateEntryQueries();\n      queryClient.invalidateQueries({\n        queryKey: DriveQueryKeys.fetchStorageSummary,\n      });\n      toast(\n        message('Duplicated [one 1 item|other :count items]', {\n          values: {count: p.entryIds.length},\n        }),\n        {disableEnterAnimation: true},\n      );\n    },\n    onError: err =>\n      showHttpErrorToast(err, message('Could not duplicate items'), null, {\n        disableEnterAnimation: true,\n      }),\n  });\n}\n","export default \"__VITE_ASSET__fdd45f16__\"","export default \"__VITE_ASSET__189838f6__\"","export default \"__VITE_ASSET__bc08ea77__\"","export default \"__VITE_ASSET__94ef2bf1__\"","export default \"__VITE_ASSET__291df933__\"","export default \"__VITE_ASSET__5cc493df__\"","import type {DriveFolder} from '../files/drive-entry';\nimport {message} from '@common/i18n/message';\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\nimport addFilesSvg from './add-files.svg';\nimport timeManagement from './time-management.svg';\nimport fileSearching from './file-searching.svg';\nimport throwAwaySvg from './throw-away.svg';\nimport lovingItSvg from './loving-it.svg';\nimport shareSvg from './../shareable-link/shareable-link-page/folder-preview/share.svg';\nimport {DriveSortDescriptor} from '../drive-store';\nimport {BootstrapData} from '@common/core/bootstrap-data/bootstrap-data';\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\n\ninterface NoContentMessage {\n  title: MessageDescriptor;\n  description: MessageDescriptor;\n  image: string;\n}\n\nexport interface DrivePage {\n  id: string;\n  label: MessageDescriptor | string;\n  path: string;\n  hasActions?: boolean;\n  canUpload?: boolean;\n  disableSort?: boolean;\n  sortDescriptor: DriveSortDescriptor;\n  queryParams?: Record<string, string | number | boolean>;\n  folder?: DriveFolder;\n  isFolderPage?: boolean;\n  noContentMessage: (isSearchingOrFiltering: boolean) => NoContentMessage;\n}\n\nconst defaultSortDescriptor: DriveSortDescriptor = {\n  orderBy: 'updated_at',\n  orderDir: 'desc',\n};\n\nexport function makeFolderPage(folder: DriveFolder): DrivePage {\n  return {\n    ...makePartialFolderPage(folder.hash),\n    canUpload:\n      folder.permissions['files.create'] || folder.permissions['files.update'],\n    label: folder.name,\n    folder,\n  };\n}\n\nexport function makePartialFolderPage(hash: string): DrivePage {\n  return {\n    id: hash,\n    label: '',\n    path: getPathForFolder(hash),\n    hasActions: true,\n    canUpload: false,\n    sortDescriptor: defaultSortDescriptor,\n    isFolderPage: true,\n    noContentMessage: () => ({\n      title: message('Drop files or folders here'),\n      description: message('Or use the \"Upload\" button'),\n      image: addFilesSvg,\n    }),\n  };\n}\n\nexport function getPathForFolder(hash: string): string {\n  if (hash === '0') {\n    return '/drive';\n  }\n  return `/drive/folders/${hash}`;\n}\n\n// bootstrap data will always be available at this point\ninterface BootstrapDataWithRootFolder extends BootstrapData {\n  rootFolder: DriveFolder;\n}\nconst rootFolder = (getBootstrapData() as BootstrapDataWithRootFolder)\n  .rootFolder;\nexport const RootFolderPage = makeFolderPage(rootFolder) as Required<DrivePage>;\n\nexport const RecentPage: DrivePage = {\n  id: 'recent',\n  label: message('Recent'),\n  path: '/drive/recent',\n  disableSort: true,\n  sortDescriptor: {\n    orderBy: 'created_at',\n    orderDir: 'desc',\n  },\n  queryParams: {\n    recentOnly: true,\n  },\n  noContentMessage: () => ({\n    title: message('No recent entries'),\n    description: message('You have not uploaded any files or folders yet'),\n    image: timeManagement,\n  }),\n};\n\nexport const SearchPage: DrivePage = {\n  id: 'search',\n  label: message('Search results'),\n  path: '/drive/search',\n  sortDescriptor: defaultSortDescriptor,\n  noContentMessage: isSearchingOrFiltering => {\n    if (isSearchingOrFiltering) {\n      return {\n        title: message('No matching results'),\n        description: message('Try changing your search query or filters'),\n        image: fileSearching,\n      };\n    }\n    return {\n      title: message('Begin typing or select a filter to search'),\n      description: message('Search for files, folders and other content'),\n      image: fileSearching,\n    };\n  },\n};\n\nexport const SharesPage: DrivePage = {\n  id: 'shares',\n  label: message('Shared'),\n  path: '/drive/shares',\n  sortDescriptor: defaultSortDescriptor,\n  queryParams: {\n    sharedOnly: true,\n  },\n  noContentMessage: () => ({\n    title: message('Shared with me'),\n    description: message('Files and folders other people have shared with you'),\n    image: shareSvg,\n  }),\n};\n\nexport const TrashPage: DrivePage = {\n  id: 'trash',\n  label: message('Trash'),\n  path: '/drive/trash',\n  sortDescriptor: defaultSortDescriptor,\n  hasActions: true,\n  queryParams: {\n    deletedOnly: true,\n  },\n  noContentMessage: () => ({\n    title: message('Trash is empty'),\n    description: message(\n      'There are no files or folders in your trash currently'\n    ),\n    image: throwAwaySvg,\n  }),\n};\n\nexport const StarredPage: DrivePage = {\n  id: 'starred',\n  label: message('Starred'),\n  path: '/drive/starred',\n  sortDescriptor: defaultSortDescriptor,\n  queryParams: {\n    starredOnly: true,\n  },\n  noContentMessage: () => ({\n    title: message('Nothing is starred'),\n    description: message(\n      'Add stars to files and folders that you want to easily find later'\n    ),\n    image: lovingItSvg,\n  }),\n};\n\nexport const DRIVE_PAGES = [\n  RootFolderPage,\n  RecentPage,\n  SearchPage,\n  SharesPage,\n  TrashPage,\n  StarredPage,\n];\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@common/ui/toast/toast';\nimport {DriveQueryKeys, invalidateEntryQueries} from '../../drive-query-keys';\nimport {message} from '@common/i18n/message';\nimport {getAxiosErrorMessage} from '@common/utils/http/get-axios-error-message';\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\n\ninterface Response extends BackendResponse {}\n\ninterface Payload {\n  entryIds: number[];\n  emptyTrash?: boolean;\n  deleteForever?: boolean;\n}\n\nfunction deleteEntries(payload: Payload): Promise<Response> {\n  return apiClient\n    .post('file-entries/delete', payload)\n    .then(response => response.data);\n}\n\nexport function useDeleteEntries() {\n  return useMutation({\n    mutationFn: (payload: Payload) => {\n      toast.loading(getLoaderMessage(payload), {disableExitAnimation: true});\n      return deleteEntries(payload);\n    },\n    onSuccess: (r, {entryIds, emptyTrash, deleteForever}) => {\n      invalidateEntryQueries();\n      queryClient.invalidateQueries({\n        queryKey: DriveQueryKeys.fetchStorageSummary,\n      });\n      if (emptyTrash) {\n        toast(message('Emptied trash'), {disableEnterAnimation: true});\n      } else if (deleteForever) {\n        toast(\n          message('Permanently deleted [one 1 item|other :count items]', {\n            values: {count: entryIds.length},\n          }),\n          {disableEnterAnimation: true},\n        );\n      } else {\n        toast(\n          message('Moved [one 1 item|other :count items] to trash', {\n            values: {count: entryIds.length},\n          }),\n          {disableEnterAnimation: true},\n        );\n      }\n    },\n    onError: (err, {emptyTrash}) => {\n      const backendError = getAxiosErrorMessage(err);\n      if (backendError) {\n        toast.danger(backendError, {disableEnterAnimation: true});\n      } else if (emptyTrash) {\n        toast.danger('could not empty trash', {disableEnterAnimation: true});\n      } else {\n        toast.danger('Could not delete items', {disableEnterAnimation: true});\n      }\n    },\n  });\n}\n\nfunction getLoaderMessage(payload: Payload): MessageDescriptor {\n  if (payload.emptyTrash) {\n    return message('Emptying trash...');\n  } else if (payload.deleteForever) {\n    return message('Deleting files...');\n  } else {\n    return message('Moving to trash...');\n  }\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {DriveEntryUser} from '../../files/drive-entry';\nimport {apiClient} from '@common/http/query-client';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\n\ninterface Response extends BackendResponse {\n  users: DriveEntryUser[];\n}\n\ninterface Payload {\n  userId: number | 'me';\n  entryIds: number[];\n}\n\nexport function useUnshareEntries() {\n  return useMutation({\n    mutationFn: (payload: Payload) => unshareEntries(payload),\n    onSuccess: () => {\n      return invalidateEntryQueries();\n    },\n  });\n}\n\nfunction unshareEntries({entryIds, ...payload}: Payload): Promise<Response> {\n  return apiClient\n    .post(`file-entries/${entryIds.join(',')}/unshare`, payload)\n    .then(response => response.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@common/ui/toast/toast';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\nimport {message} from '@common/i18n/message';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\ninterface Payload {\n  entryIds: number[];\n}\n\nexport function useRestoreEntries() {\n  return useMutation({\n    mutationFn: (payload: Payload) => restoreEntries(payload),\n    onSuccess: (r, p) => {\n      invalidateEntryQueries();\n      toast(\n        message('Restored [one 1 item|other :count items]', {\n          values: {count: p.entryIds.length},\n        }),\n      );\n    },\n    onError: err => showHttpErrorToast(err, message('Could not restore items')),\n  });\n}\n\nfunction restoreEntries(payload: Payload): Promise<Response> {\n  return apiClient\n    .post('file-entries/restore', payload)\n    .then(response => response.data);\n}\n","import {message} from '@common/i18n/message';\nimport {PersonAddIcon} from '@common/icons/material/PersonAdd';\nimport {driveState, useDriveStore} from '../drive-store';\nimport {EntryAction} from './entry-action';\nimport {DriveEntry} from '../files/drive-entry';\nimport {RemoveRedEyeIcon} from '@common/icons/material/RemoveRedEye';\nimport {LinkIcon} from '@common/icons/material/Link';\nimport {useCreateShareableLink} from '../shareable-link/queries/create-shareable-link';\nimport {StarIcon} from '@common/icons/material/Star';\nimport {useAddStarToEntries} from '../files/queries/use-add-star-to-entries';\nimport {StarOutlineIcon} from '@common/icons/material/StarOutline';\nimport {useRemoveStarFromEntries} from '../files/queries/use-remove-star-from-entries';\nimport {DriveFileMoveIcon} from '@common/icons/material/DriveFileMove';\nimport {DriveFileRenameOutlineIcon} from '@common/icons/material/DriveFileRenameOutline';\nimport {ContentCopyIcon} from '@common/icons/material/ContentCopy';\nimport {useDuplicateEntries} from '../files/queries/use-duplicate-entries';\nimport {FileDownloadIcon} from '@common/icons/material/FileDownload';\nimport {DeleteIcon} from '@common/icons/material/Delete';\nimport {SharesPage, TrashPage} from '../drive-page/drive-page';\nimport {useDeleteEntries} from '../files/queries/use-delete-entries';\nimport {useUnshareEntries} from '../share-dialog/queries/use-unshare-entries';\nimport {toast} from '@common/ui/toast/toast';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {useFileEntryUrls} from '@common/uploads/hooks/file-entry-urls';\nimport {downloadFileFromUrl} from '@common/uploads/utils/download-file-from-url';\nimport {useRestoreEntries} from '../files/queries/use-restore-entries';\nimport {RestoreIcon} from '@common/icons/material/Restore';\n\nexport function useEntryActions(entries: DriveEntry[]): EntryAction[] {\n  const preview = usePreviewAction(entries);\n  const share = useShareAction(entries);\n  const getLink = useGetLinkAction(entries);\n  const addStar = useAddToStarredAction(entries);\n  const removeStar = useRemoveFromStarred(entries);\n  const moveTo = useMoveToAction(entries);\n  const rename = useRenameAction(entries);\n  const makeCopy = useMakeCopyAction(entries);\n  const download = useDownloadEntriesAction(entries);\n  const deleteAction = useDeleteEntriesAction(entries);\n  const removeSharedEntries = useRemoveSharedEntriesAction(entries);\n  const restoreEntries = useRestoreEntriesAction(entries);\n\n  return [\n    preview,\n    share,\n    getLink,\n    addStar,\n    removeStar,\n    moveTo,\n    rename,\n    makeCopy,\n    download,\n    deleteAction,\n    removeSharedEntries,\n    restoreEntries,\n  ].filter(action => !!action) as EntryAction[];\n}\n\nexport function usePreviewAction(\n  entries: DriveEntry[]\n): EntryAction | undefined {\n  if (!entries.some(e => e.type !== 'folder')) return;\n  return {\n    label: message('Preview'),\n    icon: RemoveRedEyeIcon,\n    key: 'preview',\n    execute: () => {\n      driveState().setActiveActionDialog('preview', entries);\n    },\n  };\n}\n\nexport function useShareAction(entries: DriveEntry[]): EntryAction | undefined {\n  const activePage = useDriveStore(s => s.activePage);\n  if (\n    entries.length > 1 ||\n    !entries.every(e => e.permissions['files.update']) ||\n    activePage === TrashPage\n  )\n    return;\n\n  return {\n    label: message('Share'),\n    icon: PersonAddIcon,\n    key: 'share',\n    execute: () => {\n      driveState().setActiveActionDialog('share', entries);\n    },\n  };\n}\n\nfunction useGetLinkAction(entries: DriveEntry[]): EntryAction | undefined {\n  const activePage = useDriveStore(s => s.activePage);\n  const createLink = useCreateShareableLink();\n  if (\n    entries.length > 1 ||\n    !entries.every(e => e.permissions['files.update']) ||\n    activePage === TrashPage\n  ) {\n    return;\n  }\n  return {\n    label: message('Get link'),\n    icon: LinkIcon,\n    key: 'getLink',\n    execute: () => {\n      createLink.mutate({entryId: entries[0].id});\n      driveState().setActiveActionDialog('getLink', entries);\n    },\n  };\n}\n\nfunction useAddToStarredAction(entries: DriveEntry[]): EntryAction | undefined {\n  const activePage = useDriveStore(s => s.activePage);\n  const starEntries = useAddStarToEntries();\n  if (\n    entries.every(e => e.tags?.find(tag => tag.name === 'starred')) ||\n    !entries.every(e => e.permissions['files.update']) ||\n    activePage === TrashPage\n  ) {\n    return;\n  }\n  return {\n    label: message('Add to starred'),\n    icon: StarIcon,\n    key: 'addToStarred',\n    execute: () => {\n      starEntries.mutate({entryIds: entries.map(e => e.id)});\n      driveState().selectEntries([]);\n    },\n  };\n}\n\nfunction useRemoveFromStarred(entries: DriveEntry[]): EntryAction | undefined {\n  const activePage = useDriveStore(s => s.activePage);\n  const removeStar = useRemoveStarFromEntries();\n  if (\n    !entries.every(e => e.tags?.find(tag => tag.name === 'starred')) ||\n    activePage === TrashPage\n  )\n    return;\n  return {\n    label: message('Remove from starred'),\n    icon: StarOutlineIcon,\n    key: 'removeFromStarred',\n    execute: () => {\n      removeStar.mutate({entryIds: entries.map(e => e.id)});\n      driveState().selectEntries([]);\n    },\n  };\n}\n\nfunction useMoveToAction(entries: DriveEntry[]): EntryAction | undefined {\n  const activePage = useDriveStore(s => s.activePage);\n  if (\n    !entries.every(e => e.permissions['files.update']) ||\n    activePage === SharesPage ||\n    activePage === TrashPage\n  ) {\n    return;\n  }\n\n  return {\n    label: message('Move to'),\n    icon: DriveFileMoveIcon,\n    key: 'moveTo',\n    execute: () => {\n      driveState().setActiveActionDialog('moveTo', entries);\n    },\n  };\n}\n\nfunction useRenameAction(entries: DriveEntry[]): EntryAction | undefined {\n  const activePage = useDriveStore(s => s.activePage);\n  if (\n    entries.length > 1 ||\n    !entries.every(e => e.permissions['files.update']) ||\n    activePage === TrashPage\n  )\n    return;\n  return {\n    label: message('Rename'),\n    icon: DriveFileRenameOutlineIcon,\n    key: 'rename',\n    execute: () => {\n      driveState().setActiveActionDialog('rename', entries);\n    },\n  };\n}\n\nfunction useMakeCopyAction(entries: DriveEntry[]): EntryAction | undefined {\n  const activePage = useDriveStore(s => s.activePage);\n  const duplicateEntries = useDuplicateEntries();\n  if (\n    entries.length > 1 ||\n    !entries.every(e => e.permissions['files.update']) ||\n    activePage === TrashPage\n  )\n    return;\n  return {\n    label: message('Make a copy'),\n    icon: ContentCopyIcon,\n    key: 'makeCopy',\n    execute: () => {\n      duplicateEntries.mutate({entryIds: entries.map(e => e.id)});\n      driveState().selectEntries([]);\n    },\n  };\n}\n\nfunction useDownloadEntriesAction(\n  entries: DriveEntry[]\n): EntryAction | undefined {\n  const {downloadUrl} = useFileEntryUrls(entries[0], {\n    downloadHashes: entries.map(e => e.hash),\n  });\n  if (!entries.every(e => e.permissions['files.download'])) return;\n  return {\n    label: message('Download'),\n    icon: FileDownloadIcon,\n    key: 'download',\n    execute: () => {\n      if (downloadUrl) {\n        downloadFileFromUrl(downloadUrl);\n      }\n      driveState().selectEntries([]);\n    },\n  };\n}\n\nexport function useDeleteEntriesAction(\n  entries: DriveEntry[]\n): EntryAction | undefined {\n  const deleteEntries = useDeleteEntries();\n  const activePage = useDriveStore(s => s.activePage);\n  if (\n    activePage === SharesPage ||\n    !entries.every(e => e.permissions['files.delete'])\n  )\n    return;\n  return {\n    label:\n      activePage === TrashPage ? message('Delete forever') : message('Remove'),\n    icon: DeleteIcon,\n    key: 'delete',\n    execute: () => {\n      if (activePage === TrashPage) {\n        driveState().setActiveActionDialog('confirmAndDeleteForever', entries);\n      } else {\n        deleteEntries.mutate({\n          entryIds: entries.map(e => e.id),\n          deleteForever: activePage === TrashPage,\n        });\n        driveState().selectEntries([]);\n      }\n    },\n  };\n}\n\nexport function useRestoreEntriesAction(\n  entries: DriveEntry[]\n): EntryAction | undefined {\n  const restoreEntries = useRestoreEntries();\n  const activePage = useDriveStore(s => s.activePage);\n  if (\n    activePage !== TrashPage ||\n    !entries.every(e => e.permissions['files.delete'])\n  )\n    return;\n  return {\n    label: message('Restore'),\n    icon: RestoreIcon,\n    key: 'restore',\n    execute: () => {\n      restoreEntries.mutate({\n        entryIds: entries.map(e => e.id),\n      });\n      driveState().selectEntries([]);\n    },\n  };\n}\n\nexport function useRemoveSharedEntriesAction(\n  entries: DriveEntry[]\n): EntryAction | undefined {\n  const unshareEntries = useUnshareEntries();\n  const activePage = useDriveStore(s => s.activePage);\n  if (activePage !== SharesPage) return;\n  return {\n    label: message('Remove'),\n    icon: DeleteIcon,\n    key: 'removeSharedEntry',\n    execute: () => {\n      unshareEntries.mutate(\n        {entryIds: entries.map(e => e.id), userId: 'me'},\n        {\n          onSuccess: (r, p) => {\n            toast(\n              message('Removed [one 1 item|other {count} items]', {\n                values: {count: p.entryIds.length},\n              })\n            );\n          },\n          onError: err =>\n            showHttpErrorToast(err, message('Could not remove items')),\n        }\n      );\n      driveState().selectEntries([]);\n    },\n  };\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {prettyBytes} from '@common/uploads/utils/pretty-bytes';\nimport {DriveQueryKeys} from '../../../drive-query-keys';\nimport {apiClient} from '@common/http/query-client';\n\nexport interface FetchStorageSummaryResponse extends BackendResponse {\n  used: number;\n  available: number;\n}\n\nexport function useStorageSummary() {\n  return useQuery({\n    queryKey: DriveQueryKeys.fetchStorageSummary,\n    queryFn: fetchStorageSummary,\n    select: formatResponse,\n  });\n}\n\nfunction fetchStorageSummary(): Promise<FetchStorageSummaryResponse> {\n  return apiClient.get(`user/space-usage`).then(response => response.data);\n}\n\nfunction formatResponse(response: FetchStorageSummaryResponse) {\n  // null means that user has unlimited space available\n  const percentage =\n    response.available === null\n      ? 0\n      : (response.used * 100) / response.available;\n\n  return {\n    usedFormatted: prettyBytes(response.used, 2),\n    availableFormatted: prettyBytes(response.available, 0),\n    percentage,\n    used: response.used,\n    available: response.available,\n  };\n}\n","import {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\nimport {useCallback} from 'react';\nimport {driveState} from '../drive-store';\nimport {UploadedFile} from '@common/uploads/uploaded-file';\nimport {UploadStrategyConfig} from '@common/uploads/uploader/strategy/upload-strategy';\nimport {queryClient} from '@common/http/query-client';\nimport {DriveQueryKeys, invalidateEntryQueries} from '../drive-query-keys';\nimport {useStorageSummary} from '../layout/sidebar/storage-summary/storage-summary';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {useSettings} from '@common/core/settings/use-settings';\nimport {getActiveWorkspaceId} from '@common/workspace/active-workspace-id';\n\nexport type UploadFilesFn = (\n  files: (File | UploadedFile)[] | FileList,\n  options?: UploadStrategyConfig,\n) => void;\n\nconst EightMB = 8388608;\n\nexport function useDriveUploadQueue() {\n  const uploadMultiple = useFileUploadStore(s => s.uploadMultiple);\n  const {data: usage} = useStorageSummary();\n\n  const {uploads} = useSettings();\n\n  const maxFileSize = uploads.max_size || EightMB;\n  const allowedFileTypes = uploads.allowed_extensions;\n  const blockedFileTypes = uploads.blocked_extensions;\n\n  const uploadFiles: UploadFilesFn = useCallback(\n    (files, options = {}) => {\n      if (!options.metadata) {\n        options.metadata = {};\n      }\n      options.metadata.workspaceId = getActiveWorkspaceId();\n      if (!options.metadata.parentId) {\n        options.metadata.parentId = driveState().activePage?.folder?.id ?? null;\n      }\n\n      files = [...files].map(file => {\n        return file instanceof UploadedFile ? file : new UploadedFile(file);\n      });\n\n      // check if this upload will not put user over their allowed storage space\n      if (usage) {\n        const sizeOfFiles = files.reduce((sum, file) => sum + file.size, 0);\n        const currentlyUsing = usage.used;\n        const availableSpace = usage.available;\n\n        if (sizeOfFiles + currentlyUsing > availableSpace) {\n          toast.danger(\n            message(\n              'You have exhausted your allowed space of :space. Delete some files or upgrade your plan.',\n              {values: {space: usage.availableFormatted}},\n            ),\n            {action: {action: '/pricing', label: message('Upgrade')}},\n          );\n          return;\n        }\n      }\n\n      uploadMultiple(files, {\n        ...options,\n        restrictions: {\n          maxFileSize,\n          allowedFileTypes,\n          blockedFileTypes,\n        },\n        onSuccess: (entry, file) => {\n          options?.onSuccess?.(entry, file);\n          invalidateEntryQueries();\n          queryClient.invalidateQueries({\n            queryKey: DriveQueryKeys.fetchStorageSummary,\n          });\n        },\n      });\n      driveState().setUploadQueueIsOpen(true);\n    },\n    [uploadMultiple, allowedFileTypes, blockedFileTypes, maxFileSize, usage],\n  );\n  return {uploadFiles};\n}\n","import {EntryAction} from './entry-action';\nimport {message} from '@common/i18n/message';\nimport {driveState, useDriveStore} from '../drive-store';\nimport {DrivePage, TrashPage} from '../drive-page/drive-page';\nimport {CreateNewFolderIcon} from '@common/icons/material/CreateNewFolder';\nimport {useDriveUploadQueue} from '../uploading/use-drive-upload-queue';\nimport {openUploadWindow} from '@common/uploads/utils/open-upload-window';\nimport {FileUploadIcon} from '@common/icons/material/FileUpload';\nimport {DriveFolderUploadIcon} from '@common/icons/material/DriveFolderUpload';\nimport {useDeleteEntries} from '../files/queries/use-delete-entries';\nimport {DeleteForeverIcon} from '@common/icons/material/DeleteForever';\n\nexport function useDrivePageActions(page: DrivePage): EntryAction[] {\n  const newFolder = useNewFolderAction(page);\n  const uploadFiles = useUploadFilesAction(page);\n  const uploadFolder = useUploadFolderAction(page);\n  const emptyTrash = useEmptyTrashAction(page);\n  return [newFolder, uploadFiles, uploadFolder, emptyTrash].filter(\n    action => !!action\n  ) as EntryAction[];\n}\n\nfunction useNewFolderAction(page: DrivePage): EntryAction | undefined {\n  if (!page.folder || !page.folder.permissions['files.update']) return;\n  return {\n    label: message('New folder'),\n    icon: CreateNewFolderIcon,\n    key: 'newFolder',\n    execute: () => {\n      if (page.folder) {\n        driveState().setActiveActionDialog('newFolder', [page.folder]);\n      }\n    },\n  };\n}\n\nfunction useUploadFilesAction(page: DrivePage): EntryAction | undefined {\n  const {uploadFiles} = useDriveUploadQueue();\n  if (!page.folder || !page.folder.permissions['files.update']) return;\n  return {\n    label: message('Upload files'),\n    icon: FileUploadIcon,\n    key: 'uploadFiles',\n    execute: async () => {\n      uploadFiles(await openUploadWindow({multiple: true}));\n    },\n  };\n}\n\nfunction useUploadFolderAction(page: DrivePage): EntryAction | undefined {\n  const {uploadFiles} = useDriveUploadQueue();\n  if (!page.folder || !page.folder.permissions['files.update']) return;\n  return {\n    label: message('Upload folder'),\n    icon: DriveFolderUploadIcon,\n    key: 'uploadFolder',\n    execute: async () => {\n      uploadFiles(await openUploadWindow({directory: true}));\n    },\n  };\n}\n\nfunction useEmptyTrashAction(page: DrivePage): EntryAction | undefined {\n  const deleteEntries = useDeleteEntries();\n  const activePage = useDriveStore(s => s.activePage);\n  if (activePage !== TrashPage) return;\n  return {\n    label: message('Empty trash'),\n    icon: DeleteForeverIcon,\n    key: 'emptyTrash',\n    execute: () => {\n      deleteEntries.mutate({entryIds: [], emptyTrash: true});\n      driveState().selectEntries([]);\n    },\n  };\n}\n","import React, {createElement, ReactElement} from 'react';\nimport {\n  Menu,\n  MenuItem,\n  MenuTrigger,\n} from '@common/ui/navigation/menu/menu-trigger';\nimport {Trans} from '@common/i18n/trans';\nimport {DriveEntry} from '../files/drive-entry';\nimport {useEntryActions} from './use-entry-actions';\nimport {EntryAction} from './entry-action';\nimport {DrivePage, RootFolderPage, TrashPage} from '../drive-page/drive-page';\nimport {useDrivePageActions} from './use-drive-page-actions';\n\ninterface Props {\n  children: ReactElement;\n  entries?: DriveEntry[];\n  page?: DrivePage;\n}\nexport function EntryActionMenuTrigger({children, entries, page}: Props) {\n  if (page?.id === RootFolderPage.id) {\n    return <PageMenu page={RootFolderPage}>{children}</PageMenu>;\n  }\n\n  if (page === TrashPage) {\n    return <PageMenu page={TrashPage}>{children}</PageMenu>;\n  }\n\n  if (page?.folder) {\n    return <EntriesMenu entries={[page.folder]}>{children}</EntriesMenu>;\n  }\n\n  if (entries?.length) {\n    return <EntriesMenu entries={entries}>{children}</EntriesMenu>;\n  }\n\n  return null;\n}\n\ninterface EntriesContextMenuProps extends Omit<BaseMenuProps, 'actions'> {\n  entries: DriveEntry[];\n}\nfunction EntriesMenu({entries, children}: EntriesContextMenuProps) {\n  const actions = useEntryActions(entries);\n  return <BaseMenu actions={actions}>{children}</BaseMenu>;\n}\n\ninterface PageContextMenuProps extends Omit<BaseMenuProps, 'actions'> {\n  page: DrivePage;\n}\nfunction PageMenu({page, children}: PageContextMenuProps) {\n  const actions = useDrivePageActions(page);\n  return <BaseMenu actions={actions}>{children}</BaseMenu>;\n}\n\ninterface BaseMenuProps {\n  actions: EntryAction[];\n  children: ReactElement;\n}\nfunction BaseMenu({actions, children}: BaseMenuProps) {\n  return (\n    <MenuTrigger>\n      {children}\n      <Menu>\n        {actions.map(action => {\n          return (\n            <MenuItem\n              onSelected={() => {\n                action.execute();\n              }}\n              key={action.key}\n              value={action.key}\n              startIcon={createElement(action.icon)}\n            >\n              <Trans {...action.label} />\n            </MenuItem>\n          );\n        })}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","import {ColumnConfig} from '@common/datatable/column-config';\nimport {DriveEntry} from '../../files/drive-entry';\nimport {Trans} from '@common/i18n/trans';\nimport {FileThumbnail} from '@common/uploads/file-type-icon/file-thumbnail';\nimport {FormattedDate} from '@common/i18n/formatted-date';\nimport {prettyBytes} from '@common/uploads/utils/pretty-bytes';\nimport React, {useContext} from 'react';\nimport memoize from 'nano-memoize';\nimport {TableContext} from '@common/ui/tables/table-context';\nimport {Checkbox} from '@common/ui/forms/toggle/checkbox';\nimport {EntryActionMenuTrigger} from '@app/drive/entry-actions/entry-action-menu-trigger';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {MoreVertIcon} from '@common/icons/material/MoreVert';\nimport clsx from 'clsx';\n\nconst formatFileSize = memoize(bytes => {\n  return prettyBytes(bytes);\n});\n\nexport const fileTableColumns: ColumnConfig<DriveEntry>[] = [\n  {\n    key: 'name',\n    allowsSorting: true,\n    header: () => <Trans message=\"Name\" />,\n    visibleInMode: 'all',\n    width: 'flex-3 min-w-200',\n    body: entry => <FileNameColumn entry={entry} />,\n  },\n  {\n    key: 'updated_at',\n    allowsSorting: true,\n    maxWidth: 'max-w-184',\n    header: () => <Trans message=\"Last modified\" />,\n    body: user => <FormattedDate date={user.updated_at} />,\n  },\n  {\n    key: 'file_size',\n    allowsSorting: true,\n    header: () => <Trans message=\"Size\" />,\n    maxWidth: 'max-w-144',\n    body: entry => formatFileSize(entry.file_size) ?? '-',\n  },\n  {\n    key: 'actions',\n    hideHeader: true,\n    header: () => <Trans message=\"Actions\" />,\n    align: 'end',\n    width: 'w-42 flex-shrink-0',\n    visibleInMode: 'all',\n    body: entry => <ActionsColumn entry={entry} />,\n  },\n];\n\nfunction FileNameColumn({entry}: {entry: DriveEntry}) {\n  const {isCollapsedMode} = useContext(TableContext);\n  const sizeClassName = isCollapsedMode ? 'w-30 h-30' : 'w-24 h-24';\n  return (\n    <div className=\"flex items-center gap-14\">\n      <FileThumbnail\n        className={clsx('rounded', sizeClassName)}\n        iconClassName={sizeClassName}\n        file={entry}\n      />\n      <div className=\"min-w-0\">\n        <div className=\"overflow-hidden overflow-ellipsis\">{entry.name}</div>\n        {isCollapsedMode && (\n          <div className=\"text-muted text-xs flex items-center mt-4\">\n            <FormattedDate date={entry.updated_at} />\n            <div>·</div>\n            <div>{formatFileSize(entry.file_size)}</div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\ninterface ActionsBodyProps {\n  entry: DriveEntry;\n}\nfunction ActionsColumn({entry}: ActionsBodyProps) {\n  const {selectedRows} = useContext(TableContext);\n  return selectedRows.length ? (\n    <Checkbox\n      className=\"block mr-8\"\n      checked={selectedRows.includes(entry.id)}\n    />\n  ) : (\n    <EntryActionMenuTrigger entries={[entry]}>\n      <IconButton className=\"text-muted\">\n        <MoreVertIcon />\n      </IconButton>\n    </EntryActionMenuTrigger>\n  );\n}\n","import {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\nimport {DriveSortDescriptor} from '../../../drive-store';\nimport React from 'react';\nimport {Table} from '@common/ui/tables/table';\nimport {linkPageState, useLinkPageStore} from '../link-page-store';\nimport type {FolderPreviewGridProps} from './folder-preview-file-grid';\nimport {fileTableColumns} from '../../../file-view/file-table/file-table-columns';\n\nconst mobileColumns = fileTableColumns.filter(\n  config => config.key !== 'updated_at'\n);\n\nexport function FolderPreviewFileTable({\n  entries,\n  onEntrySelected,\n}: FolderPreviewGridProps) {\n  const sortDescriptor = useLinkPageStore(s => s.activeSort);\n  const isMobile = useIsMobileMediaQuery();\n\n  return (\n    <Table\n      columns={isMobile ? mobileColumns : fileTableColumns}\n      data={entries}\n      sortDescriptor={sortDescriptor}\n      onSortChange={value => {\n        linkPageState().setActiveSort(value as DriveSortDescriptor);\n      }}\n      onAction={(item, index) => {\n        onEntrySelected(item, index);\n      }}\n      enableSelection={false}\n    />\n  );\n}\n","import {useShareableLinkPage} from '../../queries/use-shareable-link-page';\nimport {useNavigate} from 'react-router-dom';\nimport {ShareableLink} from '../../shareable-link';\n\nfunction buildFolderHash(link: ShareableLink, folderHash?: string) {\n  let hash = link.hash;\n  if (folderHash && link.entry?.hash !== folderHash) {\n    hash = `${hash}:${folderHash}`;\n  }\n  return hash;\n}\n\nexport function useNavigateToSubfolder() {\n  const {link} = useShareableLinkPage();\n  const navigate = useNavigate();\n  return (hash: string) => {\n    if (!link) return;\n    navigate(`/drive/s/${buildFolderHash(link, hash)}`);\n  };\n}\n","import {AnimatePresence, m} from 'framer-motion';\nimport React, {useEffect, useRef, useState} from 'react';\nimport {ProgressCircle} from '@common/ui/progress/progress-circle';\nimport {useShareableLinkPage} from '../../queries/use-shareable-link-page';\nimport {FilePreviewDialog} from '@common/uploads/preview/file-preview-dialog';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport clsx from 'clsx';\nimport {DriveEntry} from '../../../files/drive-entry';\nimport {FolderPreviewFileGrid} from './folder-preview-file-grid';\nimport {useLinkPageStore} from '../link-page-store';\nimport {FolderPreviewFileTable} from './folder-preview-file-table';\nimport {useNavigateToSubfolder} from './use-navigate-to-subfolder';\nimport {useLocation} from 'react-router-dom';\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\nimport {AdHost} from '@common/admin/ads/ad-host';\n\ninterface FolderPreviewChildrenProps {\n  className?: string;\n}\nexport function FolderPreviewFileView({className}: FolderPreviewChildrenProps) {\n  const {pathname} = useLocation();\n  const navigateToSubfolder = useNavigateToSubfolder();\n  const [activePreviewIndex, setActivePreviewIndex] = useState<number>();\n  const viewMode = useLinkPageStore(s => s.viewMode);\n  const sentinelRef = useRef<HTMLDivElement>(null);\n  const {\n    link,\n    entries,\n    isFetchingNextPage,\n    hasNextPage,\n    fetchNextPage,\n    isPlaceholderData,\n  } = useShareableLinkPage();\n\n  // close preview modal on back/forward navigation\n  useEffect(() => {\n    setActivePreviewIndex(undefined);\n  }, [pathname]);\n\n  useEffect(() => {\n    const sentinelEl = sentinelRef.current;\n    if (!sentinelEl) return;\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting && hasNextPage) {\n        fetchNextPage();\n      }\n    });\n    observer.observe(sentinelEl);\n    return () => {\n      observer.unobserve(sentinelEl);\n    };\n  }, [hasNextPage, fetchNextPage]);\n\n  if (!link || isPlaceholderData) {\n    return (\n      <div className={clsx('flex justify-center', className)}>\n        <ProgressCircle isIndeterminate />\n      </div>\n    );\n  }\n\n  const handlePreview = (entry: DriveEntry, index: number) => {\n    if (entry.type === 'folder') {\n      navigateToSubfolder(entry.hash);\n    } else {\n      setActivePreviewIndex(index);\n    }\n  };\n\n  const folderEntries = entries || [];\n\n  return (\n    <>\n      <div\n        className={clsx(\n          'file-grid-container flex-auto overflow-auto px-14 pb-14 md:px-24 md:pb-24',\n          className,\n        )}\n      >\n        <AdHost slot=\"file-preview\" className=\"mb-40\" />\n        {viewMode === 'grid' ? (\n          <FolderPreviewFileGrid\n            entries={folderEntries}\n            onEntrySelected={handlePreview}\n          />\n        ) : (\n          <FolderPreviewFileTable\n            entries={folderEntries}\n            onEntrySelected={handlePreview}\n          />\n        )}\n        <span ref={sentinelRef} aria-hidden />\n        <AnimatePresence>\n          {isFetchingNextPage && (\n            <m.div\n              className=\"mt-24 flex w-full justify-center\"\n              {...opacityAnimation}\n            >\n              <ProgressCircle isIndeterminate aria-label=\"loading\" />\n            </m.div>\n          )}\n        </AnimatePresence>\n      </div>\n      <DialogTrigger\n        type=\"modal\"\n        isOpen={activePreviewIndex != undefined}\n        onClose={() => setActivePreviewIndex(undefined)}\n      >\n        <FilePreviewDialog\n          entries={folderEntries}\n          defaultActiveIndex={activePreviewIndex}\n          allowDownload={link.allow_download}\n        />\n      </DialogTrigger>\n    </>\n  );\n}\n","import {ReactNode} from 'react';\nimport clsx from 'clsx';\n\ninterface DashboardContentHeaderProps {\n  children: ReactNode;\n  className?: string;\n}\nexport function DashboardContentHeader({\n  children,\n  className,\n}: DashboardContentHeaderProps) {\n  return (\n    <div className={clsx(className, 'dashboard-grid-header')}>{children}</div>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {DriveFolder} from '../drive-entry';\nimport {DriveQueryKeys} from '../../drive-query-keys';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {apiClient} from '@common/http/query-client';\n\ninterface FolderPathResponse extends BackendResponse {\n  path: DriveFolder[];\n}\n\ntype Params = Record<string, string | number | null>;\n\ninterface Props {\n  hash?: string;\n  params?: Params;\n  isEnabled?: boolean;\n}\nexport function useFolderPath({hash, params, isEnabled = true}: Props) {\n  return useQuery({\n    queryKey: DriveQueryKeys.fetchFolderPath(hash!, params),\n    queryFn: () => fetchFolderPath(hash!, params),\n    enabled: !!hash && isEnabled,\n  });\n}\n\nfunction fetchFolderPath(\n  hash: string,\n  params?: Params,\n): Promise<FolderPathResponse> {\n  return apiClient\n    .get(`folders/${hash}/path`, {params})\n    .then(response => response.data);\n}\n","import React, {ReactElement, ReactNode} from 'react';\nimport clsx from 'clsx';\nimport {DriveFolder} from '../../../files/drive-entry';\nimport {useFolderPath} from '../../../files/queries/use-folder-path';\nimport {Breadcrumb} from '@common/ui/breadcrumbs/breadcrumb';\nimport {ShareableLink} from '../../shareable-link';\nimport {useLinkPageStore} from '../link-page-store';\nimport {BreadcrumbItem} from '@common/ui/breadcrumbs/breadcrumb-item';\nimport {useNavigateToSubfolder} from './use-navigate-to-subfolder';\n\ninterface Props {\n  className?: string;\n  folder?: DriveFolder;\n  link: ShareableLink;\n}\nexport function FolderPreviewBreadcrumb({className, folder, link}: Props) {\n  const navigateToSubfolder = useNavigateToSubfolder();\n  const password = useLinkPageStore(s => s.password);\n  const query = useFolderPath({\n    hash: folder?.hash,\n    params: {\n      shareable_link: link.id,\n      password,\n    },\n  });\n\n  let content: ReactNode;\n\n  if (query.isLoading) {\n    content = null;\n  } else {\n    const items: {folder: DriveFolder; label: ReactElement}[] = [];\n    if (query.data) {\n      query.data.path.forEach(parent => {\n        items.push({\n          folder: parent,\n          label: <>{parent.name}</>,\n        });\n      });\n    }\n\n    content = (\n      <Breadcrumb size=\"lg\" isNavigation>\n        {items.map(item => {\n          return (\n            <BreadcrumbItem\n              onSelected={() => {\n                navigateToSubfolder(item.folder.hash);\n              }}\n              key={item.folder.hash}\n            >\n              {item.label}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    );\n  }\n\n  return <div className={clsx('h-36 flex-shrink-0', className)}>{content}</div>;\n}\n","import {message} from '@common/i18n/message';\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\n\nexport const AVAILABLE_SORTS: DriveSortOption[] = [\n  {id: 'file_size', label: message('Size')},\n  {id: 'name', label: message('Name')},\n  {id: 'updated_at', label: message('Last modified')},\n  {id: 'created_at', label: message('Upload date')},\n  {id: 'type', label: message('Type')},\n  {id: 'extension', label: message('Extension')},\n];\n\nexport interface DriveSortOption {\n  id: SortColumn;\n  label: MessageDescriptor;\n}\n\nexport type SortColumn =\n  | 'file_size'\n  | 'name'\n  | 'updated_at'\n  | 'created_at'\n  | 'type'\n  | 'extension';\n\nexport type SortDirection = 'desc' | 'asc';\n\nexport interface SortValue {\n  column: SortColumn;\n  direction: SortDirection;\n}\n","import {AVAILABLE_SORTS, SortColumn} from './available-sorts';\nimport {Button} from '@common/ui/buttons/button';\nimport {SortIcon} from '@common/icons/material/Sort';\nimport {\n  Menu,\n  MenuItem,\n  MenuSection,\n  MenuTrigger,\n} from '@common/ui/navigation/menu/menu-trigger';\nimport {Trans} from '@common/i18n/trans';\nimport type {DriveSortDescriptor} from '../../drive-store';\n\ninterface Props {\n  descriptor: DriveSortDescriptor;\n  onChange: (value: DriveSortDescriptor) => void;\n  isDisabled?: boolean;\n}\nexport function EntriesSortButton({\n  descriptor,\n  onChange,\n  isDisabled = false,\n}: Props) {\n  const column = descriptor.orderBy;\n  const direction = descriptor.orderDir;\n  const sort = AVAILABLE_SORTS.find(s => s.id === column);\n\n  return (\n    <MenuTrigger\n      showCheckmark\n      selectionMode=\"multiple\"\n      selectedValue={[direction || 'desc', column || '']}\n      onItemSelected={key => {\n        if (key === 'asc' || key === 'desc') {\n          onChange({\n            orderBy: column,\n            orderDir: key,\n          });\n        } else {\n          onChange({\n            orderBy: key as SortColumn,\n            orderDir: direction,\n          });\n        }\n      }}\n    >\n      <Button\n        className=\"text-muted\"\n        variant=\"text\"\n        size=\"sm\"\n        startIcon={<SortIcon />}\n        disabled={isDisabled}\n      >\n        {sort ? <Trans {...sort.label} /> : null}\n      </Button>\n      <Menu>\n        <MenuSection label={<Trans message=\"Direction\" />}>\n          <MenuItem value=\"asc\">\n            <Trans message=\"Ascending\" />\n          </MenuItem>\n          <MenuItem value=\"desc\">\n            <Trans message=\"Descending\" />\n          </MenuItem>\n        </MenuSection>\n        <MenuSection label={<Trans message=\"Sort By\" />}>\n          {AVAILABLE_SORTS.map(item => (\n            <MenuItem key={item.id} value={item.id}>\n              <Trans {...item.label} />\n            </MenuItem>\n          ))}\n        </MenuSection>\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","import React from 'react';\nimport {FolderPreviewBreadcrumb} from './folder-preview-breadcrumb';\nimport {EntriesSortButton} from '../../../layout/sorting/entries-sort-button';\nimport {linkPageState, useLinkPageStore} from '../link-page-store';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {GridViewIcon} from '@common/icons/material/GridView';\nimport {useShareableLinkPage} from '../../queries/use-shareable-link-page';\nimport {DriveFolder} from '../../../files/drive-entry';\n\nexport function FolderPreviewHeader() {\n  const activeSort = useLinkPageStore(s => s.activeSort);\n  const {link, isFetching} = useShareableLinkPage();\n  const hasEntry = link && link.entry;\n\n  return (\n    <div className=\"md:flex-row flex flex-col md:items-center gap-14 justify-between p-14 md:p-24 md:h-90\">\n      {hasEntry && (\n        <FolderPreviewBreadcrumb\n          link={link}\n          folder={link.entry as DriveFolder}\n          className=\"flex-auto\"\n        />\n      )}\n      {hasEntry && (\n        <div className=\"flex items-center justify-between md:justify-start text-muted\">\n          <EntriesSortButton\n            isDisabled={isFetching}\n            descriptor={activeSort}\n            onChange={value => {\n              linkPageState().setActiveSort(value);\n            }}\n          />\n          <div className=\"md:border-l md:pl-10 ml-10\">\n            <IconButton\n              onClick={() => {\n                linkPageState().setViewMode(\n                  linkPageState().viewMode === 'grid' ? 'list' : 'grid'\n                );\n              }}\n            >\n              <GridViewIcon />\n            </IconButton>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport {useShareableLinkPage} from '../../queries/use-shareable-link-page';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {SvgImage} from '@common/ui/images/svg-image/svg-image';\nimport {FolderPreviewFileView} from './folder-preview-file-view';\nimport {Trans} from '@common/i18n/trans';\nimport {DashboardLayout} from '@common/ui/layout/dashboard-layout';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {DashboardContent} from '@common/ui/layout/dashboard-content';\nimport {DashboardNavbar} from '@common/ui/layout/dashboard-navbar';\nimport {DashboardContentHeader} from '@common/ui/layout/dashboard-content-header';\nimport {ShareableLinkPageActionButtons} from '../shareable-link-page-action-buttons';\nimport {FolderPreviewHeader} from './folder-preview-header';\nimport shareSvg from './share.svg';\nimport clsx from 'clsx';\n\nexport function FolderPreview() {\n  const {entries, isFetched} = useShareableLinkPage();\n  const showEmptyMessage = isFetched && !entries?.length;\n\n  return (\n    <DashboardLayout name=\"folder-preview\">\n      <DashboardNavbar\n        hideToggleButton\n        rightChildren={<ShareableLinkPageActionButtons />}\n        color=\"bg\"\n      />\n      <DashboardContentHeader>\n        <FolderPreviewHeader />\n      </DashboardContentHeader>\n      <FileUploadProvider>\n        <DashboardContent>\n          {showEmptyMessage ? <EmptyMessage /> : <FolderPreviewFileView />}\n        </DashboardContent>\n      </FileUploadProvider>\n    </DashboardLayout>\n  );\n}\n\ninterface EmptyMessageProps {\n  className?: string;\n}\nfunction EmptyMessage({className}: EmptyMessageProps) {\n  return (\n    <IllustratedMessage\n      className={clsx(className, 'mt-80')}\n      image={<SvgImage src={shareSvg} />}\n      title={<Trans message=\"Folder is empty\" />}\n      description={\n        <Trans message=\"No files have been uploaded to this folder yet\" />\n      }\n    />\n  );\n}\n","import React from 'react';\nimport {FilePreviewContainer} from '@common/uploads/preview/file-preview-container';\nimport {useShareableLinkPage} from '../queries/use-shareable-link-page';\nimport {ShareableLinkNavbar} from './shareable-link-navbar';\nimport {AdHost} from '@common/admin/ads/ad-host';\n\nexport function ShareableLinkPageFilePreview() {\n  const {link} = useShareableLinkPage();\n\n  if (!link?.entry) return null;\n\n  return (\n    <div className=\"flex h-screen flex-col bg-alt\">\n      <ShareableLinkNavbar />\n      <AdHost slot=\"file-preview\" className=\"mx-auto mt-24\" />\n      <FilePreviewContainer\n        entries={[link.entry]}\n        showHeader={false}\n        allowDownload={link.allow_download}\n      />\n    </div>\n  );\n}\n","import React, {ReactElement} from 'react';\nimport {useShareableLinkPage} from '../queries/use-shareable-link-page';\nimport {useLinkPageStore} from './link-page-store';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {ProgressCircle} from '@common/ui/progress/progress-circle';\nimport {PasswordPage} from './password-page';\nimport {FolderPreview} from './folder-preview/folder-preview';\nimport {ShareableLinkPageFilePreview} from './shareable-link-page-file-preview';\nimport {FileEntryUrlsContext} from '@common/uploads/hooks/file-entry-urls';\nimport {NotFoundPage} from '@common/ui/not-found-page/not-found-page';\n\nexport function ShareableLinkPage() {\n  const {status, link} = useShareableLinkPage();\n  const {trans} = useTrans();\n  const isPasswordProtected = useLinkPageStore(s => s.isPasswordProtected);\n  const password = useLinkPageStore(s => s.password);\n\n  let content: ReactElement;\n\n  if (status === 'pending') {\n    content = (\n      <div className=\"flex h-screen flex-auto items-center justify-center\">\n        <ProgressCircle\n          aria-label={trans({message: 'Loading link'})}\n          isIndeterminate\n        />\n      </div>\n    );\n  } else if (!link && !isPasswordProtected) {\n    return <NotFoundPage />;\n  } else if (isPasswordProtected && !password) {\n    content = <PasswordPage />;\n  } else if (link?.entry?.type === 'folder') {\n    content = <FolderPreview />;\n  } else {\n    content = <ShareableLinkPageFilePreview />;\n  }\n\n  return (\n    <FileEntryUrlsContext.Provider value={{shareable_link: link?.id, password}}>\n      {content}\n    </FileEntryUrlsContext.Provider>\n  );\n}\n","import React from 'react';\nimport {ProgressBarBase, ProgressBarBaseProps} from './progress-bar-base';\n\nexport function Meter(props: ProgressBarBaseProps) {\n  return <ProgressBarBase {...props} role=\"meter progressbar\" />;\n}\n","import React from 'react';\nimport {useStorageSummary} from './storage-summary';\nimport {StorageIcon} from '@common/icons/material/Storage';\nimport {Meter} from '@common/ui/progress/meter';\nimport {Trans} from '@common/i18n/trans';\nimport clsx from 'clsx';\n\nexport function StorageMeter() {\n  const {isLoading, data} = useStorageSummary();\n\n  // prevent translation placeholders from showing if summary is not loaded yet\n  const label = (\n    <span className={clsx('whitespace-nowrap', isLoading && 'invisible')}>\n      <Trans\n        message=\":used of :available used\"\n        values={{\n          used: data?.usedFormatted,\n          available: data?.availableFormatted,\n        }}\n      />\n    </span>\n  );\n  return (\n    <div className=\"pl-24 pt-24 mt-24 border-t flex items-start gap-16\">\n      <StorageIcon className=\"icon-md -mt-4\" />\n      <Meter\n        className=\"flex-auto max-w-144\"\n        size=\"xs\"\n        value={data?.percentage}\n        label={label}\n        showValueLabel={false}\n        labelPosition=\"bottom\"\n      />\n    </div>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {toast} from '../../ui/toast/toast';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {Workspace} from '../types/workspace';\nimport {onFormQueryError} from '../../errors/on-form-query-error';\nimport {message} from '../../i18n/message';\n\ninterface Response extends BackendResponse {\n  workspace: Workspace;\n}\n\ninterface Props {\n  name: string;\n}\n\nexport function useCreateWorkspace(form: UseFormReturn<Props>) {\n  return useMutation({\n    mutationFn: (props: Props) => createWorkspace(props),\n    onSuccess: () => {\n      toast(message('Created workspace'));\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.fetchUserWorkspaces,\n      });\n    },\n    onError: r => onFormQueryError(r, form),\n  });\n}\n\nfunction createWorkspace(props: Props): Promise<Response> {\n  return apiClient.post('workspace', props).then(r => r.data);\n}\n","import {useForm} from 'react-hook-form';\nimport {FormTextField} from '../ui/forms/input-field/text-field/text-field';\nimport {Form} from '../ui/forms/form';\nimport {Button} from '../ui/buttons/button';\nimport {useCreateWorkspace} from './requests/create-workspace';\nimport {DialogFooter} from '../ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '../ui/overlays/dialog/dialog-context';\nimport {Dialog} from '../ui/overlays/dialog/dialog';\nimport {DialogHeader} from '../ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '../ui/overlays/dialog/dialog-body';\nimport {Trans} from '../i18n/trans';\n\nexport function NewWorkspaceDialog() {\n  const form = useForm<{name: string}>();\n  const {formId, close} = useDialogContext();\n  const createWorkspace = useCreateWorkspace(form);\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Create workspace\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          form={form}\n          id={formId}\n          onSubmit={() => {\n            createWorkspace.mutate(form.getValues(), {\n              onSuccess: response => {\n                close(response.workspace.id);\n              },\n            });\n          }}\n        >\n          <FormTextField\n            name=\"name\"\n            autoFocus\n            label={<Trans message=\"Workspace name\" />}\n            minLength={3}\n            required\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"text\" onClick={close}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n          form={formId}\n          disabled={createWorkspace.isPending}\n        >\n          <Trans message=\"Create\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {Workspace} from '../types/workspace';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {apiClient} from '../../http/query-client';\n\nexport interface FetchWorkspaceWithMembersResponse extends BackendResponse {\n  workspace: Workspace;\n}\n\nfunction fetchWorkspaceWithMembers(\n  workspaceId: number,\n): Promise<FetchWorkspaceWithMembersResponse> {\n  return apiClient\n    .get(`workspace/${workspaceId}`)\n    .then(response => response.data);\n}\n\nexport function useWorkspaceWithMembers(workspaceId: number) {\n  return useQuery({\n    queryKey: WorkspaceQueryKeys.workspaceWithMembers(workspaceId),\n    queryFn: () => fetchWorkspaceWithMembers(workspaceId),\n  });\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {WorkspaceInvite} from '../types/workspace-invite';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  invites: WorkspaceInvite[];\n}\n\ninterface Props {\n  workspaceId: number;\n  emails: string[];\n  roleId: number;\n}\n\nfunction InviteMembers({workspaceId, ...other}: Props): Promise<Response> {\n  return apiClient\n    .post(`workspace/${workspaceId}/invite`, other)\n    .then(r => r.data);\n}\n\nexport function useInviteMembers() {\n  return useMutation({\n    mutationFn: (props: Props) => InviteMembers(props),\n    onSuccess: (response, props) => {\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.workspaceWithMembers(props.workspaceId),\n      });\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {WorkspaceInvite} from '../types/workspace-invite';\nimport {toast} from '../../ui/toast/toast';\nimport {apiClient} from '../../http/query-client';\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  invite: WorkspaceInvite;\n}\n\ninterface Props {\n  workspaceId: number;\n  inviteId: string;\n}\n\nfunction ResendInvite({\n  workspaceId,\n  inviteId,\n  ...other\n}: Props): Promise<Response> {\n  return apiClient\n    .post(`workspace/${workspaceId}/${inviteId}/resend`, other)\n    .then(r => r.data);\n}\n\nexport function useResendInvite() {\n  return useMutation({\n    mutationFn: (props: Props) => ResendInvite(props),\n    onSuccess: () => {\n      toast('Invite sent');\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n","const matcher =\n  /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n\nexport function isEmail(string?: string): boolean {\n  if (!string) return false;\n  if (string.length > 320) return false;\n  return matcher.test(string);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {toast} from '../../ui/toast/toast';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {WorkspaceMember} from '../types/workspace-member';\nimport {WorkspaceInvite} from '../types/workspace-invite';\nimport {message} from '../../i18n/message';\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\ninterface Props {\n  workspaceId: number;\n  member: WorkspaceMember | WorkspaceInvite;\n  roleId: number;\n}\n\nfunction ChangeRole({workspaceId, member, ...other}: Props): Promise<Response> {\n  const modelType = member.model_type;\n  const memberId =\n    member.model_type === 'invite' ? member.id : member.member_id;\n  return apiClient\n    .post(\n      `workspace/${workspaceId}/${modelType}/${memberId}/change-role`,\n      other,\n    )\n    .then(r => r.data);\n}\n\nexport function useChangeRole() {\n  return useMutation({\n    mutationFn: (props: Props) => ChangeRole(props),\n    onSuccess: (response, props) => {\n      toast(message('Role changed'));\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.workspaceWithMembers(props.workspaceId),\n      });\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {useAuth} from '../../auth/use-auth';\nimport {useActiveWorkspaceId} from '../active-workspace-id-context';\nimport {PersonalWorkspace} from '../user-workspaces';\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\ninterface Props {\n  workspaceId: number;\n  memberId: number | string;\n  memberType: 'invite' | 'member';\n}\n\nfunction removeMember({\n  workspaceId,\n  memberId,\n  memberType,\n}: Props): Promise<Response> {\n  const endpoint =\n    memberType === 'invite'\n      ? `workspace/invite/${memberId}`\n      : `workspace/${workspaceId}/member/${memberId}`;\n  return apiClient.delete(endpoint).then(r => r.data);\n}\n\nexport function useRemoveMember() {\n  const {workspaceId, setWorkspaceId} = useActiveWorkspaceId();\n  const {user} = useAuth();\n  return useMutation({\n    mutationFn: (props: Props) => removeMember(props),\n    onSuccess: (response, props) => {\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.fetchUserWorkspaces,\n      });\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.workspaceWithMembers(props.workspaceId),\n      });\n\n      // if user left workspace that is currently active, switch to personal workspace\n      if (props.memberId === user?.id && workspaceId === props.workspaceId) {\n        setWorkspaceId(PersonalWorkspace.id);\n      }\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n","import {ConfirmationDialog} from '../ui/overlays/dialog/confirmation-dialog';\nimport {Trans} from '../i18n/trans';\n\ninterface Props {\n  onConfirm?: () => void;\n  isLoading?: boolean;\n}\nexport function LeaveWorkspaceConfirmation({onConfirm, isLoading}: Props) {\n  return (\n    <ConfirmationDialog\n      isDanger\n      title={<Trans message=\"Leave workspace\" />}\n      isLoading={isLoading}\n      onConfirm={onConfirm}\n      body={\n        <div>\n          <Trans message=\"Are you sure you want to leave this workspace?\" />\n          <div className=\"mt-8 font-semibold\">\n            <Trans message=\"All resources you've created in the workspace will be transferred to workspace owner.\" />\n          </div>\n        </div>\n      }\n      confirm={<Trans message=\"Leave\" />}\n    />\n  );\n}\n","import {useEffect, useState} from 'react';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {useWorkspaceWithMembers} from './requests/workspace-with-members';\nimport {ProgressCircle} from '../ui/progress/progress-circle';\nimport {Workspace} from './types/workspace';\nimport {GroupIcon} from '../icons/material/Group';\nimport {WorkspaceMember} from './types/workspace-member';\nimport {useAuth} from '../auth/use-auth';\nimport {\n  ChipField,\n  ChipValue,\n} from '../ui/forms/input-field/chip-field/chip-field';\nimport {useValueLists} from '../http/value-lists';\nimport {Button} from '../ui/buttons/button';\nimport {ArrowDropDownIcon} from '../icons/material/ArrowDropDown';\nimport {useInviteMembers} from './requests/invite-members';\nimport {WorkspaceInvite} from './types/workspace-invite';\nimport {ConfirmationDialog} from '../ui/overlays/dialog/confirmation-dialog';\nimport {useResendInvite} from './requests/resend-invite';\nimport {isEmail} from '../utils/string/is-email';\nimport {ButtonSize} from '../ui/buttons/button-size';\nimport {useChangeRole} from './requests/change-role';\nimport {IconButton} from '../ui/buttons/icon-button';\nimport {useRemoveMember} from './requests/remove-member';\nimport {CloseIcon} from '../icons/material/Close';\nimport {ExitToAppIcon} from '../icons/material/ExitToApp';\nimport {toast} from '../ui/toast/toast';\nimport {DialogTrigger} from '../ui/overlays/dialog/dialog-trigger';\nimport {Menu, MenuItem, MenuTrigger} from '../ui/navigation/menu/menu-trigger';\nimport {useDialogContext} from '../ui/overlays/dialog/dialog-context';\nimport {Dialog} from '../ui/overlays/dialog/dialog';\nimport {DialogHeader} from '../ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '../ui/overlays/dialog/dialog-body';\nimport {Trans} from '../i18n/trans';\nimport {useTrans} from '../i18n/use-trans';\nimport {message} from '../i18n/message';\nimport {LeaveWorkspaceConfirmation} from './leave-workspace-confirmation';\n\ninterface WorkspaceMembersDialogProps {\n  workspace: Workspace;\n}\nexport function WorkspaceMembersDialog({\n  workspace,\n}: WorkspaceMembersDialogProps) {\n  const {data, isLoading} = useWorkspaceWithMembers(workspace.id);\n  return (\n    <Dialog size=\"lg\">\n      <DialogHeader>\n        <Trans message=\"Manage workspace members\" />\n      </DialogHeader>\n      <DialogBody>\n        {isLoading ? (\n          <div className=\"flex min-h-[238px] items-center justify-center\">\n            <ProgressCircle isIndeterminate aria-label=\"Loading workspace...\" />\n          </div>\n        ) : (\n          <Manager workspace={data!.workspace} />\n        )}\n      </DialogBody>\n    </Dialog>\n  );\n}\n\ninterface ManagerProps {\n  workspace: Workspace;\n}\nfunction Manager({workspace}: ManagerProps) {\n  const {user} = useAuth();\n  const can = usePermissions(workspace);\n  const members: (WorkspaceMember | WorkspaceInvite)[] = [\n    ...(workspace.members || []),\n    ...(workspace.invites || []),\n  ];\n  const shouldHideOtherMembers = !can.update && !can.delete;\n\n  return (\n    <div>\n      {can.invite && <InviteChipField workspace={workspace} />}\n      <div className=\"mb-14 flex items-center gap-10 text-base\">\n        <GroupIcon className=\"icon-sm\" />\n        <Trans\n          message=\"Members of `:workspace`\"\n          values={{workspace: workspace.name}}\n        />\n      </div>\n      <AnimatePresence initial={false}>\n        {members.map(member => {\n          if (shouldHideOtherMembers && member.id !== user?.id) {\n            return null;\n          }\n          return (\n            <MemberListItem\n              key={`${member.model_type}.${member.id}`}\n              workspace={workspace}\n              member={member}\n            />\n          );\n        })}\n        {shouldHideOtherMembers && (\n          <div className=\"text-muted\">\n            <Trans\n              message=\"And [one one other member|:count other members]\"\n              values={{count: members.length}}\n            />\n          </div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n}\n\ninterface MemberListItemProps {\n  member: WorkspaceMember | WorkspaceInvite;\n  workspace: Workspace;\n}\nfunction MemberListItem({workspace, member}: MemberListItemProps) {\n  return (\n    <m.div\n      initial={{x: '-100%', opacity: 0}}\n      animate={{x: 0, opacity: 1}}\n      exit={{x: '100%', opacity: 0}}\n      transition={{type: 'tween', duration: 0.125}}\n      className=\"mb-20 flex items-start gap-14 text-sm\"\n      key={`${member.model_type}.${member.id}`}\n    >\n      <img\n        className=\"h-36 w-36 flex-shrink-0 rounded\"\n        src={member.avatar}\n        alt=\"\"\n      />\n      <div className=\"min-w-0 flex-auto items-center justify-between gap-14 md:flex\">\n        <div className=\"mb-10 overflow-hidden md:mb-0 md:mr-10\">\n          <div className=\"flex items-center justify-start gap-6\">\n            <div className=\"overflow-hidden text-ellipsis whitespace-nowrap\">\n              {member.display_name}\n            </div>\n            <MemberDisplayNameAppend workspace={workspace} member={member} />\n          </div>\n          <div className=\"text-muted\">{member.email}</div>\n        </div>\n        <MemberActions workspace={workspace} member={member} />\n      </div>\n    </m.div>\n  );\n}\n\nfunction usePermissions(workspace: Workspace) {\n  const {user: authUser} = useAuth();\n  const response = {update: false, invite: false, delete: false};\n  const permissions = ['update', 'invite', 'delete'] as const;\n  const authMember = workspace.members?.find(mb => mb.id === authUser?.id);\n\n  if (authMember) {\n    permissions.forEach(permission => {\n      response[permission] =\n        authMember.is_owner ||\n        !!authMember.permissions?.find(\n          p => p.name === `workspace_members.${permission}`,\n        );\n    });\n  }\n\n  return response;\n}\n\ninterface MemberActionsProps {\n  workspace: Workspace;\n  member: WorkspaceMember | WorkspaceInvite;\n}\nfunction MemberActions({workspace, member}: MemberActionsProps) {\n  const [selectedRole, setSelectedRole] = useState<number>(member.role_id);\n  const changeRole = useChangeRole();\n  const {user} = useAuth();\n\n  const can = usePermissions(workspace);\n  const isOwner = member.model_type === 'member' && member.is_owner;\n  const isCurrentUser =\n    member.model_type === 'member' && user?.id === member.id;\n\n  const roleSelector =\n    !can.update || isOwner || isCurrentUser ? (\n      <div className=\"ml-auto text-muted first:capitalize\">\n        <Trans message={member.role_name} />\n      </div>\n    ) : (\n      <RoleMenuTrigger\n        className=\"ml-auto flex-shrink-0\"\n        size=\"xs\"\n        value={selectedRole}\n        isDisabled={changeRole.isPending}\n        onChange={roleId => {\n          setSelectedRole(roleId);\n          changeRole.mutate({\n            roleId,\n            workspaceId: workspace.id,\n            member,\n          });\n        }}\n      />\n    );\n\n  return (\n    <>\n      {roleSelector}\n      {!isOwner && (isCurrentUser || can.delete) && (\n        <RemoveMemberButton\n          type={isCurrentUser ? 'leave' : 'remove'}\n          member={member}\n          workspace={workspace}\n        />\n      )}\n    </>\n  );\n}\n\ninterface InviteChipFieldProps {\n  workspace: Workspace;\n}\nfunction InviteChipField({workspace}: InviteChipFieldProps) {\n  const {trans} = useTrans();\n  const [chips, setChips] = useState<ChipValue[]>([]);\n  const allEmailsValid = chips.every(chip => !chip.invalid);\n  const displayWith = (chip: ChipValue) => chip.description || chip.name;\n  const [selectedRole, setSelectedRole] = useState<number>();\n  const inviteMembers = useInviteMembers();\n  const {data} = useValueLists(['workspaceRoles']);\n\n  useEffect(() => {\n    if (!selectedRole && data?.workspaceRoles?.length) {\n      setSelectedRole(data.workspaceRoles[0].id);\n    }\n  }, [data, selectedRole]);\n\n  return (\n    <div className=\"mb-30\">\n      <ChipField\n        value={chips}\n        onChange={setChips}\n        displayWith={displayWith}\n        validateWith={chip => {\n          const invalid = !isEmail(chip.description);\n          return {\n            ...chip,\n            invalid,\n            errorMessage: invalid\n              ? trans({message: 'Not a valid email'})\n              : undefined,\n          };\n        }}\n        placeholder={trans({message: 'Enter email addresses'})}\n        label={<Trans message=\"Invite people\" />}\n      />\n      <div className=\"mt-14 flex items-center justify-between gap-14\">\n        <RoleMenuTrigger onChange={setSelectedRole} value={selectedRole} />\n        {chips.length && selectedRole ? (\n          <Button\n            variant=\"flat\"\n            color=\"primary\"\n            size=\"sm\"\n            disabled={inviteMembers.isPending || !allEmailsValid}\n            onClick={() => {\n              inviteMembers.mutate(\n                {\n                  emails: chips.map(c => displayWith(c)),\n                  roleId: selectedRole,\n                  workspaceId: workspace.id,\n                },\n                {\n                  onSuccess: () => {\n                    setChips([]);\n                  },\n                },\n              );\n            }}\n          >\n            <Trans message=\"Invite\" />\n          </Button>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\ninterface RemoveMemberButtonProps {\n  member: WorkspaceMember | WorkspaceInvite;\n  workspace: Workspace;\n  type: 'leave' | 'remove';\n}\nfunction RemoveMemberButton({\n  member,\n  workspace,\n  type,\n}: RemoveMemberButtonProps) {\n  const removeMember = useRemoveMember();\n  const {close} = useDialogContext();\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={isConfirmed => {\n        if (isConfirmed) {\n          removeMember.mutate({\n            workspaceId: workspace.id,\n            memberId: member.id,\n            memberType: member.model_type,\n          });\n          if (type === 'leave') {\n            close();\n            toast(message('Left workspace'));\n          }\n        }\n      }}\n    >\n      <IconButton\n        size=\"md\"\n        className=\"flex-shrink-0 text-muted\"\n        disabled={removeMember.isPending}\n      >\n        {type === 'leave' ? <ExitToAppIcon /> : <CloseIcon />}\n      </IconButton>\n      {type === 'leave' ? (\n        <LeaveWorkspaceConfirmation />\n      ) : (\n        <RemoveMemberConfirmation member={member} />\n      )}\n    </DialogTrigger>\n  );\n}\n\ninterface RemoveMemberConfirmationProps {\n  member: WorkspaceMember | WorkspaceInvite;\n}\nfunction RemoveMemberConfirmation({member}: RemoveMemberConfirmationProps) {\n  return (\n    <ConfirmationDialog\n      isDanger\n      title={<Trans message=\"Remove member\" />}\n      body={\n        <div>\n          <Trans\n            message=\"Are you sure you want to remove `:name`?\"\n            values={{name: member.display_name}}\n          />\n          <div className=\"mt-8 font-semibold\">\n            <Trans\n              message=\"All workspace resources created by `:name` will be transferred to workspace owner.\"\n              values={{\n                name: member.display_name,\n              }}\n            />\n          </div>\n        </div>\n      }\n      confirm={<Trans message=\"Remove\" />}\n    />\n  );\n}\n\ninterface RoleMenuTriggerProps {\n  onChange: (value: number) => void;\n  value?: number;\n  size?: ButtonSize;\n  className?: string;\n  isDisabled?: boolean;\n}\nfunction RoleMenuTrigger({\n  value,\n  onChange,\n  size = 'xs',\n  className,\n  isDisabled,\n}: RoleMenuTriggerProps) {\n  const {data} = useValueLists(['workspaceRoles']);\n  const role = data?.workspaceRoles?.find(r => r.id === value);\n  if (!value || !role || !data?.workspaceRoles) return null;\n\n  return (\n    <MenuTrigger\n      selectionMode=\"single\"\n      selectedValue={value}\n      onSelectionChange={newValue => {\n        onChange(newValue as number);\n      }}\n    >\n      <Button\n        className={className}\n        size={size}\n        variant=\"flat\"\n        color=\"chip\"\n        disabled={isDisabled}\n        endIcon={<ArrowDropDownIcon />}\n      >\n        <Trans message={role.name} />\n      </Button>\n      <Menu>\n        {data.workspaceRoles.map(r => (\n          <MenuItem value={r.id} key={r.id} description={r.description}>\n            <Trans message={r.name} />\n          </MenuItem>\n        ))}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n\ninterface MemberDisplayNameAppendProps {\n  member: WorkspaceMember | WorkspaceInvite;\n  workspace: Workspace;\n}\nfunction MemberDisplayNameAppend({\n  member,\n  workspace,\n}: MemberDisplayNameAppendProps) {\n  const {user} = useAuth();\n  const can = usePermissions(workspace);\n\n  if (user?.id === member.id) {\n    return (\n      <div className=\"font-medium\">\n        (<Trans message=\"You\" />)\n      </div>\n    );\n  }\n  if (member.model_type === 'invite') {\n    return (\n      <div className=\"flex items-center gap-4\">\n        <div>·</div>\n        <div className=\"font-medium\">\n          <Trans message=\"Invited\" />\n        </div>\n        {can.invite ? (\n          <>\n            <div>·</div>\n            <ResendInviteDialogTrigger member={member} workspace={workspace} />\n          </>\n        ) : null}\n      </div>\n    );\n  }\n  return null;\n}\n\nfunction ResendInviteDialogTrigger({\n  member,\n  workspace,\n}: MemberDisplayNameAppendProps) {\n  const resendInvite = useResendInvite();\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={isConfirmed => {\n        if (isConfirmed) {\n          resendInvite.mutate({\n            workspaceId: workspace.id,\n            inviteId: member.id as string,\n          });\n        }\n      }}\n    >\n      <Button\n        variant=\"link\"\n        size=\"sm\"\n        color=\"primary\"\n        disabled={resendInvite.isPending}\n      >\n        <Trans message=\"Resend invite\" />\n      </Button>\n      <ConfirmationDialog\n        title={<Trans message=\"Resend invite\" />}\n        body={\n          <Trans message=\"Are you sure you want to send this invite again?\" />\n        }\n        confirm={<Trans message=\"Send\" />}\n      />\n    </DialogTrigger>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {toast} from '../../ui/toast/toast';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {Workspace} from '../types/workspace';\nimport {onFormQueryError} from '../../errors/on-form-query-error';\nimport {useDialogContext} from '../../ui/overlays/dialog/dialog-context';\nimport {message} from '../../i18n/message';\n\ninterface Response extends BackendResponse {\n  workspace: Workspace;\n}\n\nexport interface UpdateWorkspacePayload {\n  id: number;\n  name: string;\n}\n\nfunction updateWorkspace({\n  id,\n  ...props\n}: UpdateWorkspacePayload): Promise<Response> {\n  return apiClient.put(`workspace/${id}`, props).then(r => r.data);\n}\n\nexport function useUpdateWorkspace(\n  form: UseFormReturn<UpdateWorkspacePayload>,\n) {\n  const {close} = useDialogContext();\n  return useMutation({\n    mutationFn: (props: UpdateWorkspacePayload) => updateWorkspace(props),\n    onSuccess: response => {\n      close();\n      toast(message('Updated workspace'));\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.fetchUserWorkspaces,\n      });\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.workspaceWithMembers(\n          response.workspace.id,\n        ),\n      });\n    },\n    onError: r => onFormQueryError(r, form),\n  });\n}\n","import {useForm} from 'react-hook-form';\nimport {FormTextField} from '../ui/forms/input-field/text-field/text-field';\nimport {Form} from '../ui/forms/form';\nimport {Button} from '../ui/buttons/button';\nimport {DialogFooter} from '../ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '../ui/overlays/dialog/dialog-context';\nimport {Dialog} from '../ui/overlays/dialog/dialog';\nimport {DialogHeader} from '../ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '../ui/overlays/dialog/dialog-body';\nimport {\n  UpdateWorkspacePayload,\n  useUpdateWorkspace,\n} from './requests/update-workspace';\nimport {Workspace} from './types/workspace';\nimport {Trans} from '../i18n/trans';\n\ninterface Props {\n  workspace: Workspace;\n}\nexport function RenameWorkspaceDialog({workspace}: Props) {\n  const form = useForm<UpdateWorkspacePayload>({\n    defaultValues: {id: workspace.id, name: workspace.name},\n  });\n  const {formId, close} = useDialogContext();\n  const updateWorkspace = useUpdateWorkspace(form);\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Rename workspace\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          form={form}\n          id={formId}\n          onSubmit={() => {\n            updateWorkspace.mutate(form.getValues());\n          }}\n        >\n          <FormTextField\n            name=\"name\"\n            autoFocus\n            label={<Trans message=\"Name\" />}\n            minLength={3}\n            required\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"text\" onClick={close}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n          form={formId}\n          disabled={updateWorkspace.isPending}\n        >\n          <Trans message=\"Rename\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {toast} from '../../ui/toast/toast';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {useActiveWorkspaceId} from '../active-workspace-id-context';\nimport {PersonalWorkspace} from '../user-workspaces';\nimport {message} from '../../i18n/message';\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\nexport interface DeleteWorkspacePayload {\n  id: number;\n}\n\nfunction deleteWorkspace({id}: DeleteWorkspacePayload): Promise<Response> {\n  return apiClient.delete(`workspace/${id}`).then(r => r.data);\n}\n\nexport function useDeleteWorkspace() {\n  const {workspaceId, setWorkspaceId} = useActiveWorkspaceId();\n  return useMutation({\n    mutationFn: (props: DeleteWorkspacePayload) => deleteWorkspace(props),\n    onSuccess: (r, payload) => {\n      toast(message('Deleted workspace'));\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.fetchUserWorkspaces,\n      });\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.workspaceWithMembers(payload.id),\n      });\n\n      // if user deleted workspace that is currently active, switch to personal workspace\n      if (workspaceId === payload.id) {\n        setWorkspaceId(PersonalWorkspace.id);\n      }\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n","import {Trans} from '@common/i18n/trans';\nimport {Link} from 'react-router-dom';\nimport {LinkStyle} from '@common/ui/buttons/external-link';\nimport {ReactElement, ReactNode} from 'react';\nimport {SectionHelper, SectionHelperProps} from '@common/ui/section-helper';\nimport {useSettings} from '@common/core/settings/use-settings';\nimport {PolicyFailReason} from '@common/billing/upgrade/policy-fail-reason';\n\ninterface Props {\n  className?: string;\n  // plural name in lowercase (e.g. 'projects')\n  resourceName?: ReactElement | string;\n  reason?: PolicyFailReason;\n  size?: SectionHelperProps['size'];\n  color?: SectionHelperProps['color'];\n  message?: ReactNode;\n}\nexport function PolicyFailMessage({\n  resourceName,\n  className,\n  size = 'md',\n  color = 'bgAlt',\n  reason = 'overQuota',\n  ...other\n}: Props) {\n  const message = other.message ?? (\n    <MessageText resourceName={resourceName!} reason={reason} />\n  );\n\n  return (\n    <SectionHelper\n      color={color}\n      size={size}\n      className={className}\n      description={message}\n    />\n  );\n}\n\ninterface MessageTextProps {\n  resourceName: ReactElement | string;\n  reason?: PolicyFailReason;\n}\nfunction MessageText({resourceName, reason}: MessageTextProps) {\n  const {billing} = useSettings();\n\n  if (reason === 'noWorkspacePermission') {\n    return (\n      <Trans\n        message=\"You can't create new :name in this workspace.\"\n        values={{name: resourceName}}\n      />\n    );\n  }\n\n  const upgradeMsgValues = {\n    name: resourceName,\n    a: (text: ReactNode) => (\n      <Link className={LinkStyle} to=\"/pricing\">\n        {text}\n      </Link>\n    ),\n  };\n\n  if (reason === 'overQuota' && billing.enable) {\n    return (\n      <Trans\n        message=\"Your plan is at its maximum number of :name allowed. <a>Upgrade to add more.</a>\"\n        values={upgradeMsgValues}\n      />\n    );\n  }\n\n  if (reason === 'noPermission' && billing.enable) {\n    return (\n      <Trans\n        message=\"To unlock ability to create :name. <a>Upgrade your plan.</a>\"\n        values={upgradeMsgValues}\n      />\n    );\n  }\n\n  return <Trans message=\"You don't have permissions to create :name.\" />;\n}\n","import clsx from 'clsx';\nimport {\n  cloneElement,\n  forwardRef,\n  Fragment,\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react';\nimport {ButtonBase} from '../ui/buttons/button-base';\nimport {PersonalWorkspace, useUserWorkspaces} from './user-workspaces';\nimport {UnfoldMoreIcon} from '../icons/material/UnfoldMore';\nimport {AddIcon} from '../icons/material/Add';\nimport {NewWorkspaceDialog} from './new-workspace-dialog';\nimport {WorkspaceMembersDialog} from './workspace-members-dialog';\nimport {\n  useActiveWorkspace,\n  useActiveWorkspaceId,\n} from './active-workspace-id-context';\nimport {DialogTrigger} from '../ui/overlays/dialog/dialog-trigger';\nimport {Workspace} from './types/workspace';\nimport {Dialog} from '../ui/overlays/dialog/dialog';\nimport {DialogBody} from '../ui/overlays/dialog/dialog-body';\nimport {Button, ButtonProps} from '../ui/buttons/button';\nimport {CheckIcon} from '../icons/material/Check';\nimport {Menu, MenuItem, MenuTrigger} from '../ui/navigation/menu/menu-trigger';\nimport {KeyboardArrowDownIcon} from '../icons/material/KeyboardArrowDown';\nimport {PersonAddIcon} from '../icons/material/PersonAdd';\nimport {DeleteIcon} from '../icons/material/Delete';\nimport {ExitToAppIcon} from '../icons/material/ExitToApp';\nimport {EditIcon} from '../icons/material/Edit';\nimport {RenameWorkspaceDialog} from './rename-workspace-dialog';\nimport {ConfirmationDialog} from '../ui/overlays/dialog/confirmation-dialog';\nimport {useDeleteWorkspace} from './requests/delete-workspace';\nimport {useRemoveMember} from './requests/remove-member';\nimport {useAuth} from '../auth/use-auth';\nimport {Trans} from '../i18n/trans';\nimport {LeaveWorkspaceConfirmation} from './leave-workspace-confirmation';\nimport {openDialog} from '@common/ui/overlays/store/dialog-store';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {PolicyFailMessage} from '@common/billing/upgrade/policy-fail-message';\n\ninterface WorkspaceSelectorProps {\n  className?: string;\n  onChange?: (id: number) => void;\n  trigger?: ReactElement<ButtonProps>;\n  placement?: 'top' | 'bottom';\n}\nexport function WorkspaceSelector({\n  onChange,\n  className,\n  trigger,\n  placement = 'top',\n}: WorkspaceSelectorProps) {\n  const {data: workspaces, isFetched, isFetching} = useUserWorkspaces();\n  const {setWorkspaceId} = useActiveWorkspaceId();\n  const activeWorkspace = useActiveWorkspace();\n  const [selectorIsOpen, setSelectorIsOpen] = useState(false);\n  const {hasPermission} = useAuth();\n\n  // if user no longer has access to previously selected workspace, select personal one\n  useEffect(() => {\n    // make sure we don't unset active workspace while user workspaces are being re-fetched\n    if (isFetched && !isFetching && !activeWorkspace) {\n      setWorkspaceId(PersonalWorkspace.id);\n    }\n  }, [activeWorkspace, workspaces, setWorkspaceId, isFetched, isFetching]);\n\n  if (\n    // if we have a custom trigger, leave rendering up to the customer trigger\n    !trigger &&\n    (!activeWorkspace ||\n      (!hasPermission('workspaces.create') && workspaces?.length === 1))\n  ) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <DialogTrigger\n        type=\"popover\"\n        placement={placement}\n        isOpen={selectorIsOpen}\n        onClose={() => {\n          setSelectorIsOpen(false);\n        }}\n      >\n        {trigger ? (\n          cloneElement(trigger, {\n            onClick: () => setSelectorIsOpen(!selectorIsOpen),\n          })\n        ) : (\n          <DefaultTrigger\n            onClick={() => setSelectorIsOpen(!selectorIsOpen)}\n            workspace={activeWorkspace!}\n            className={className}\n          />\n        )}\n        <Dialog size=\"min-w-320\">\n          <DialogBody padding=\"p-10\">\n            <div className=\"mb-16 border-b pb-10\">\n              {workspaces?.map(workspace => (\n                <WorkspaceItem\n                  key={workspace.id}\n                  workspace={workspace}\n                  setSelectorIsOpen={setSelectorIsOpen}\n                  onChange={onChange}\n                />\n              ))}\n            </div>\n            <div className=\"mb-4 px-4 text-center\">\n              <CreateWorkspaceButton\n                onClick={() => setSelectorIsOpen(false)}\n                onCreated={id => onChange?.(id)}\n                workspaceCount={workspaces!.length - 1}\n              />\n            </div>\n          </DialogBody>\n        </Dialog>\n      </DialogTrigger>\n    </Fragment>\n  );\n}\n\ninterface CreateWorkspaceButtonProps {\n  onClick: () => void;\n  onCreated?: (id: number) => void;\n  workspaceCount: number;\n}\nfunction CreateWorkspaceButton({\n  onClick,\n  onCreated,\n  workspaceCount,\n}: CreateWorkspaceButtonProps) {\n  const {setWorkspaceId} = useActiveWorkspaceId();\n  const {checkOverQuotaOrNoPermission} = useAuth();\n  const {overQuotaOrNoPermission} = checkOverQuotaOrNoPermission(\n    'workspaces.create',\n    'count',\n    workspaceCount,\n  );\n\n  return (\n    <Fragment>\n      <Button\n        disabled={overQuotaOrNoPermission}\n        onClick={async e => {\n          e.preventDefault();\n          e.stopPropagation();\n          onClick();\n          const workspaceId = await openDialog(NewWorkspaceDialog);\n          if (workspaceId) {\n            setWorkspaceId(workspaceId);\n            onCreated?.(workspaceId);\n          }\n        }}\n        variant=\"outline\"\n        startIcon={<AddIcon />}\n        color=\"primary\"\n        className=\"h-40 w-full\"\n      >\n        <Trans message=\"Create new workspace\" />\n      </Button>\n      {overQuotaOrNoPermission && (\n        <PolicyFailMessage\n          size=\"sm\"\n          className=\"mt-12 max-w-288\"\n          resourceName={<Trans message=\"worksapces\" />}\n        />\n      )}\n    </Fragment>\n  );\n}\n\ninterface DefaultTriggerProps {\n  onClick: () => void;\n  workspace: Workspace;\n  className?: string;\n}\nconst DefaultTrigger = forwardRef<HTMLButtonElement, DefaultTriggerProps>(\n  ({workspace, className, onClick, ...other}, ref) => {\n    return (\n      <ButtonBase\n        ref={ref}\n        onClick={onClick}\n        className={clsx(\n          'flex items-center gap-10 rounded ring-inset hover:bg-hover focus-visible:ring-2',\n          className,\n        )}\n        {...other}\n      >\n        <span className=\"mr-auto block flex-auto overflow-hidden text-left\">\n          <span className=\"block overflow-hidden overflow-ellipsis text-sm font-medium text-main\">\n            {workspace.default ? (\n              <Trans message={workspace.name} />\n            ) : (\n              workspace.name\n            )}\n          </span>\n          <span className=\"block text-xs text-muted\">\n            {workspace.default ? (\n              <Trans message=\"Personal workspace\" />\n            ) : (\n              <Trans\n                message=\":count members\"\n                values={{count: workspace.members_count}}\n              />\n            )}\n          </span>\n        </span>\n        <UnfoldMoreIcon className=\"shrink-0 icon-md\" />\n      </ButtonBase>\n    );\n  },\n);\n\ninterface WorkspaceItemProps {\n  workspace: Workspace;\n  onChange: WorkspaceSelectorProps['onChange'];\n  setSelectorIsOpen: (value: boolean) => void;\n}\nfunction WorkspaceItem({\n  workspace,\n  onChange,\n  setSelectorIsOpen,\n}: WorkspaceItemProps) {\n  const {workspaceId, setWorkspaceId} = useActiveWorkspaceId();\n  const isActive = workspaceId === workspace.id;\n\n  return (\n    <div\n      onClick={() => {\n        setWorkspaceId(workspace.id);\n        onChange?.(workspace.id);\n        setSelectorIsOpen(false);\n      }}\n      className={clsx(\n        'mb-4 flex cursor-pointer items-center gap-12 rounded-lg p-10 text-left',\n        isActive && 'bg-primary/5',\n        !isActive && 'hover:bg-hover',\n      )}\n    >\n      <CheckIcon\n        size=\"sm\"\n        className={clsx('flex-shrink-0 text-primary', !isActive && 'invisible')}\n      />\n      <div className=\"flex-auto\">\n        <div className={clsx('text-sm', isActive && 'font-semibold')}>\n          {workspace.name}\n        </div>\n        <div className=\"text-sm text-muted\">\n          {workspace.default ? (\n            <Trans message=\"Personal workspace\" />\n          ) : (\n            <Trans\n              message=\":count members\"\n              values={{count: workspace.members_count}}\n            />\n          )}\n        </div>\n      </div>\n      {workspace.id !== 0 && (\n        <ManageButton\n          setSelectorIsOpen={setSelectorIsOpen}\n          workspace={workspace}\n          onChange={onChange}\n        />\n      )}\n    </div>\n  );\n}\n\ninterface LeaveWorkspaceDialogProps {\n  workspace: Workspace;\n  onChange?: (id: number) => void;\n}\nfunction LeaveWorkspaceDialog({\n  workspace,\n  onChange,\n}: LeaveWorkspaceDialogProps) {\n  const removeMember = useRemoveMember();\n  const {user} = useAuth();\n  const {close} = useDialogContext();\n  return (\n    <LeaveWorkspaceConfirmation\n      isLoading={removeMember.isPending}\n      onConfirm={() => {\n        removeMember.mutate(\n          {\n            workspaceId: workspace.id,\n            memberId: user!.id,\n            memberType: 'member',\n          },\n          {\n            onSuccess: () => {\n              close();\n              onChange?.(PersonalWorkspace.id);\n            },\n          },\n        );\n      }}\n    />\n  );\n}\n\ninterface DeleteWorkspaceConfirmationProps {\n  workspace: Workspace;\n  onChange?: (id: number) => void;\n}\nfunction DeleteWorkspaceConfirmation({\n  workspace,\n  onChange,\n}: DeleteWorkspaceConfirmationProps) {\n  const deleteWorkspace = useDeleteWorkspace();\n  const {close} = useDialogContext();\n  return (\n    <ConfirmationDialog\n      isDanger\n      title={<Trans message=\"Delete workspace\" />}\n      body={\n        <Trans\n          message=\"Are you sure you want to delete “:name“?\"\n          values={{name: workspace.name}}\n        />\n      }\n      confirm={<Trans message=\"Delete\" />}\n      isLoading={deleteWorkspace.isPending}\n      onConfirm={() => {\n        deleteWorkspace.mutate(\n          {id: workspace.id},\n          {\n            onSuccess: () => {\n              close();\n              onChange?.(PersonalWorkspace.id);\n            },\n          },\n        );\n      }}\n    />\n  );\n}\n\ninterface ManageButtonProps {\n  setSelectorIsOpen: (value: boolean) => void;\n  workspace: Workspace;\n  onChange?: (id: number) => void;\n}\nfunction ManageButton({\n  setSelectorIsOpen,\n  workspace,\n  onChange,\n}: ManageButtonProps) {\n  const {user} = useAuth();\n\n  return (\n    <MenuTrigger onItemSelected={() => setSelectorIsOpen(false)}>\n      <Button\n        onClick={e => {\n          e.preventDefault();\n          e.stopPropagation();\n        }}\n        color=\"primary\"\n        size=\"xs\"\n        variant=\"outline\"\n        endIcon={<KeyboardArrowDownIcon />}\n      >\n        <Trans message=\"Manage\" />\n      </Button>\n      <Menu>\n        <MenuItem\n          onClick={e => {\n            e.stopPropagation();\n            openDialog(WorkspaceMembersDialog, {workspace});\n          }}\n          value=\"workspaceMembers\"\n          startIcon={<PersonAddIcon />}\n        >\n          <Trans message=\"Members\" />\n        </MenuItem>\n        {workspace.owner_id === user?.id && (\n          <MenuItem\n            onClick={e => {\n              e.stopPropagation();\n              openDialog(RenameWorkspaceDialog, {workspace});\n            }}\n            value=\"updateWorkspace\"\n            startIcon={<EditIcon />}\n          >\n            <Trans message=\"Rename\" />\n          </MenuItem>\n        )}\n        {workspace.owner_id !== user?.id && (\n          <MenuItem\n            onClick={e => {\n              e.stopPropagation();\n              openDialog(LeaveWorkspaceDialog, {workspace, onChange});\n            }}\n            value=\"leaveWorkspace\"\n            startIcon={<ExitToAppIcon />}\n          >\n            <Trans message=\"Leave\" />\n          </MenuItem>\n        )}\n        {workspace.owner_id === user?.id && (\n          <MenuItem\n            onClick={e => {\n              e.stopPropagation();\n              openDialog(DeleteWorkspaceConfirmation, {workspace, onChange});\n            }}\n            value=\"deleteWorkspace\"\n            startIcon={<DeleteIcon />}\n          >\n            <Trans message=\"Delete\" />\n          </MenuItem>\n        )}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","export enum MenuPositions {\n  DriveSidebar = 'drive-sidebar',\n}\n","\"use strict\";var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var r,t=1,n=arguments.length;t<n;t++)for(var o in r=arguments[t])Object.prototype.hasOwnProperty.call(r,o)&&(e[o]=r[o]);return e}).apply(this,arguments)},defaultConfig=(Object.defineProperty(exports,\"__esModule\",{value:!0}),{id:\"id\",parentId:\"parentId\",dataField:\"data\",childrenField:\"children\",throwIfOrphans:!1,rootParentIds:{\"\":!(exports.countNodes=exports.arrayToTree=void 0)},nestedIds:!0,assign:!1});function arrayToTree(c,e){void 0===e&&(e={});for(var r,t=__assign(__assign({},defaultConfig),e),n=[],o={},a=t.throwIfOrphans?new Set:null,s=0,h=c;s<h.length;s++){var i=h[s],d=t.nestedIds?getNestedProperty(i,t.id):i[t.id],l=t.nestedIds?getNestedProperty(i,t.parentId):i[t.parentId];if(t.rootParentIds[d])throw new Error(\"The item array contains a node whose parentId both exists in another node and is in \"+'`rootParentIds` (`itemId`: \"'.concat(d,'\", `rootParentIds`: ').concat(Object.keys(t.rootParentIds).map(function(e){return'\"'.concat(e,'\"')}).join(\", \"),\").\"));Object.prototype.hasOwnProperty.call(o,d)||(o[d]=((r={})[t.childrenField]=[],r)),a&&a.delete(d),t.dataField?o[d][t.dataField]=i:t.assign?o[d]=Object.assign(i,((r={})[t.childrenField]=o[d][t.childrenField],r)):o[d]=__assign(__assign({},i),((i={})[t.childrenField]=o[d][t.childrenField],i));i=o[d];null==l||t.rootParentIds[l]?n.push(i):(Object.prototype.hasOwnProperty.call(o,l)||(o[l]=((d={})[t.childrenField]=[],d),a&&a.add(l)),o[l][t.childrenField].push(i))}if(null!=a&&a.size)throw new Error(\"The items array contains orphans that point to the following parentIds: \"+\"[\".concat(Array.from(a),\"]. These parentIds do not exist in the items array. Hint: prevent orphans to result \")+\"in an error by passing the following option: { throwIfOrphans: false }\");if(t.throwIfOrphans&&countNodes(n,t.childrenField)<Object.keys(o).length)throw new Error(\"The items array contains nodes with a circular parent/child relationship.\");return n}function countNodes(e,t){return e.reduce(function(e,r){return e+1+(r[t]&&countNodes(r[t],t))},0)}function getNestedProperty(e,r){return r.split(\".\").reduce(function(e,r){return e&&e[r]},e)}exports.arrayToTree=arrayToTree,exports.countNodes=countNodes;","import {useQuery} from '@tanstack/react-query';\nimport {DriveFolder} from '../drive-entry';\nimport {useAuth} from '@common/auth/use-auth';\nimport {DriveQueryKeys} from '../../drive-query-keys';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {apiClient} from '@common/http/query-client';\nimport {useActiveWorkspaceId} from '@common/workspace/active-workspace-id-context';\n\nexport interface UserFoldersApiParams {\n  userId: number;\n  workspaceId: number | null;\n}\n\ninterface UserFoldersResponse extends BackendResponse {\n  folders: DriveFolder[];\n  rootFolder: DriveFolder;\n}\n\nfunction fetchUserFolders(\n  params: UserFoldersApiParams,\n): Promise<UserFoldersResponse> {\n  return apiClient\n    .get(`users/${params.userId}/folders`, {params})\n    .then(response => response.data);\n}\n\nexport function useFolders() {\n  const {user} = useAuth();\n  const {workspaceId} = useActiveWorkspaceId();\n  const params: UserFoldersApiParams = {\n    userId: user!.id,\n    workspaceId,\n  };\n  return useQuery({\n    queryKey: DriveQueryKeys.fetchUserFolders(params),\n    queryFn: () => fetchUserFolders(params),\n    enabled: !!user,\n  });\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {DriveEntry} from '../drive-entry';\nimport {toast} from '@common/ui/toast/toast';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\nimport {message} from '@common/i18n/message';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {RootFolderPage} from '../../drive-page/drive-page';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  entries: DriveEntry[];\n  destination: FileEntry | null;\n}\n\ninterface Payload {\n  entryIds: number[];\n  destinationId?: number | null;\n}\n\nexport function useMoveEntries() {\n  return useMutation({\n    mutationFn: (payload: Payload) => {\n      toast.loading(\n        message('Moving [one 1 item|other :count items]...', {\n          values: {\n            count: payload.entryIds.length,\n          },\n        }),\n        {disableExitAnimation: true},\n      );\n      return moveEntries(payload);\n    },\n    onSuccess: (r, p) => {\n      invalidateEntryQueries();\n      toast(\n        message('Moved [one 1 item|other :count items] to \":destination\"', {\n          values: {\n            count: p.entryIds.length,\n            destination: (r.destination || RootFolderPage.folder).name,\n          },\n        }),\n        {disableEnterAnimation: true},\n      );\n    },\n    onError: err =>\n      showHttpErrorToast(err, message('Could not move items'), null, {\n        disableEnterAnimation: true,\n      }),\n  });\n}\n\nfunction moveEntries(payload: Payload): Promise<Response> {\n  // backend expects null for root folder, it might be zero or empty string on frontend\n  payload.destinationId = !payload.destinationId ? null : payload.destinationId;\n  return apiClient\n    .post('file-entries/move', payload)\n    .then(response => response.data);\n}\n","import {FileEntry} from '@common/uploads/file-entry';\n\nexport interface PartialFolder {\n  id: number;\n  name: string;\n  path: string;\n  parent_id: number | null;\n  type: string;\n}\n\nexport function canMoveEntriesInto(\n  targets: FileEntry[],\n  destination: PartialFolder\n) {\n  if (destination.type !== 'folder') return false;\n\n  // should not be able to move folder into its\n  // own child or folder it's already in\n  return targets.every(target => {\n    if (!target) return false;\n    // entry is already in this folder\n    if (\n      destination.id === target.parent_id ||\n      // root folder check\n      (!target.parent_id && destination.id === 0)\n    ) {\n      return false;\n    }\n\n    return !destinationIsInTarget(destination, target);\n  });\n}\n\nfunction destinationIsInTarget(destination: PartialFolder, target: FileEntry) {\n  const destinationPath = (destination.path || '').split('/');\n  const targetPath = (target.path || '').split('/');\n  return targetPath.every((part, index) => {\n    return destinationPath[index] === part;\n  });\n}\n","import {FileEntry} from '@common/uploads/file-entry';\nimport {useMoveEntries} from './queries/use-move-entries';\nimport {useDriveUploadQueue} from '../uploading/use-drive-upload-queue';\nimport {canMoveEntriesInto} from './utils/can-move-entries-into';\nimport {\n  ConnectedDraggable,\n  MixedDraggable,\n} from '@common/ui/interactions/dnd/use-draggable';\nimport {NativeFileDraggable} from '@common/ui/interactions/dnd/use-droppable';\nimport {driveState} from '@app/drive/drive-store';\n\nexport function useFolderDropAction(folder: FileEntry) {\n  const moveEntries = useMoveEntries();\n  const {uploadFiles} = useDriveUploadQueue();\n\n  const onDrop = async (target: ConnectedDraggable | NativeFileDraggable) => {\n    if (folder.type !== 'folder') return;\n    if (target.type === 'nativeFile') {\n      uploadFiles(await target.getData(), {\n        metadata: {parentId: folder.id},\n      });\n    } else if (target.type === 'fileEntry') {\n      const entries = target.getData() as FileEntry[];\n      if (entries?.length && canMoveEntriesInto(entries, folder)) {\n        moveEntries.mutate({\n          destinationId: folder.id,\n          entryIds: entries.map(e => e.id),\n        });\n        driveState().deselectEntries('all');\n      }\n    }\n  };\n\n  return {onDrop};\n}\n\nexport function folderAcceptsDrop(target: MixedDraggable, entry: FileEntry) {\n  if (target.type === 'fileEntry') {\n    const entries = target.getData() as FileEntry[];\n    return canMoveEntriesInto(entries, entry);\n  }\n  return true;\n}\n","import {FileEntry} from '@common/uploads/file-entry';\n\nexport function makeFolderTreeDragId(entry: FileEntry) {\n  return `${entry.id}-tree`;\n}\n\nexport function isFolderTreeDragId(id: string | number): boolean {\n  return `${id}`.endsWith('-tree');\n}\n","import {useDroppable} from '@common/ui/interactions/dnd/use-droppable';\nimport {driveState} from '../../drive-store';\nimport {RefObject, useState} from 'react';\nimport {\n  folderAcceptsDrop,\n  useFolderDropAction,\n} from '../../files/use-folder-drop-action';\nimport {DriveFolder} from '../../files/drive-entry';\nimport {makeFolderTreeDragId} from './folder-tree-drag-id';\n\ninterface Props {\n  folder: DriveFolder;\n  ref: RefObject<HTMLDivElement>;\n}\nexport function useSidebarTreeDropTarget({folder, ref}: Props) {\n  const [isDragOver, setIsDragOver] = useState(false);\n  const {onDrop} = useFolderDropAction(folder);\n\n  const dropProps = useDroppable({\n    id: makeFolderTreeDragId(folder),\n    ref,\n    types: ['fileEntry', 'nativeFile'],\n    acceptsDrop: draggable => folderAcceptsDrop(draggable, folder),\n    onDragEnter: draggable => {\n      if (folderAcceptsDrop(draggable, folder)) {\n        setIsDragOver(true);\n      }\n    },\n    onDragLeave: () => {\n      setIsDragOver(false);\n    },\n    onDropActivate: () => {\n      if (!driveState().sidebarExpandedKeys.includes(folder.id)) {\n        driveState().setSidebarExpandedKeys([\n          ...driveState().sidebarExpandedKeys,\n          folder.id,\n        ]);\n      }\n    },\n    onDrop,\n  });\n\n  return {...dropProps, isDragOver};\n}\n","import {createContext, Key} from 'react';\n\nexport interface TreeContextValue {\n  expandedKeys: Key[];\n  setExpandedKeys: (value: Key[]) => void;\n  selectedKeys: Key[];\n  setSelectedKeys: (value: Key[]) => void;\n  focusedNode?: Key;\n  setFocusedNode: (node?: Key) => void;\n}\n\nexport const TreeContext = createContext<TreeContextValue>(null!);\n","import {TreeItemRenderer} from './tree-item';\nimport {cloneElement} from 'react';\nimport {TreeNode} from './tree';\n\ninterface RenderTreeProps<T extends TreeNode> {\n  nodes: T[];\n  parentNode?: T;\n  itemRenderer: TreeItemRenderer<T>;\n  level?: number;\n}\nexport function renderTree<T extends TreeNode>({\n  nodes,\n  itemRenderer,\n  parentNode,\n  level,\n}: RenderTreeProps<T>) {\n  return nodes.map((node, index) => {\n    return cloneElement(itemRenderer(node), {\n      level: level == undefined ? 0 : level + 1,\n      index,\n      node,\n      parentNode,\n      key: node.id,\n      itemRenderer,\n    });\n  });\n}\n","import React, {\n  forwardRef,\n  MouseEventHandler,\n  ReactNode,\n  useContext,\n} from 'react';\nimport {TreeContext} from './tree-context';\nimport clsx from 'clsx';\nimport {ArrowRightIcon} from '../../icons/material/ArrowRight';\n\ninterface TreeLabelProps {\n  level?: number;\n  node: any;\n  icon?: ReactNode;\n  label?: ReactNode;\n  className?: string;\n}\nexport const TreeLabel = forwardRef<HTMLDivElement, TreeLabelProps>(\n  ({icon, label, level = 0, node, className, ...domProps}, ref) => {\n    const {expandedKeys, setExpandedKeys, selectedKeys, setSelectedKeys} =\n      useContext(TreeContext);\n    const isExpanded = expandedKeys.includes(node.id);\n    const isSelected = selectedKeys.includes(node.id);\n\n    const handleExpandIconClick: MouseEventHandler = e => {\n      e.stopPropagation();\n      const index = expandedKeys.indexOf(node.id);\n      const newExpandedKeys = [...expandedKeys];\n      if (index > -1) {\n        newExpandedKeys.splice(index, 1);\n      } else {\n        newExpandedKeys.push(node.id);\n      }\n      setExpandedKeys(newExpandedKeys);\n    };\n\n    return (\n      <div\n        {...domProps}\n        ref={ref}\n        onClick={e => {\n          e.stopPropagation();\n          setSelectedKeys([node.id]);\n        }}\n        className={clsx(\n          'flex flex-nowrap whitespace-nowrap items-center gap-4 py-6 rounded header cursor-pointer overflow-hidden text-ellipsis tree-label',\n          className,\n          isSelected && 'bg-primary/selected text-primary font-bold',\n          !isSelected && 'hover:bg-hover'\n        )}\n      >\n        {level > 0 && (\n          <div className=\"flex\">\n            {Array.from({length: level}).map((_, i) => {\n              return <div key={i} className=\"w-24 h-24\" />;\n            })}\n          </div>\n        )}\n        <div onClick={handleExpandIconClick}>\n          <ArrowRightIcon\n            className={clsx(\n              'icon-sm cursor-default transition-transform',\n              isExpanded && 'rotate-90'\n            )}\n          />\n        </div>\n        {icon}\n        <div className=\"overflow-hidden text-ellipsis pr-6\">{label}</div>\n      </div>\n    );\n  }\n);\nTreeLabel.displayName = 'TreeLabel';\n","import React, {\n  HTMLAttributes,\n  ReactElement,\n  ReactNode,\n  Ref,\n  useContext,\n  useEffect,\n} from 'react';\nimport {useFocusManager} from '@react-aria/focus';\nimport {TreeContext} from './tree-context';\nimport {createEventHandler} from '../../utils/dom/create-event-handler';\nimport clsx from 'clsx';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {TreeNode} from './tree';\nimport {renderTree} from './render-tree';\nimport {TreeLabel} from './tree-label';\n\nexport type TreeItemRenderer<T extends TreeNode> = (\n  node: any,\n) => ReactElement<TreeItemProps<T>>;\n\nexport interface TreeItemProps<T extends TreeNode>\n  extends HTMLAttributes<HTMLElement> {\n  label: ReactNode;\n  icon: ReactNode;\n  node?: T;\n  parentNode?: T;\n  level?: number;\n  index?: number;\n  itemRenderer?: TreeItemRenderer<T>;\n  labelRef?: Ref<HTMLDivElement>;\n  labelClassName?: string;\n  className?: string;\n}\nexport function TreeItem<T extends TreeNode>({\n  label,\n  icon,\n  node,\n  level,\n  index,\n  itemRenderer,\n  labelRef,\n  labelClassName,\n  className,\n  parentNode,\n  ...domProps\n}: TreeItemProps<T>) {\n  const focusManager = useFocusManager();\n  const {\n    expandedKeys,\n    selectedKeys,\n    focusedNode,\n    setFocusedNode,\n    setExpandedKeys,\n    setSelectedKeys,\n  } = useContext(TreeContext);\n\n  // clear focused node on unmount\n  useEffect(() => {\n    return () => {\n      if (focusedNode === node?.id) {\n        setFocusedNode(undefined);\n      }\n    };\n  }, [focusedNode, node?.id, setFocusedNode]);\n\n  if (!node || !itemRenderer) return null;\n\n  const hasChildren = node.children.length;\n  const isExpanded = hasChildren && expandedKeys.includes(node.id);\n  const isSelected = selectedKeys.includes(node.id);\n  const isFirstNode = level === 0 && index === 0;\n  const isFocused =\n    focusedNode == undefined ? isFirstNode : focusedNode === node.id;\n\n  const onKeyDown = (e: React.KeyboardEvent<HTMLUListElement>) => {\n    if (focusedNode == null) return;\n    switch (e.key) {\n      // select the node\n      case 'Enter':\n      case ' ':\n        e.stopPropagation();\n        e.preventDefault();\n        setSelectedKeys([focusedNode]);\n        break;\n\n      // expand node, or move focus to first (and only first) child\n      case 'ArrowRight':\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (!hasChildren) return;\n\n        if (!isExpanded) {\n          setExpandedKeys([...expandedKeys, focusedNode]);\n        } else {\n          focusManager?.focusNext();\n        }\n        break;\n\n      // collapse node, or move focus to parent node\n      case 'ArrowLeft':\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (isExpanded) {\n          const index = expandedKeys.indexOf(focusedNode);\n          const newKeys = [...expandedKeys];\n          newKeys.splice(index, 1);\n          setExpandedKeys(newKeys);\n        } else if (parentNode) {\n          const parentEl =\n            document.activeElement?.parentElement?.closest('[tabindex]');\n          if (parentEl) {\n            (parentEl as HTMLElement).focus();\n          }\n        }\n        break;\n\n      // focus next visible node, recursively\n      case 'ArrowDown':\n        e.stopPropagation();\n        e.preventDefault();\n        focusManager?.focusNext();\n        break;\n\n      // focus previous visible node, recursively\n      case 'ArrowUp':\n        e.stopPropagation();\n        e.preventDefault();\n        focusManager?.focusPrevious();\n        break;\n\n      // focus first visible node\n      case 'Home':\n        e.stopPropagation();\n        e.preventDefault();\n        focusManager?.focusFirst();\n        break;\n\n      // focus last visible node\n      case 'End':\n        e.stopPropagation();\n        e.preventDefault();\n        focusManager?.focusLast();\n        break;\n\n      // expand all sibling nodes\n      case '*':\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (parentNode?.children) {\n          const newKeys = [...expandedKeys];\n          parentNode.children.forEach(childNode => {\n            if (\n              childNode.children.length &&\n              !expandedKeys.includes(childNode.id)\n            ) {\n              newKeys.push(childNode.id);\n            }\n          });\n          if (newKeys.length !== expandedKeys.length) {\n            setExpandedKeys(newKeys);\n          }\n        }\n        break;\n    }\n  };\n\n  return (\n    <li\n      role=\"treeitem\"\n      aria-expanded={isExpanded ? 'true' : 'false'}\n      aria-selected={isSelected}\n      tabIndex={isFocused ? 0 : -1}\n      onKeyDown={createEventHandler(onKeyDown)}\n      onFocus={e => {\n        e.stopPropagation();\n        setFocusedNode(node.id);\n      }}\n      onBlur={e => {\n        e.stopPropagation();\n        // only clear focus state when focus moves outside the tree\n        if (!e.currentTarget.contains(e.relatedTarget)) {\n          setFocusedNode(undefined);\n        }\n      }}\n      className={clsx(\n        'outline-none',\n        // focus direct .tree-label child when this element has :focus-visible\n        '[&>.tree-label]:focus-visible:ring [&>.tree-label]:focus-visible:ring-2 [&>.tree-label]:focus-visible:ring-inset',\n        className,\n      )}\n    >\n      <TreeLabel\n        ref={labelRef}\n        className={labelClassName}\n        node={node}\n        level={level}\n        label={label}\n        icon={icon}\n        {...domProps}\n      />\n      <AnimatePresence initial={false}>\n        {isExpanded ? (\n          <m.ul\n            key={`${node.id}-group`}\n            role=\"group\"\n            initial=\"closed\"\n            animate=\"open\"\n            exit=\"closed\"\n            variants={{\n              open: {opacity: 1, height: 'auto'},\n              closed: {opacity: 0, height: 0, overflow: 'hidden'},\n            }}\n          >\n            {renderTree({\n              nodes: node.children,\n              parentNode: node,\n              itemRenderer,\n              level,\n            })}\n          </m.ul>\n        ) : null}\n      </AnimatePresence>\n    </li>\n  );\n}\n","import React, {Key, useState} from 'react';\nimport {useControlledState} from '@react-stately/utils';\nimport {FocusScope} from '@react-aria/focus';\nimport {TreeContext, TreeContextValue} from './tree-context';\nimport {TreeItemRenderer} from './tree-item';\nimport {renderTree} from './render-tree';\n\nexport interface TreeNode {\n  id: number | string;\n  children: TreeNode[];\n}\n\ninterface TreeProps<T extends TreeNode> {\n  children: TreeItemRenderer<T>;\n  nodes: T[];\n  selectedKeys?: Key[];\n  expandedKeys?: Key[];\n  defaultExpandedKeys?: Key[];\n  onExpandedKeysChange?: (value: Key[]) => void;\n  defaultSelectedKeys?: Key[];\n  onSelectedKeysChange?: (value: Key[]) => void;\n}\nexport function Tree<T extends TreeNode>({\n  children,\n  nodes,\n  ...props\n}: TreeProps<T>) {\n  const [expandedKeys, setExpandedKeys] = useControlledState(\n    props.expandedKeys,\n    props.defaultSelectedKeys,\n    props.onExpandedKeysChange\n  );\n  const [selectedKeys, setSelectedKeys] = useControlledState(\n    props.selectedKeys,\n    props.defaultSelectedKeys,\n    props.onSelectedKeysChange\n  );\n  const [focusedNode, setFocusedNode] = useState<Key | undefined>();\n\n  const value: TreeContextValue = {\n    expandedKeys,\n    setExpandedKeys,\n    selectedKeys,\n    setSelectedKeys,\n    focusedNode,\n    setFocusedNode,\n  };\n\n  return (\n    <TreeContext.Provider value={value}>\n      <FocusScope>\n        <TreeRoot nodes={nodes} itemRenderer={children} />\n      </FocusScope>\n    </TreeContext.Provider>\n  );\n}\n\ninterface TreeRootProps<T extends TreeNode> {\n  nodes: TreeNode[];\n  itemRenderer: TreeItemRenderer<T>;\n}\nfunction TreeRoot<T extends TreeNode>(props: TreeRootProps<T>) {\n  return (\n    <ul className=\"overflow-hidden text-sm\" role=\"tree\">\n      {renderTree(props)}\n    </ul>\n  );\n}\n","import React, {useMemo, useRef} from 'react';\nimport {arrayToTree} from 'performant-array-to-tree';\nimport {useFolders} from '../../files/queries/use-folders';\nimport {DriveFolder} from '../../files/drive-entry';\nimport {driveState, useDriveStore} from '../../drive-store';\nimport {FolderIcon} from '@common/icons/material/Folder';\nimport {getPathForFolder, RootFolderPage} from '../../drive-page/drive-page';\nimport {mergeProps} from '@react-aria/utils';\nimport {\n  ConnectedDraggable,\n  useDraggable,\n} from '@common/ui/interactions/dnd/use-draggable';\nimport {useSidebarTreeDropTarget} from './use-sidebar-tree-drop-target';\nimport {makeFolderTreeDragId} from './folder-tree-drag-id';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport clsx from 'clsx';\nimport {BackupIcon} from '@common/icons/material/Backup';\nimport {TreeItem, TreeItemProps} from '@common/ui/tree/tree-item';\nimport {Tree} from '@common/ui/tree/tree';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\n\ninterface TreeFolder extends DriveFolder {\n  children: TreeFolder[];\n}\n\nexport function FolderTree() {\n  const navigate = useNavigate();\n  const {data} = useFolders();\n  const expandedKeys = useDriveStore(s => s.sidebarExpandedKeys);\n\n  const activePage = useDriveStore(s => s.activePage);\n  let selectedKeys: number[] = [];\n  if (activePage?.isFolderPage) {\n    selectedKeys = activePage.folder ? [activePage.folder.id] : [];\n  }\n\n  const tree = useMemo(() => {\n    const folders = arrayToTree(data?.folders || [], {\n      parentId: 'parent_id',\n      dataField: null,\n    }) as TreeFolder[];\n    const rootFolder = {\n      ...RootFolderPage.folder,\n      children: folders,\n    };\n    return [rootFolder];\n  }, [data?.folders]);\n\n  return (\n    <Tree\n      nodes={tree}\n      expandedKeys={expandedKeys}\n      onExpandedKeysChange={keys => {\n        driveState().setSidebarExpandedKeys(keys);\n      }}\n      selectedKeys={selectedKeys}\n      onSelectedKeysChange={([id]) => {\n        const entryHash = findHash(id as number, tree);\n        if (entryHash) {\n          navigate(getPathForFolder(entryHash));\n        } else {\n          navigate(RootFolderPage.path);\n        }\n      }}\n    >\n      {() => <FolderTreeItem />}\n    </Tree>\n  );\n}\n\n// props will be passed by tree via cloneElement\nfunction FolderTreeItem(props: Partial<TreeItemProps<TreeFolder>>) {\n  const {node} = props as Required<TreeItemProps<TreeFolder>>;\n  const labelRef = useRef<HTMLDivElement>(null);\n  const isRootFolder = node.id === 0;\n  const isDragging = useDriveStore(s =>\n    s.entriesBeingDragged.includes(node.id)\n  );\n\n  const {draggableProps} = useDraggable({\n    type: 'fileEntry',\n    id: makeFolderTreeDragId(node),\n    ref: labelRef,\n    disabled: isRootFolder,\n    hidePreview: true,\n    onDragStart: (e, draggable) => {\n      const d = draggable as ConnectedDraggable<FileEntry[]>;\n      driveState().setEntriesBeingDragged(d.getData().map(e => e.id));\n      driveState().selectEntries([]);\n    },\n    onDragEnd: () => {\n      driveState().setEntriesBeingDragged([]);\n    },\n    getData: () => [node],\n  });\n\n  const {droppableProps, isDragOver} = useSidebarTreeDropTarget({\n    folder: node,\n    ref: labelRef,\n  });\n\n  return (\n    <TreeItem\n      {...mergeProps(draggableProps, droppableProps, props)}\n      onContextMenu={e => {\n        e.preventDefault();\n        e.stopPropagation();\n        driveState().deselectEntries('all');\n        driveState().setContextMenuData({\n          x: e.clientX,\n          y: e.clientY,\n          entry: node,\n        });\n      }}\n      labelRef={labelRef}\n      className={isRootFolder ? 'focus-visible:ring-2' : undefined}\n      labelClassName={clsx(\n        isDragOver && 'bg-primary/selected ring ring-2 ring-inset ring-primary',\n        isDragging && 'opacity-30',\n        isRootFolder && 'h-40'\n      )}\n      icon={\n        isRootFolder ? (\n          <BackupIcon size=\"md\" className=\"mr-6\" />\n        ) : (\n          <FolderIcon size=\"sm\" className=\"mr-4\" />\n        )\n      }\n      label={node.name}\n    />\n  );\n}\n\nconst findHash = (id: number, nodes: FileEntry[]): string | undefined => {\n  for (const item of nodes) {\n    if (item.id === id) {\n      return item.hash;\n    } else if (item.children) {\n      const hash = findHash(id, item.children);\n      if (hash) {\n        return hash;\n      }\n    }\n  }\n};\n","import {CustomMenu, CustomMenuItem} from '@common/menus/custom-menu';\nimport {MenuPositions} from '../../menu-positions';\nimport React, {\n  ComponentPropsWithoutRef,\n  forwardRef,\n  useRef,\n  useState,\n} from 'react';\nimport {MenuItemConfig} from '@common/core/settings/settings';\nimport clsx from 'clsx';\nimport {useDroppable} from '@common/ui/interactions/dnd/use-droppable';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {FolderTree} from './folder-tree';\nimport {useDeleteEntries} from '../../files/queries/use-delete-entries';\nimport {useActiveWorkspaceId} from '@common/workspace/active-workspace-id-context';\n\nexport function SidebarMenu() {\n  const {workspaceId} = useActiveWorkspaceId();\n  return (\n    <div className=\"text-muted mt-26 px-12\">\n      <FolderTree />\n      <CustomMenu\n        menu={MenuPositions.DriveSidebar}\n        orientation=\"vertical\"\n        gap=\"gap-0\"\n      >\n        {item => {\n          if (item.action === '/drive/trash') {\n            return <TrashMenuItem key={item.id} item={item} />;\n          }\n          return <MenuItem key={item.id} item={item} />;\n        }}\n      </CustomMenu>\n    </div>\n  );\n}\n\ninterface MenuItemProps extends ComponentPropsWithoutRef<'a'> {\n  item: MenuItemConfig;\n  className?: string;\n}\nexport const MenuItem = forwardRef<HTMLAnchorElement, MenuItemProps>(\n  ({item, className, ...domProps}, ref) => {\n    return (\n      <CustomMenuItem\n        className={({isActive}) =>\n          clsx(\n            className,\n            'h-40 w-full my-4 px-24 rounded',\n            isActive\n              ? 'text-primary font-bold bg-primary/selected cursor-default'\n              : 'hover:bg-hover'\n          )\n        }\n        item={item}\n        ref={ref}\n        {...domProps}\n      />\n    );\n  }\n);\n\ninterface TrashMenuItemProps {\n  item: MenuItemConfig;\n}\nfunction TrashMenuItem({item}: TrashMenuItemProps) {\n  const deleteEntries = useDeleteEntries();\n  const [isDragOver, setIsDragOver] = useState(false);\n  const ref = useRef<HTMLAnchorElement>(null);\n\n  const {droppableProps} = useDroppable({\n    id: 'trash',\n    types: ['fileEntry'],\n    ref,\n    onDragEnter: () => {\n      setIsDragOver(true);\n    },\n    onDragLeave: () => {\n      setIsDragOver(false);\n    },\n    onDrop: draggable => {\n      const entryIds = (draggable.getData() as FileEntry[]).map(e => e.id);\n      deleteEntries.mutate({entryIds, deleteForever: false});\n    },\n  });\n  return (\n    <MenuItem\n      className={clsx(isDragOver && 'bg-primary/selected')}\n      ref={ref}\n      {...droppableProps}\n      item={item}\n    />\n  );\n}\n","import {driveState, useDriveStore} from '../drive-store';\nimport {useDriveUploadQueue} from '../uploading/use-drive-upload-queue';\nimport {\n  Menu,\n  MenuItem,\n  MenuTrigger,\n} from '@common/ui/navigation/menu/menu-trigger';\nimport {openUploadWindow} from '@common/uploads/utils/open-upload-window';\nimport {Button} from '@common/ui/buttons/button';\nimport {FileUploadIcon} from '@common/icons/material/FileUpload';\nimport {Trans} from '@common/i18n/trans';\nimport {CreateNewFolderIcon} from '@common/icons/material/CreateNewFolder';\nimport {UploadFileIcon} from '@common/icons/material/UploadFile';\nimport {DriveFolderUploadIcon} from '@common/icons/material/DriveFolderUpload';\nimport React from 'react';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {AddIcon} from '@common/icons/material/Add';\n\ninterface CreateNewButtonProps {\n  isCompact?: boolean;\n  className?: string;\n}\nexport function CreateNewButton({isCompact, className}: CreateNewButtonProps) {\n  const activePage = useDriveStore(s => s.activePage);\n  const {uploadFiles} = useDriveUploadQueue();\n\n  const button = isCompact ? (\n    <IconButton size=\"md\">\n      <AddIcon />\n    </IconButton>\n  ) : (\n    <Button\n      className=\"min-w-160\"\n      color=\"primary\"\n      variant=\"flat\"\n      size=\"sm\"\n      startIcon={<FileUploadIcon />}\n      disabled={!activePage?.canUpload}\n    >\n      <Trans message=\"Upload\" />\n    </Button>\n  );\n\n  return (\n    <div className={className}>\n      <MenuTrigger\n        onItemSelected={async value => {\n          if (value === 'uploadFiles') {\n            uploadFiles(await openUploadWindow({multiple: true}));\n          } else if (value === 'uploadFolder') {\n            uploadFiles(await openUploadWindow({directory: true}));\n          } else if (value === 'newFolder') {\n            const activeFolder = driveState().activePage?.folder;\n            driveState().setActiveActionDialog(\n              'newFolder',\n              activeFolder ? [activeFolder] : []\n            );\n          }\n        }}\n      >\n        {button}\n        <Menu>\n          <MenuItem value=\"uploadFiles\" startIcon={<UploadFileIcon />}>\n            <Trans message=\"Upload files\" />\n          </MenuItem>\n          <MenuItem value=\"uploadFolder\" startIcon={<DriveFolderUploadIcon />}>\n            <Trans message=\"Upload folder\" />\n          </MenuItem>\n          <MenuItem value=\"newFolder\" startIcon={<CreateNewFolderIcon />}>\n            <Trans message=\"Create folder\" />\n          </MenuItem>\n        </Menu>\n      </MenuTrigger>\n    </div>\n  );\n}\n","import React from 'react';\nimport {StorageMeter} from './storage-summary/storage-meter';\nimport {WorkspaceSelector} from '@common/workspace/workspace-selector';\nimport {RootFolderPage} from '../../drive-page/drive-page';\nimport {SidebarMenu} from './sidebar-menu';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {CreateNewButton} from '../create-new-button';\nimport {Button} from '@common/ui/buttons/button';\nimport {Link} from 'react-router-dom';\nimport {Trans} from '@common/i18n/trans';\nimport {useAuth} from '@common/auth/use-auth';\nimport clsx from 'clsx';\nimport {useSettings} from '@common/core/settings/use-settings';\n\ninterface SidebarProps {\n  className?: string;\n}\nexport function Sidebar({className}: SidebarProps) {\n  const {isSubscribed} = useAuth();\n  const {billing} = useSettings();\n  return (\n    <div\n      className={clsx(\n        className,\n        'flex flex-col gap-20 border-r bg-alt text-sm font-medium text-muted',\n      )}\n    >\n      <div className=\"compact-scrollbar flex-auto overflow-y-auto\">\n        <CreateNewButton className=\"px-12 pt-28 text-center\" />\n        <SidebarMenu />\n        <StorageMeter />\n        {billing.enable ? (\n          <div className=\"mt-14 pl-60\">\n            <Button\n              elementType={Link}\n              to={isSubscribed ? '/billing/change-plan' : '/pricing'}\n              variant=\"outline\"\n              color=\"primary\"\n              size=\"xs\"\n            >\n              <Trans message=\"Upgrade\" />\n            </Button>\n          </div>\n        ) : null}\n      </div>\n      <WorkspaceSwitcher />\n    </div>\n  );\n}\n\nfunction WorkspaceSwitcher() {\n  const navigate = useNavigate();\n  return (\n    <WorkspaceSelector\n      onChange={() => {\n        navigate(RootFolderPage.path);\n      }}\n      className=\"mt-auto w-full flex-shrink-0 border-t px-24 py-18\"\n    />\n  );\n}\n","import {InfiniteData, useInfiniteQuery} from '@tanstack/react-query';\nimport {useSearchParams} from 'react-router-dom';\nimport {LengthAwarePaginationResponse} from '@common/http/backend-response/pagination-response';\nimport {DriveEntry, DriveFolder} from '../drive-entry';\nimport {driveState, useDriveStore} from '../../drive-store';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {DriveQueryKeys} from '../../drive-query-keys';\nimport {SortColumn, SortDirection} from '../../layout/sorting/available-sorts';\nimport {useActiveWorkspaceId} from '@common/workspace/active-workspace-id-context';\nimport {makeFolderPage, SearchPage} from '../../drive-page/drive-page';\nimport {useEffect} from 'react';\nimport {shallowEqual} from '@common/utils/shallow-equal';\n\nexport interface DriveApiIndexParams {\n  orderBy?: SortColumn;\n  orderDir?: SortDirection;\n  folderId?: string | number | null;\n  query?: string;\n  filters?: string;\n  deletedOnly?: boolean;\n  starredOnly?: boolean;\n  sharedOnly?: boolean;\n  perPage?: number;\n  page?: number;\n  recentOnly?: boolean;\n  workspaceId?: number | null;\n  pageId?: number | string;\n}\n\ninterface EntriesPaginationResponse\n  extends LengthAwarePaginationResponse<DriveEntry> {\n  folder?: DriveFolder;\n}\n\nfunction fetchEntries(\n  params: DriveApiIndexParams,\n): Promise<EntriesPaginationResponse> {\n  return apiClient\n    .get('drive/file-entries', {\n      params,\n    })\n    .then(response => response.data);\n}\n\nconst setActiveFolder = (response: InfiniteData<EntriesPaginationResponse>) => {\n  const firstPage = response.pages[0];\n  const newFolder = firstPage.folder;\n  const currentPage = driveState().activePage;\n\n  if (\n    newFolder &&\n    currentPage &&\n    currentPage.id === newFolder.hash &&\n    // only update page if once to set the folder or if permissions change, to keep page reference as stable as possible\n    (!currentPage.folder ||\n      !shallowEqual(newFolder.permissions, currentPage.folder?.permissions))\n  ) {\n    driveState().setActivePage(makeFolderPage(newFolder));\n  }\n  return response;\n};\n\nexport function usePaginatedEntries() {\n  const page = useDriveStore(s => s.activePage);\n  const sortDescriptor = useDriveStore(s => s.sortDescriptor);\n  const [searchParams] = useSearchParams();\n  const {workspaceId} = useActiveWorkspaceId();\n  const params: DriveApiIndexParams = {\n    pageId: page?.id,\n    ...page?.queryParams,\n    ...Object.fromEntries(searchParams),\n    folderId: page?.isFolderPage ? page.id : null,\n    workspaceId,\n    ...sortDescriptor,\n  };\n\n  // if we have no search query, there's no need to call the API, show no results message instead\n  const isDisabledInSearch =\n    page === SearchPage && !params.query && !params.filters;\n\n  const query = useInfiniteQuery({\n    queryKey: DriveQueryKeys.fetchEntries(params),\n    queryFn: ({pageParam = 1}) => {\n      return fetchEntries({...params, page: pageParam});\n    },\n    initialPageParam: 1,\n    getNextPageParam: lastResponse => {\n      const currentPage = lastResponse.current_page;\n      const lastPage = lastResponse.last_page;\n      if (currentPage >= lastPage) {\n        return undefined;\n      }\n      return currentPage + 1;\n    },\n    enabled: page != null && !isDisabledInSearch,\n  });\n\n  // need to do this in effect, to avoid react errors about\n  // multiple components re-rendering at the same time\n  useEffect(() => {\n    if (query.data?.pages[0].folder) {\n      setActiveFolder(query.data);\n    }\n  }, [query.data]);\n\n  return query;\n}\n\nexport function getAllEntries() {\n  const caches = queryClient.getQueriesData<\n    InfiniteData<EntriesPaginationResponse>\n  >({queryKey: DriveQueryKeys.fetchEntries()});\n  return caches.reduce<DriveEntry[]>((all, cache) => {\n    const current = cache[1] ? cache[1].pages.flatMap(p => p.data) : [];\n    return [...all, ...current];\n  }, []);\n}\n","import {\n  BackendFilter,\n  FilterControlType,\n  FilterOperator,\n} from '@common/datatable/filters/backend-filter';\nimport {FILE_ENTRY_TYPE_FILTER} from '@common/admin/file-entry/file-entry-index-filters';\nimport {message} from '@common/i18n/message';\nimport {\n  createdAtFilter,\n  updatedAtFilter,\n} from '@common/datatable/filters/timestamp-filters';\n\nexport const driveSearchFilters: BackendFilter[] = [\n  FILE_ENTRY_TYPE_FILTER,\n  {\n    key: 'owner_id',\n    label: message('Owner'),\n    description: message('User file was uploaded by'),\n    defaultOperator: FilterOperator.eq,\n    control: {\n      type: FilterControlType.Select,\n      defaultValue: '02',\n      options: [\n        {\n          key: '01',\n          label: message('anyone'),\n          value: {value: null, operator: '!='},\n        },\n        {\n          key: '02',\n          label: message('me'),\n          value: '{authId}',\n        },\n        {\n          key: '03',\n          label: message('not me'),\n          value: {value: '{authId}', operator: '!='},\n        },\n      ],\n    },\n  },\n  createdAtFilter({\n    description: message('Date file was uploaded'),\n  }),\n  updatedAtFilter({\n    description: message('Date file was last changed'),\n  }),\n  {\n    key: 'deleted_at',\n    label: message('In trash'),\n    description: message('Only show files that are in the trash'),\n    defaultOperator: FilterOperator.ne,\n    control: {\n      type: FilterControlType.BooleanToggle,\n      defaultValue: null,\n    },\n  },\n  {\n    key: 'shareableLink',\n    label: message('Has shareable link'),\n    description: message('Only show files that have a shareable link'),\n    defaultOperator: FilterOperator.has,\n    control: {\n      type: FilterControlType.BooleanToggle,\n      defaultValue: '*',\n    },\n  },\n  {\n    control: {\n      type: FilterControlType.BooleanToggle,\n      defaultValue: true,\n    },\n    key: 'sharedByMe',\n    label: message('Shared by me'),\n    description: message('Only show files that are shared with someone'),\n    defaultOperator: FilterOperator.eq,\n  },\n];\n","import React, {useContext, useState} from 'react';\nimport {driveSearchFilters} from './drive-search-filters';\nimport {useDriveStore} from '../drive-store';\nimport {SearchPage} from '../drive-page/drive-page';\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {SearchIcon} from '@common/icons/material/Search';\nimport {DashboardLayoutContext} from '@common/ui/layout/dashboard-layout-context';\nimport {FilterList} from '@common/datatable/filters/filter-list/filter-list';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {useSearchParams} from 'react-router-dom';\nimport {message} from '@common/i18n/message';\nimport {IconButton} from '@common/ui/buttons/icon-button';\n\nconst alwaysShownFilters = driveSearchFilters.map(f => f.key);\n\nexport function SearchFilterList() {\n  const activePage = useDriveStore(s => s.activePage);\n  const {isMobileMode} = useContext(DashboardLayoutContext);\n  const {trans} = useTrans();\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const [inputValue, setInputValue] = useState(searchParams.get('query') || '');\n\n  if (activePage !== SearchPage) {\n    return null;\n  }\n\n  return (\n    <div className=\"mb-30 mt-10 px-10 md:px-26\">\n      {isMobileMode && (\n        <form\n          className=\"contents\"\n          onSubmit={e => {\n            e.preventDefault();\n            // blur input so mobile keyboard is hidden\n            if (document.activeElement?.tagName === 'INPUT') {\n              (document.activeElement as HTMLInputElement).blur();\n            }\n            navigate(\n              {\n                pathname: SearchPage.path,\n                search: `?query=${inputValue}`,\n              },\n              {replace: true},\n            );\n          }}\n        >\n          <TextField\n            autoFocus\n            className=\"mb-20\"\n            startAdornment={\n              <IconButton type=\"submit\">\n                <SearchIcon />\n              </IconButton>\n            }\n            placeholder={trans(message('Type to search'))}\n            value={inputValue}\n            onChange={e => setInputValue(e.target.value)}\n          />\n        </form>\n      )}\n      <FilterList\n        filters={driveSearchFilters}\n        pinnedFilters={alwaysShownFilters}\n      />\n    </div>\n  );\n}\n","import {InteractableRect} from '../interactable-event';\n\nexport function restrictResizableWithinBoundary(\n  rect: InteractableRect,\n  boundaryRect: InteractableRect\n) {\n  const boundedRect = {...rect};\n\n  // restrict to left edge of boundary\n  boundedRect.left = Math.max(0, boundedRect.left);\n  // compensate width when left is bounded\n  const leftRestriction = boundedRect.left - rect.left;\n  if (leftRestriction > 0) {\n    boundedRect.width -= leftRestriction;\n  }\n\n  // restrict to top edge of boundary\n  boundedRect.top = Math.max(0, boundedRect.top);\n  // compensate height when top is bounded\n  const topRestriction = boundedRect.top - rect.top;\n  if (topRestriction > 0) {\n    boundedRect.height -= topRestriction;\n  }\n\n  // restrict to right edge of boundary\n  boundedRect.width = Math.min(\n    boundedRect.width,\n    boundaryRect.width - boundedRect.left\n  );\n\n  // restrict to bottom edge of boundary\n  boundedRect.height = Math.min(\n    boundedRect.height,\n    boundaryRect.height - boundedRect.top\n  );\n\n  return boundedRect;\n}\n","import {RefObject, useLayoutEffect, useRef} from 'react';\nimport {droppables} from '../drag-state';\nimport {InteractableRect} from '../../interactable-event';\nimport {DraggableId} from '../use-draggable';\n\nexport interface ConnectedMouseSelectable {\n  id: DraggableId;\n  onSelected?: () => void;\n  onDeselected?: () => void;\n  ref: RefObject<HTMLElement>;\n  rect?: InteractableRect;\n}\n\nexport const mouseSelectables = new Map<\n  DraggableId,\n  ConnectedMouseSelectable\n>();\n\nexport function useMouseSelectable(options: ConnectedMouseSelectable) {\n  const {id, ref} = options;\n  const optionsRef = useRef(options);\n  optionsRef.current = options;\n\n  useLayoutEffect(() => {\n    if (!ref.current) return;\n    // register droppable regardless if it's enabled or not, it might be used by mouse selection box\n    mouseSelectables.set(id, {\n      ...mouseSelectables.get(id),\n      id,\n      ref,\n      // avoid stale closures\n      onSelected: () => {\n        optionsRef.current.onSelected?.();\n      },\n      onDeselected: () => optionsRef.current.onDeselected?.(),\n    });\n    return () => {\n      droppables.delete(id);\n    };\n  }, [id, optionsRef, ref]);\n}\n","import {InteractableRect} from '../interactable-event';\n\nexport function rectsIntersect(\n  rectA?: InteractableRect,\n  rectB?: InteractableRect\n) {\n  if (!rectA || !rectB) return false;\n  return (\n    rectA.left <= rectB.left + rectB.width &&\n    rectA.left + rectA.width >= rectB.left &&\n    rectA.top <= rectB.top + rectB.height &&\n    rectA.top + rectA.height >= rectB.top\n  );\n}\n","import React, {RefObject, useRef} from 'react';\nimport {usePointerEvents} from '../../use-pointer-events';\nimport {InteractableRect} from '../../interactable-event';\nimport {restrictResizableWithinBoundary} from '../../utils/restrict-resizable-within-boundary';\nimport {activeInteraction} from '../../active-interaction';\nimport {updateRects} from '../update-rects';\nimport {mouseSelectables} from './use-mouse-selectable';\nimport {rectsIntersect} from '../../utils/rects-intersect';\nimport {DraggableId} from '../use-draggable';\n\ninterface SelectionState {\n  startPoint?: {x: number; y: number; scrollTop: number};\n  endPoint?: {x: number; y: number};\n  boundaryRect?: InteractableRect & {heightWithoutScroll: number};\n  scrollListener?: EventListener;\n  rafId?: number;\n  selectedIds?: Set<DraggableId>;\n}\n\ninterface Props {\n  onPointerDown?: (e: React.PointerEvent) => void;\n  containerRef?: RefObject<HTMLDivElement>;\n}\nexport function useMouseSelectionBox({onPointerDown, ...props}: Props = {}) {\n  const defaultRef = useRef<HTMLDivElement>(null);\n  const containerRef = props.containerRef || defaultRef;\n  const boxRef = useRef<HTMLDivElement>(null);\n\n  let state = useRef<SelectionState>({}).current;\n\n  const drawSelectionBox = () => {\n    if (state.rafId) {\n      cancelAnimationFrame(state.rafId);\n    }\n\n    if (!state.startPoint || !state.endPoint || !state.boundaryRect) return;\n\n    const startPoint = state.startPoint;\n    const endPoint = state.endPoint;\n    const initialScrollTop = startPoint.scrollTop || 0;\n    const currentScrollTop = containerRef.current?.scrollTop || 0;\n\n    const newRect = {\n      left: Math.min(startPoint.x, endPoint.x),\n      top: Math.min(startPoint.y, endPoint.y),\n      width: Math.abs(startPoint.x - endPoint.x),\n      height: Math.abs(startPoint.y - endPoint.y),\n    };\n\n    // convert box coords to be relative to container and not viewport\n    newRect.left -= state.boundaryRect.left;\n    newRect.top -= state.boundaryRect.top;\n\n    // take initial scroll of container into account\n    newRect.top += initialScrollTop;\n\n    // scroll diff between drag start and now (auto scroll or mouse wheel)\n    const scrollDiff = currentScrollTop - initialScrollTop;\n    const scrollValue = Math.abs(scrollDiff);\n\n    // top needs to be changed only if scroll direction is top\n    if (scrollDiff < 0) {\n      newRect.top -= scrollValue;\n    }\n\n    // height needs to be changed regardless of direction and method\n    newRect.height += scrollValue;\n\n    const boundedRect = state.boundaryRect\n      ? restrictResizableWithinBoundary(newRect, state.boundaryRect)\n      : {...newRect};\n\n    if (boxRef.current) {\n      state.rafId = requestAnimationFrame(() => {\n        if (boxRef.current) {\n          boxRef.current.style.display = `block`;\n          boxRef.current.style.transform = `translate(${boundedRect.left}px, ${boundedRect.top}px)`;\n          boxRef.current.style.width = `${boundedRect.width}px`;\n          boxRef.current.style.height = `${boundedRect.height}px`;\n        }\n        state.rafId = undefined;\n      });\n    }\n\n    // convert rect back to absolute for intersection testing\n    const absoluteRect = {\n      ...boundedRect,\n      left: boundedRect.left + state.boundaryRect.left,\n      top: boundedRect.top + state.boundaryRect.top - currentScrollTop,\n    };\n\n    for (const [, selectable] of mouseSelectables) {\n      const intersect = rectsIntersect(selectable.rect, absoluteRect);\n      if (intersect && !state.selectedIds?.has(selectable.id)) {\n        state.selectedIds?.add(selectable.id);\n        selectable.onSelected?.();\n      } else if (!intersect && state.selectedIds?.has(selectable.id)) {\n        state.selectedIds?.delete(selectable.id);\n        selectable.onDeselected?.();\n      }\n    }\n  };\n\n  const pointerEvents = usePointerEvents({\n    minimumMovement: 4,\n    onPointerDown,\n    onMoveStart: e => {\n      if (activeInteraction) {\n        return false;\n      }\n      updateRects(mouseSelectables);\n      state = {\n        selectedIds: new Set(),\n      };\n      const el = containerRef.current;\n      state.startPoint = {\n        x: e.clientX,\n        y: e.clientY,\n        scrollTop: el?.scrollTop || 0,\n      };\n\n      state.scrollListener = e => {\n        if (!state.startPoint) return;\n        // update rects on scroll, because we are using relative position\n        updateRects(mouseSelectables);\n        if (state.boundaryRect?.height) {\n          state.boundaryRect.height = (e.target as HTMLElement).scrollHeight;\n        }\n        // draw selection box (for autoscroll and mousewheel)\n        drawSelectionBox();\n      };\n\n      if (el) {\n        const rect = el.getBoundingClientRect();\n        el.addEventListener('scroll', state.scrollListener);\n        state.boundaryRect = {\n          top: rect.top,\n          left: rect.left,\n          height: el.scrollHeight,\n          heightWithoutScroll: rect.height,\n          width: el.scrollWidth,\n        };\n      }\n    },\n    onMove: e => {\n      state.endPoint = {x: e.clientX, y: e.clientY};\n\n      if (state.boundaryRect && containerRef.current) {\n        const reachedBottomEdge =\n          e.clientY + 20 >\n          state.boundaryRect.heightWithoutScroll + state.boundaryRect.top;\n        const reachedTopEdge = e.clientY - 20 < state.boundaryRect.top;\n\n        if (reachedBottomEdge) {\n          containerRef.current.scrollBy({top: 10});\n        } else if (reachedTopEdge) {\n          containerRef.current.scrollBy({top: -10});\n        }\n      }\n\n      drawSelectionBox();\n    },\n    onMoveEnd: () => {\n      if (state.rafId) {\n        cancelAnimationFrame(state.rafId);\n      }\n      if (containerRef.current && state.scrollListener) {\n        containerRef.current.removeEventListener(\n          'scroll',\n          state.scrollListener\n        );\n      }\n      if (boxRef.current) {\n        boxRef.current.style.display = `none`;\n        boxRef.current.style.transform = '';\n        boxRef.current.style.width = '';\n        boxRef.current.style.height = '';\n      }\n      state = {};\n    },\n  });\n\n  return {\n    containerProps: {\n      ...pointerEvents.domProps,\n      ref: containerRef,\n    },\n    boxProps: {ref: boxRef},\n  };\n}\n","import {DriveEntry} from '../drive-entry';\nimport {usePaginatedEntries} from './use-paginated-entries';\n\nexport function useEntries(): DriveEntry[] {\n  const query = usePaginatedEntries();\n  if (!query.data) return [];\n  return query.data.pages.flatMap(p => p.data);\n}\n","import {driveState, useDriveStore} from '../drive-store';\nimport {getAllEntries} from './queries/use-paginated-entries';\nimport {DriveEntry, DriveFolder} from './drive-entry';\nimport {useEntries} from './queries/use-entries';\nimport {useFolders} from './queries/use-folders';\n\nexport function useSelectedEntries(): DriveEntry[] {\n  const ids = useDriveStore(s => s.selectedEntries);\n  const entries = useEntries();\n  return Array.from(ids)\n    .map(id => entries.find(entry => entry.id === id))\n    .filter(e => !!e) as DriveEntry[];\n}\n\nexport function useSelectedEntry(): DriveEntry | null {\n  const entries = useSelectedEntries();\n  return entries[0];\n}\n\nexport function useSelectedEntryParent(): DriveFolder | null | undefined {\n  const entry = useSelectedEntry();\n  const {data} = useFolders();\n  if (!entry || !data?.folders) return;\n  return data.folders.find(e => e.id === entry.parent_id) as DriveFolder;\n}\n\nexport function getSelectedEntries(): DriveEntry[] {\n  const ids = Array.from(driveState().selectedEntries);\n  const allEntries = getAllEntries();\n  return ids\n    .map(id => allEntries.find(entry => entry.id === id))\n    .filter(e => !!e) as DriveEntry[];\n}\n","import React, {createElement} from 'react';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {EntryActionMenuTrigger} from './entry-action-menu-trigger';\nimport {MoreVertIcon} from '@common/icons/material/MoreVert';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\nimport {Trans} from '@common/i18n/trans';\nimport {useSelectedEntries} from '../files/use-selected-entries';\nimport {\n  useDeleteEntriesAction,\n  usePreviewAction,\n  useRemoveSharedEntriesAction,\n  useShareAction,\n} from './use-entry-actions';\nimport {DriveEntry} from '../files/drive-entry';\nimport {EntryAction} from './entry-action';\n\ninterface EntryActionListProps {\n  className?: string;\n}\nexport function EntryActionList({className}: EntryActionListProps) {\n  const selectedEntries = useSelectedEntries();\n\n  if (!selectedEntries.length) {\n    return null;\n  }\n\n  return (\n    <div className={className}>\n      <ActionList entries={selectedEntries} />\n    </div>\n  );\n}\n\ninterface ActionListProps {\n  entries: DriveEntry[];\n}\nfunction ActionList({entries}: ActionListProps) {\n  const preview = usePreviewAction(entries);\n  const share = useShareAction(entries);\n  const deleteAction = useDeleteEntriesAction(entries);\n  const removeShared = useRemoveSharedEntriesAction(entries);\n\n  const actions = [preview, share, deleteAction, removeShared].filter(\n    action => !!action\n  ) as EntryAction[];\n\n  return (\n    <div className=\"entry-action-list\">\n      {actions.map(action => (\n        <Tooltip key={action.key} label={<Trans {...action.label} />}>\n          <IconButton\n            size=\"sm\"\n            onClick={() => {\n              action.execute();\n            }}\n          >\n            {createElement(action.icon)}\n          </IconButton>\n        </Tooltip>\n      ))}\n      <EntryActionMenuTrigger entries={entries}>\n        <Tooltip label={<Trans message=\"More actions\" />}>\n          <IconButton>\n            <MoreVertIcon />\n          </IconButton>\n        </Tooltip>\n      </EntryActionMenuTrigger>\n    </div>\n  );\n}\n","import {useSelectedEntries} from './use-selected-entries';\nimport {DriveEntry} from './drive-entry';\nimport {useEntryActions} from '../entry-actions/use-entry-actions';\nimport {driveState, useDriveStore} from '../drive-store';\nimport {ContextMenu} from '@common/ui/navigation/menu/context-menu';\nimport {MenuItem} from '@common/ui/navigation/menu/menu-trigger';\nimport React, {createElement} from 'react';\nimport {Trans} from '@common/i18n/trans';\nimport {EntryAction} from '../entry-actions/entry-action';\nimport {DrivePage, RootFolderPage} from '../drive-page/drive-page';\nimport {useDrivePageActions} from '../entry-actions/use-drive-page-actions';\n\nexport function DriveContextMenu() {\n  const selectedEntries = useSelectedEntries();\n  const activePage = useDriveStore(s => s.activePage);\n  const data = useDriveStore(s => s.contextMenuData);\n  const entries = data?.entry ? [data.entry] : selectedEntries;\n\n  // right-clicked root folder\n  if (data?.entry?.id === 0) {\n    return <PageContextMenu position={data} page={RootFolderPage} />;\n  }\n\n  if (data && entries.length) {\n    return <EntriesContextMenu entries={entries} position={data} />;\n  }\n\n  if (data && activePage) {\n    return <PageContextMenu position={data} page={activePage} />;\n  }\n\n  return null;\n}\n\ninterface EntriesContextMenuProps {\n  position: {x: number; y: number};\n  entries: DriveEntry[];\n}\nfunction EntriesContextMenu({entries, position}: EntriesContextMenuProps) {\n  const actions = useEntryActions(entries);\n  return <BaseContextMenu position={position} actions={actions} />;\n}\n\ninterface PageContextMenuProps {\n  position: {x: number; y: number};\n  page: DrivePage;\n}\nfunction PageContextMenu({page, position}: PageContextMenuProps) {\n  const actions = useDrivePageActions(page);\n  return <BaseContextMenu position={position} actions={actions} />;\n}\n\ninterface BaseContextMenuProps {\n  position: {x: number; y: number};\n  actions: EntryAction[];\n}\nfunction BaseContextMenu({position, actions}: BaseContextMenuProps) {\n  return (\n    <ContextMenu\n      position={position}\n      onOpenChange={isOpen => {\n        if (!isOpen) {\n          driveState().setContextMenuData(null);\n        }\n      }}\n    >\n      {actions.map(action => (\n        <MenuItem\n          value={action.key}\n          key={action.key}\n          onSelected={action.execute}\n          startIcon={createElement(action.icon)}\n        >\n          <Trans {...action.label} />\n        </MenuItem>\n      ))}\n    </ContextMenu>\n  );\n}\n","import {useMediaQuery} from './use-media-query';\n\nexport function useIsTouchDevice() {\n  return useMediaQuery('((pointer: coarse))');\n}\n","import {\n  ConnectedDraggable,\n  useDraggable,\n} from '@common/ui/interactions/dnd/use-draggable';\nimport {driveState, useDriveStore} from '../drive-store';\nimport {getSelectedEntries} from '../files/use-selected-entries';\nimport {useDroppable} from '@common/ui/interactions/dnd/use-droppable';\nimport {\n  folderAcceptsDrop,\n  useFolderDropAction,\n} from '../files/use-folder-drop-action';\nimport {DriveEntry} from '../files/drive-entry';\nimport {useRef, useState} from 'react';\nimport clsx from 'clsx';\nimport {useIsTouchDevice} from '@common/utils/hooks/is-touch-device';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {useMouseSelectable} from '@common/ui/interactions/dnd/mouse-selection/use-mouse-selectable';\nimport {TrashPage} from '@app/drive/drive-page/drive-page';\n\nexport function useFileViewDnd<T extends HTMLElement = HTMLElement>(\n  entry: DriveEntry\n) {\n  const isTouchDevice = useIsTouchDevice();\n  const ref = useRef<T>(null);\n  const {onDrop} = useFolderDropAction(entry);\n  const [isDragOver, setIsDragOver] = useState(false);\n  const isDragging = useDriveStore(s =>\n    s.entriesBeingDragged.includes(entry.id)\n  );\n  const activePage = useDriveStore(s => s.activePage);\n\n  const {draggableProps} = useDraggable({\n    disabled: !!isTouchDevice || activePage === TrashPage,\n    id: entry.id,\n    type: 'fileEntry',\n    ref,\n    hidePreview: true,\n    onDragStart: (e, target: ConnectedDraggable<FileEntry[]>) => {\n      if (!driveState().selectedEntries.has(entry.id)) {\n        driveState().selectEntries([entry.id]);\n      }\n      driveState().setEntriesBeingDragged(target.getData().map(e => e.id));\n    },\n    onDragEnd: () => {\n      driveState().setEntriesBeingDragged([]);\n    },\n    getData: () => getSelectedEntries(),\n  });\n\n  const {droppableProps} = useDroppable<T>({\n    id: entry.id,\n    disabled: isTouchDevice || entry.type !== 'folder',\n    ref,\n    types: ['fileEntry', 'nativeFile'],\n    acceptsDrop: target => folderAcceptsDrop(target, entry),\n    onDragEnter: () => setIsDragOver(true),\n    onDragLeave: () => setIsDragOver(false),\n    onDrop,\n  });\n\n  useMouseSelectable({\n    id: entry.id,\n    ref,\n    onSelected: () => {\n      driveState().selectEntries([entry.id], true);\n    },\n    onDeselected: () => {\n      driveState().deselectEntries([entry.id]);\n    },\n  });\n\n  const itemClassName = clsx(\n    isDragging && 'opacity-20',\n    isDragOver && 'ring ring-offset-4 ring-primary bg-primary-light/10 rounded'\n  );\n\n  return {\n    draggableProps,\n    droppableProps,\n    isDragOver,\n    isDragging,\n    itemClassName,\n    ref,\n  };\n}\n","import {DriveEntry} from '../../files/drive-entry';\nimport {RowElementProps} from '@common/ui/tables/table-row';\nimport {mergeProps} from '@react-aria/utils';\nimport {useFileViewDnd} from '../use-file-view-dnd';\nimport clsx from 'clsx';\nimport React, {useContext} from 'react';\nimport {driveState} from '../../drive-store';\nimport {TableContext} from '@common/ui/tables/table-context';\n\nexport function FileTableRow({\n  item,\n  children,\n  className,\n  ...domProps\n}: RowElementProps<DriveEntry>) {\n  const {isCollapsedMode} = useContext(TableContext);\n  const {draggableProps, droppableProps, itemClassName, ref} =\n    useFileViewDnd<HTMLDivElement>(item);\n\n  return (\n    <div\n      className={clsx(className, itemClassName)}\n      ref={ref}\n      {...mergeProps(draggableProps, droppableProps, domProps, {\n        onContextMenu: (e: React.MouseEvent) => {\n          e.preventDefault();\n          e.stopPropagation();\n          if (!isCollapsedMode) {\n            if (!driveState().selectedEntries.has(item.id)) {\n              driveState().selectEntries([item.id]);\n            }\n            driveState().setContextMenuData({x: e.clientX, y: e.clientY});\n          }\n        },\n      })}\n    >\n      {children}\n    </div>\n  );\n}\n","import {useCallback} from 'react';\nimport {getPathForFolder, TrashPage} from '../drive-page/drive-page';\nimport {driveState} from '../drive-store';\nimport {DriveEntry} from '../files/drive-entry';\nimport {getSelectedEntries} from '../files/use-selected-entries';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\n\nexport function useViewItemActionHandler() {\n  const navigate = useNavigate();\n\n  const performViewItemAction = useCallback(\n    (entry: DriveEntry) => {\n      if (entry && entry.type === 'folder') {\n        if (driveState().activePage === TrashPage) {\n          driveState().setActiveActionDialog('trashFolderBlock', [entry]);\n        } else {\n          navigate(getPathForFolder(entry.hash));\n        }\n      } else {\n        const selectedEntries = getSelectedEntries();\n        driveState().setActiveActionDialog(\n          'preview',\n          selectedEntries.length ? selectedEntries : [entry]\n        );\n      }\n    },\n    [navigate]\n  );\n\n  return {performViewItemAction};\n}\n","import {DriveEntry} from '../../files/drive-entry';\nimport React, {useMemo} from 'react';\nimport {Table} from '@common/ui/tables/table';\nimport {\n  DriveSortDescriptor,\n  driveState,\n  useDriveStore,\n} from '../../drive-store';\nimport {FileTableRow} from './file-table-row';\nimport {useViewItemActionHandler} from '../use-view-item-action-handler';\nimport {fileTableColumns} from './file-table-columns';\n\ninterface Props {\n  entries: DriveEntry[];\n}\nexport function FileTable({entries}: Props) {\n  const {performViewItemAction} = useViewItemActionHandler();\n  const selectedEntries = useDriveStore(s => s.selectedEntries);\n  const sortDescriptor = useDriveStore(s => s.sortDescriptor);\n\n  const selectedRows = useMemo(() => {\n    return [...selectedEntries];\n  }, [selectedEntries]);\n\n  return (\n    <Table\n      columns={fileTableColumns}\n      data={entries}\n      sortDescriptor={sortDescriptor}\n      onSortChange={value => {\n        driveState().setSortDescriptor(value as DriveSortDescriptor);\n      }}\n      onAction={performViewItemAction}\n      selectedRows={selectedRows}\n      selectionStyle=\"highlight\"\n      renderRowAs={FileTableRow}\n      onSelectionChange={value => {\n        driveState().selectEntries(value as number[]);\n      }}\n    />\n  );\n}\n","import React, {useContext} from 'react';\nimport {DriveEntry} from '../../files/drive-entry';\nimport {driveState, useDriveStore} from '../../drive-store';\nimport {mergeProps} from '@react-aria/utils';\nimport {useFileViewDnd} from '../use-file-view-dnd';\nimport {useViewItemActionHandler} from '../use-view-item-action-handler';\nimport {usePointerEvents} from '@common/ui/interactions/use-pointer-events';\nimport {createEventHandler} from '@common/utils/dom/create-event-handler';\nimport {DashboardLayoutContext} from '@common/ui/layout/dashboard-layout-context';\nimport {BaseFileGridItem} from './base-file-grid-item';\nimport {EntryActionMenuTrigger} from '../../entry-actions/entry-action-menu-trigger';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {MoreVertIcon} from '@common/icons/material/MoreVert';\nimport {Checkbox} from '@common/ui/forms/toggle/checkbox';\nimport {isCtrlOrShiftPressed} from '@common/utils/keybinds/is-ctrl-or-shift-pressed';\n\ninterface FileGridItemProps {\n  entry: DriveEntry;\n}\nexport function FileGridItem({entry}: FileGridItemProps) {\n  const isSelected = useDriveStore(s => s.selectedEntries.has(entry.id));\n  const {performViewItemAction} = useViewItemActionHandler();\n  const {isMobileMode} = useContext(DashboardLayoutContext);\n\n  const {draggableProps, droppableProps, itemClassName, ref} =\n    useFileViewDnd<HTMLDivElement>(entry);\n\n  const toggleEntry = () => {\n    if (isSelected) {\n      driveState().deselectEntries([entry.id]);\n    } else {\n      driveState().selectEntries([entry.id], true);\n    }\n  };\n\n  const pressHandler = (e: PointerEvent, el: HTMLElement) => {\n    if (isMobileMode) {\n      if (driveState().selectedEntries.size) {\n        toggleEntry();\n      } else {\n        performViewItemAction(entry);\n      }\n    } else {\n      if (isCtrlOrShiftPressed(e)) {\n        toggleEntry();\n      } else {\n        driveState().selectEntries([entry.id]);\n      }\n    }\n  };\n\n  const {domProps: pressProps} = usePointerEvents({\n    onLongPress: isMobileMode ? () => toggleEntry() : undefined,\n    onPress: pressHandler,\n  });\n\n  const keyboardHandler: React.KeyboardEventHandler = e => {\n    if (e.key === 'Enter' || e.key === ' ') {\n      e.preventDefault();\n      e.stopPropagation();\n      performViewItemAction(entry);\n    }\n  };\n\n  const contextMenuHandler: React.MouseEventHandler = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!isMobileMode) {\n      if (!driveState().selectedEntries.has(entry.id)) {\n        driveState().selectEntries([entry.id]);\n      }\n      driveState().setContextMenuData({x: e.clientX, y: e.clientY});\n    }\n  };\n\n  return (\n    <BaseFileGridItem\n      {...mergeProps(draggableProps, droppableProps, pressProps, {\n        onKeyDown: createEventHandler(keyboardHandler),\n      })}\n      ref={ref}\n      entry={entry}\n      isSelected={isSelected}\n      isMobileMode={!!isMobileMode}\n      tabIndex={-1}\n      onDoubleClick={e => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!isMobileMode) {\n          performViewItemAction(entry);\n        }\n      }}\n      footerAdornment={\n        isMobileMode && (\n          <FooterAdornment entry={entry} isSelected={isSelected} />\n        )\n      }\n      onContextMenu={createEventHandler(contextMenuHandler)}\n      className={itemClassName}\n    />\n  );\n}\n\ninterface FooterProps {\n  entry: DriveEntry;\n  isSelected?: boolean;\n}\nfunction FooterAdornment({entry, isSelected}: FooterProps) {\n  const anySelected = useDriveStore(s => s.selectedEntries.size);\n\n  if (anySelected) {\n    return <Checkbox className=\"block mr-8\" checked={isSelected} />;\n  }\n\n  return (\n    <EntryActionMenuTrigger entries={[entry]}>\n      <IconButton\n        className=\"text-muted\"\n        onPointerDown={e => {\n          e.stopPropagation();\n        }}\n      >\n        <MoreVertIcon />\n      </IconButton>\n    </EntryActionMenuTrigger>\n  );\n}\n","import {FileGridItem} from './file-grid-item';\nimport React from 'react';\nimport {DriveEntry} from '../../files/drive-entry';\n\ninterface FileGridProps {\n  entries: DriveEntry[];\n}\nexport function FileGrid({entries}: FileGridProps) {\n  return (\n    <div className=\"file-grid-container\">\n      <div className=\"file-grid\">\n        {entries.map(entry => {\n          return <FileGridItem key={entry.id} entry={entry} />;\n        })}\n      </div>\n    </div>\n  );\n}\n","import {driveState, useDriveStore} from '../../drive-store';\nimport {EntriesSortButton} from './entries-sort-button';\nimport React from 'react';\n\ninterface DriveSortButtonProps {\n  isDisabled?: boolean;\n}\nexport function DriveSortButton({isDisabled}: DriveSortButtonProps) {\n  const descriptor = useDriveStore(s => s.sortDescriptor);\n  return (\n    <EntriesSortButton\n      isDisabled={isDisabled}\n      descriptor={descriptor}\n      onChange={value => {\n        driveState().setSortDescriptor(value);\n      }}\n    />\n  );\n}\n","import React, {ReactNode, useContext} from 'react';\nimport {useDriveStore} from './drive-store';\nimport {\n  DrivePage,\n  makeFolderPage,\n  RootFolderPage,\n  SharesPage,\n  TrashPage,\n} from './drive-page/drive-page';\nimport {Breadcrumb} from '@common/ui/breadcrumbs/breadcrumb';\nimport {useAuth} from '@common/auth/use-auth';\nimport {useFolderPath} from './files/queries/use-folder-path';\nimport {EntryActionMenuTrigger} from './entry-actions/entry-action-menu-trigger';\nimport {useActiveWorkspace} from '@common/workspace/active-workspace-id-context';\nimport {ButtonBase} from '@common/ui/buttons/button-base';\nimport {BreadcrumbItem} from '@common/ui/breadcrumbs/breadcrumb-item';\nimport {ArrowDropDownIcon} from '@common/icons/material/ArrowDropDown';\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\nimport {MixedText} from '@common/i18n/mixed-text';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {DashboardLayoutContext} from '@common/ui/layout/dashboard-layout-context';\n\ninterface ItemConfig {\n  page: DrivePage;\n  label: MessageDescriptor | string;\n}\n\ninterface PageBreadcrumbsProps {\n  className?: string;\n}\nexport function PageBreadcrumbs({className}: PageBreadcrumbsProps) {\n  const {isMobileMode} = useContext(DashboardLayoutContext);\n  const navigate = useNavigate();\n  const page = useDriveStore(s => s.activePage);\n  const folder = page?.folder;\n  const query = useFolderPath({\n    hash: folder?.hash,\n    isEnabled: folder?.hash !== RootFolderPage.folder.hash,\n  });\n  const workspace = useActiveWorkspace();\n  const rootItem = useRootItem();\n  // wait until path, folder and workspace load fully\n  const isLoading =\n    !page ||\n    !workspace ||\n    (page.isFolderPage && !folder) ||\n    query.fetchStatus !== 'idle';\n\n  let content: ReactNode;\n\n  if (isLoading) {\n    content = null;\n  } else {\n    const items: ItemConfig[] = rootItem ? [rootItem] : [];\n\n    if (query.data) {\n      query.data.path.forEach(parent => {\n        items.push({\n          page: makeFolderPage(parent),\n          label: parent.name,\n        });\n      });\n    }\n\n    content = (\n      <Breadcrumb\n        className={className}\n        size={isMobileMode ? 'md' : 'lg'}\n        currentIsClickable\n      >\n        {items.map((item, index) => {\n          const isLast = index === items.length - 1;\n          if (!isLast) {\n            return (\n              <BreadcrumbItem\n                key={item.page.id}\n                onSelected={() => {\n                  navigate(item.page.path);\n                }}\n              >\n                <MixedText value={item.label} />\n              </BreadcrumbItem>\n            );\n          }\n\n          return (\n            <BreadcrumbItem key={item.page.id}>\n              {({isMenuItem}) => {\n                if (\n                  isMenuItem ||\n                  (!item.page.folder && item.page !== TrashPage)\n                )\n                  return <MixedText value={item.label} />;\n                return (\n                  <EntryActionMenuTrigger page={item.page}>\n                    <ButtonBase className=\"flex items-center gap-2 rounded focus-visible:ring-offset-4\">\n                      <MixedText value={item.label} />\n                      <ArrowDropDownIcon className=\"icon-md text-muted\" />\n                    </ButtonBase>\n                  </EntryActionMenuTrigger>\n                );\n              }}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    );\n  }\n\n  return content;\n}\n\nfunction useRootItem(): ItemConfig | null {\n  const page = useDriveStore(s => s.activePage);\n  const workspace = useActiveWorkspace();\n  const {user} = useAuth();\n\n  if (!page) return null;\n\n  // in workspace\n  if (workspace && !workspace.default) {\n    if (\n      page?.isFolderPage &&\n      (page?.id === RootFolderPage.id ||\n        page.folder?.workspace_id === workspace.id)\n    ) {\n      return {label: workspace.name, page: RootFolderPage};\n    }\n  }\n\n  if (page?.isFolderPage) {\n    const owner = page.folder?.users.find(u => u.owns_entry);\n    // inside shared folder\n    if (owner?.id !== user?.id) {\n      return {label: SharesPage.label, page: SharesPage};\n    }\n    // if folder is currently active, root item will always be root folder page\n    return {label: RootFolderPage.label, page: RootFolderPage};\n  }\n\n  // if folder page is not active, we are already at the root\n  return {label: page.label, page};\n}\n","import React, {ReactNode, useEffect, useRef, useState} from 'react';\nimport clsx from 'clsx';\nimport {UseInfiniteQueryResult} from '@tanstack/react-query/src/types';\nimport {Trans} from '@common/i18n/trans';\nimport {Button} from '@common/ui/buttons/button';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\nimport {ProgressCircle} from '@common/ui/progress/progress-circle';\n\nexport interface InfiniteScrollSentinelProps {\n  loaderMarginTop?: string;\n  children?: ReactNode;\n  loadMoreExtraContent?: ReactNode;\n  query: UseInfiniteQueryResult;\n  style?: React.CSSProperties;\n  className?: string;\n  variant?: 'infiniteScroll' | 'loadMore';\n  size?: 'sm' | 'md';\n}\nexport function InfiniteScrollSentinel({\n  query: {isInitialLoading, fetchNextPage, isFetchingNextPage, hasNextPage},\n  children,\n  loaderMarginTop = 'mt-24',\n  style,\n  className,\n  variant: _variant = 'infiniteScroll',\n  loadMoreExtraContent,\n  size = 'md',\n}: InfiniteScrollSentinelProps) {\n  const sentinelRef = useRef<HTMLDivElement>(null);\n  const isLoading = isFetchingNextPage || isInitialLoading;\n  const [loadMoreClickCount, setLoadMoreClickCount] = useState(0);\n  const innerVariant =\n    _variant === 'loadMore' && loadMoreClickCount < 3\n      ? 'loadMore'\n      : 'infiniteScroll';\n\n  useEffect(() => {\n    const sentinelEl = sentinelRef.current;\n    if (!sentinelEl || innerVariant === 'loadMore') return;\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting && hasNextPage && !isLoading) {\n        fetchNextPage();\n      }\n    });\n    observer.observe(sentinelEl);\n    return () => {\n      observer.unobserve(sentinelEl);\n    };\n  }, [fetchNextPage, hasNextPage, isLoading, innerVariant]);\n\n  let content: ReactNode;\n\n  if (children) {\n    // children might already be wrapped in AnimatePresence, so only wrap default loader with it\n    content = isFetchingNextPage ? children : null;\n  } else if (innerVariant === 'loadMore') {\n    content = !isInitialLoading && hasNextPage && (\n      <div className={clsx('flex items-center gap-8', loaderMarginTop)}>\n        {loadMoreExtraContent}\n        <Button\n          size={size === 'md' ? 'sm' : 'xs'}\n          className={clsx(\n            size === 'sm' ? 'min-h-24 min-w-96' : 'min-h-36 min-w-112'\n          )}\n          variant=\"outline\"\n          color=\"primary\"\n          onClick={() => {\n            fetchNextPage();\n            setLoadMoreClickCount(loadMoreClickCount + 1);\n          }}\n          disabled={isLoading}\n        >\n          {loadMoreClickCount >= 2 && !isFetchingNextPage ? (\n            <Trans message=\"Load all\" />\n          ) : (\n            <Trans message=\"Show more\" />\n          )}\n        </Button>\n      </div>\n    );\n  } else {\n    content = (\n      <AnimatePresence>\n        {isFetchingNextPage && (\n          <m.div\n            className={clsx('flex justify-center w-full', loaderMarginTop)}\n            {...opacityAnimation}\n          >\n            <ProgressCircle size={size} isIndeterminate aria-label=\"loading\" />\n          </m.div>\n        )}\n      </AnimatePresence>\n    );\n  }\n\n  return (\n    <div\n      style={style}\n      className={clsx('w-full', className, hasNextPage && 'min-h-36')}\n      role=\"presentation\"\n    >\n      <div ref={sentinelRef} aria-hidden />\n      {content}\n    </div>\n  );\n}\n","import {AnimatePresence, m} from 'framer-motion';\nimport {Trans} from '@common/i18n/trans';\nimport React from 'react';\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\n\ninterface DropTargetMaskProps {\n  isVisible: boolean;\n}\nexport function DropTargetMask({isVisible}: DropTargetMaskProps) {\n  const mask = (\n    <m.div\n      key=\"dragTargetMask\"\n      {...opacityAnimation}\n      transition={{duration: 0.3}}\n      className=\"absolute inset-0 w-full min-h-full bg-primary-light/30 border-2 border-dashed border-primary pointer-events-none\"\n    >\n      <m.div\n        initial={{y: '100%', opacity: 0}}\n        animate={{y: '-10px', opacity: 1}}\n        exit={{y: '100%', opacity: 0}}\n        className=\"p-10 bg-primary text-on-primary fixed bottom-0 left-0 right-0 max-w-max mx-auto rounded\"\n      >\n        <Trans message=\"Drop files to upload them to this folder.\" />\n      </m.div>\n    </m.div>\n  );\n  return <AnimatePresence>{isVisible ? mask : null}</AnimatePresence>;\n}\n","import React, {\n  KeyboardEventHandler,\n  MouseEventHandler,\n  ReactNode,\n  useContext,\n  useRef,\n  useState,\n} from 'react';\nimport {usePaginatedEntries} from '../files/queries/use-paginated-entries';\nimport {driveState, useDriveStore} from '../drive-store';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {SvgImage} from '@common/ui/images/svg-image/svg-image';\nimport {SearchFilterList} from '../search/search-filter-list';\nimport {Trans} from '@common/i18n/trans';\nimport {useMouseSelectionBox} from '@common/ui/interactions/dnd/mouse-selection/use-mouse-selection-box';\nimport {useDroppable} from '@common/ui/interactions/dnd/use-droppable';\nimport {mergeProps} from '@react-aria/utils';\nimport {useDriveUploadQueue} from '../uploading/use-drive-upload-queue';\nimport {EntryActionList} from '../entry-actions/entry-action-list';\nimport {DriveContextMenu} from '../files/drive-context-menu';\nimport {FileTable} from './file-table/file-table';\nimport {FileGrid} from './file-grid/file-grid';\nimport {DriveSortButton} from '../layout/sorting/drive-sort-button';\nimport {DashboardLayoutContext} from '@common/ui/layout/dashboard-layout-context';\nimport {PageBreadcrumbs} from '../page-breadcrumbs';\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport {useEntries} from '../files/queries/use-entries';\nimport {AdHost} from '@common/admin/ads/ad-host';\nimport {DropTargetMask} from '../drop-target-mask';\nimport {useSearchParams} from 'react-router-dom';\nimport clsx from 'clsx';\nimport {MixedDraggable} from '@common/ui/interactions/dnd/use-draggable';\nimport {isCtrlKeyPressed} from '@common/utils/keybinds/is-ctrl-key-pressed';\nimport {useDeleteEntries} from '@app/drive/files/queries/use-delete-entries';\nimport {createEventHandler} from '@common/utils/dom/create-event-handler';\nimport {TrashPage} from '@app/drive/drive-page/drive-page';\nimport {getSelectedEntries} from '@app/drive/files/use-selected-entries';\n\ninterface FileViewProps {\n  className?: string;\n}\nexport function FileView({className}: FileViewProps) {\n  const [params] = useSearchParams();\n  const isSearchingOrFiltering =\n    !!params.get('query') || !!params.get('filters');\n  const containerRef = useRef<HTMLDivElement>(null);\n  const query = usePaginatedEntries();\n  const entries = useEntries();\n  const {uploadFiles} = useDriveUploadQueue();\n  const deleteEntries = useDeleteEntries();\n  const activePage = useDriveStore(s => s.activePage);\n  const [isDragOver, setIsDragOver] = useState(false);\n  const viewMode = useDriveStore(s => s.viewMode);\n  const {isMobileMode} = useContext(DashboardLayoutContext);\n\n  const {containerProps, boxProps} = useMouseSelectionBox({\n    containerRef,\n    onPointerDown: e => {\n      if (!(e.target as HTMLElement).closest('.entry-action-list')) {\n        driveState().deselectEntries('all');\n      }\n    },\n  });\n\n  const {droppableProps} = useDroppable({\n    id: 'driveRoot',\n    ref: containerRef,\n    types: ['nativeFile'],\n    disabled: !activePage?.canUpload,\n    onDragEnter: () => {\n      setIsDragOver(true);\n    },\n    onDragLeave: () => {\n      setIsDragOver(false);\n    },\n    onDrop: async (draggable: MixedDraggable) => {\n      if (draggable.type === 'nativeFile') {\n        uploadFiles(await draggable.getData());\n      }\n    },\n  });\n\n  if (!activePage) return null;\n\n  let content: ReactNode;\n  if (!entries.length && (!query.isLoading || query.fetchStatus === 'idle')) {\n    const noContentMessage = activePage.noContentMessage(\n      isSearchingOrFiltering,\n    );\n    content = (\n      <IllustratedMessage\n        className=\"mt-40\"\n        image={<SvgImage src={noContentMessage.image} />}\n        title={<Trans {...noContentMessage.title} />}\n        description={<Trans {...noContentMessage.description} />}\n      />\n    );\n  } else if (!query.isLoading) {\n    content =\n      viewMode === 'list' ? (\n        <FileTable entries={entries} />\n      ) : (\n        <FileGrid entries={entries} />\n      );\n  }\n\n  const handleContextMenu: MouseEventHandler = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    driveState().deselectEntries('all');\n    driveState().setContextMenuData({x: e.clientX, y: e.clientY});\n  };\n\n  const handleKeybinds: KeyboardEventHandler = e => {\n    if (e.key === 'a' && isCtrlKeyPressed(e)) {\n      e.preventDefault();\n      e.stopPropagation();\n      driveState().selectEntries(entries.map(entry => entry.id));\n    }\n    if (e.key === 'Delete') {\n      e.preventDefault();\n      e.stopPropagation();\n      if (driveState().selectedEntries.size && !deleteEntries.isPending) {\n        if (activePage === TrashPage) {\n          driveState().setActiveActionDialog(\n            'confirmAndDeleteForever',\n            getSelectedEntries(),\n          );\n        } else {\n          deleteEntries.mutate({\n            entryIds: [...driveState().selectedEntries],\n            deleteForever: activePage === TrashPage,\n          });\n          driveState().selectEntries([]);\n        }\n      }\n    }\n  };\n\n  return (\n    <div\n      className={clsx('relative outline-none', className)}\n      tabIndex={-1}\n      {...mergeProps(containerProps, droppableProps, {\n        onKeyDown: createEventHandler(handleKeybinds),\n      })}\n      onContextMenu={handleContextMenu}\n    >\n      <div className=\"relative flex min-h-full flex-col pt-10\">\n        {isMobileMode ? (\n          <PageBreadcrumbs className=\"mb-10 px-14\" />\n        ) : (\n          <Toolbar />\n        )}\n        <SearchFilterList />\n        <div className=\"relative flex-auto px-18 pb-18 md:px-24\">\n          <AdHost slot=\"drive\" className=\"mb-24\" />\n          {content}\n          <InfiniteScrollSentinel query={query} />\n        </div>\n        <div\n          {...boxProps}\n          className=\"pointer-events-none absolute left-0 top-0 z-10 hidden border border-primary-light bg-primary-light/20 shadow-md\"\n        />\n        <DriveContextMenu />\n        <DropTargetMask isVisible={isDragOver} />\n      </div>\n    </div>\n  );\n}\n\nfunction Toolbar() {\n  const activePage = useDriveStore(s => s.activePage);\n  return (\n    <div className=\"my-10 flex min-h-42 items-center justify-between gap-40 px-10 text-muted md:px-18\">\n      <DriveSortButton isDisabled={activePage?.disableSort} />\n      <EntryActionList className=\"text-muted\" />\n    </div>\n  );\n}\n","import {\n  ComponentPropsWithoutRef,\n  CSSProperties,\n  memo,\n  ReactElement,\n  useMemo,\n  useState,\n} from 'react';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {FileTypeIcon} from '@common/uploads/file-type-icon/file-type-icon';\nimport {prettyBytes} from '@common/uploads/utils/pretty-bytes';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {CloseIcon} from '@common/icons/material/Close';\nimport {ProgressCircle} from '@common/ui/progress/progress-circle';\nimport {CheckCircleIcon} from '@common/icons/material/CheckCircle';\nimport {UploadedFile} from '@common/uploads/uploaded-file';\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\nimport {Trans} from '@common/i18n/trans';\nimport {MixedText} from '@common/i18n/mixed-text';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\nimport {ErrorIcon} from '@common/icons/material/Error';\nimport {WarningIcon} from '@common/icons/material/Warning';\nimport {message} from '@common/i18n/message';\n\ninterface UploadQueueProps {\n  file: UploadedFile;\n  style: CSSProperties;\n}\nexport const UploadQueueItem = memo(({file, style}: UploadQueueProps) => {\n  return (\n    <div\n      className=\"p-10 flex items-center gap-14 w-full absolute top-0 left-0\"\n      style={style}\n    >\n      <div className=\"shrink-0 border rounded p-8\">\n        <FileTypeIcon className=\"w-22 h-22\" mime={file.mime} />\n      </div>\n      <div className=\"flex-auto min-w-0 pr-10\">\n        <div className=\"mb-2 flex items-center min-w-0 gap-10\">\n          <div className=\"flex-auto font-medium whitespace-nowrap min-w-0 overflow-hidden overflow-ellipsis\">\n            {file.name}\n          </div>\n        </div>\n        <SizeInfo file={file} />\n      </div>\n      <div className=\"mr-10\">\n        <FileStatus file={file} />\n      </div>\n    </div>\n  );\n});\n\ninterface SizeInfoProps {\n  file: UploadedFile;\n}\nfunction SizeInfo({file}: SizeInfoProps) {\n  const fileUpload = useFileUploadStore(s => s.fileUploads.get(file.id));\n  const bytesUploaded = fileUpload?.bytesUploaded || 0;\n\n  const totalBytes = useMemo(() => prettyBytes(file.size), [file]);\n  const uploadedBytes = useMemo(\n    () => prettyBytes(bytesUploaded),\n    [bytesUploaded]\n  );\n\n  let statusMessage: ReactElement;\n  if (fileUpload?.status === 'completed') {\n    statusMessage = <Trans message=\"Upload complete\" />;\n  } else if (fileUpload?.status === 'aborted') {\n    statusMessage = <Trans message=\"Upload cancelled\" />;\n  } else if (fileUpload?.status === 'failed') {\n    statusMessage = <Trans message=\"Upload failed\" />;\n  } else {\n    statusMessage = (\n      <Trans\n        message=\":bytesUploaded of :totalBytes\"\n        values={{\n          bytesUploaded: uploadedBytes,\n          totalBytes,\n        }}\n      />\n    );\n  }\n\n  return <div className=\"text-muted text-xs\">{statusMessage}</div>;\n}\n\ninterface FileStatusProps {\n  file: UploadedFile;\n}\nfunction FileStatus({file}: FileStatusProps) {\n  const fileUpload = useFileUploadStore(s => s.fileUploads.get(file.id));\n  const abortUpload = useFileUploadStore(s => s.abortUpload);\n  const percentage = fileUpload?.percentage || 0;\n  const status = fileUpload?.status;\n  const errorMessage = fileUpload?.errorMessage;\n  const [isHovered, setIsHovered] = useState(false);\n\n  const abortButton = (\n    <IconButton\n      size=\"sm\"\n      onClick={() => {\n        abortUpload(file.id);\n      }}\n    >\n      <CloseIcon />\n    </IconButton>\n  );\n\n  const progressButton = (\n    <ProgressCircle aria-label=\"Upload progress\" size=\"sm\" value={percentage} />\n  );\n\n  let statusButton: ReactElement;\n  if (status === 'failed') {\n    const errMessage =\n      errorMessage || message('This file could not be uploaded');\n    statusButton = (\n      <AnimatedStatus>\n        <Tooltip variant=\"danger\" label={<MixedText value={errMessage} />}>\n          <ErrorIcon className=\"text-danger\" size=\"md\" />\n        </Tooltip>\n      </AnimatedStatus>\n    );\n  } else if (status === 'aborted') {\n    statusButton = (\n      <AnimatedStatus>\n        <WarningIcon className=\"text-warning\" size=\"md\" />\n      </AnimatedStatus>\n    );\n  } else if (status === 'completed') {\n    statusButton = (\n      <AnimatedStatus>\n        <CheckCircleIcon size=\"md\" className=\"text-positive\" />\n      </AnimatedStatus>\n    );\n  } else {\n    statusButton = (\n      <AnimatedStatus\n        onPointerEnter={e => {\n          if (e.pointerType === 'mouse') {\n            setIsHovered(true);\n          }\n        }}\n        onPointerLeave={e => {\n          if (e.pointerType === 'mouse') {\n            setIsHovered(false);\n          }\n        }}\n      >\n        {isHovered ? abortButton : progressButton}\n      </AnimatedStatus>\n    );\n  }\n\n  return <AnimatePresence>{statusButton}</AnimatePresence>;\n}\n\ninterface AnimatedStatusProps\n  extends Omit<\n    ComponentPropsWithoutRef<'div'>,\n    'onAnimationStart' | 'onDragStart' | 'onDragEnd' | 'onDrag'\n  > {\n  children: ReactElement;\n}\nfunction AnimatedStatus({children, ...domProps}: AnimatedStatusProps) {\n  return (\n    <m.div\n      {...domProps}\n      initial={{scale: 0, opacity: 0}}\n      animate={{scale: 1, opacity: 1}}\n      exit={{scale: 0, opacity: 0}}\n    >\n      {children}\n    </m.div>\n  );\n}\n","import {ReactElement, useRef} from 'react';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {driveState, useDriveStore} from '../drive-store';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {CloseIcon} from '@common/icons/material/Close';\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\nimport {Trans} from '@common/i18n/trans';\nimport {UploadQueueItem} from './upload-queue-item';\nimport {useVirtualizer} from '@tanstack/react-virtual';\n\nexport function UploadQueue() {\n  const isOpen = useDriveStore(s => s.uploadQueueIsOpen);\n\n  return (\n    <AnimatePresence>\n      {isOpen && (\n        <m.div\n          key=\"upload-queue\"\n          className=\"shadow-xl rounded fixed bottom-16 right-16 bg z-modal border w-375 text-sm\"\n          initial={{y: '100%', opacity: 0}}\n          animate={{y: 0, opacity: 1}}\n          exit={{y: '100%', opacity: 0}}\n        >\n          <Header />\n          <UploadList />\n        </m.div>\n      )}\n    </AnimatePresence>\n  );\n}\n\nexport function Header() {\n  const inProgressUploadsCount = useFileUploadStore(s => s.activeUploadsCount);\n  const completedUploadsCount = useFileUploadStore(\n    s => s.completedUploadsCount\n  );\n  const clearInactive = useFileUploadStore(s => s.clearInactive);\n\n  let message: ReactElement;\n  if (inProgressUploadsCount) {\n    message = (\n      <Trans\n        message=\"Uploading :count files\"\n        values={{count: inProgressUploadsCount}}\n      />\n    );\n  } else if (completedUploadsCount) {\n    message = (\n      <Trans\n        message=\"Uploaded :count files\"\n        values={{count: completedUploadsCount}}\n      />\n    );\n  } else {\n    message = <Trans message=\"No active uploads\" />;\n  }\n\n  // only allow closing upload queue if there are no active uploads\n  return (\n    <div className=\"px-10 py-4 bg-alt flex items-center gap-10 justify-between border-b min-h-[45px]\">\n      {message}\n      {inProgressUploadsCount === 0 ? (\n        <IconButton\n          size=\"sm\"\n          onClick={() => {\n            driveState().setUploadQueueIsOpen(false);\n            // wait for upload queue panel animation to complete, then clear inactive uploads\n            setTimeout(() => {\n              clearInactive();\n            }, 200);\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : undefined}\n    </div>\n  );\n}\n\nfunction UploadList() {\n  const uploads = useFileUploadStore(s => s.fileUploads);\n  const uploadsArray = [...uploads.values()];\n  const ref = useRef<HTMLDivElement>(null);\n  const virtualizer = useVirtualizer({\n    count: uploads.size,\n    getScrollElement: () => ref.current,\n    estimateSize: () => 60,\n    overscan: 4,\n  });\n\n  return (\n    <div className=\"max-h-320 overflow-y-auto\" ref={ref}>\n      <div\n        className=\"relative w-full\"\n        style={{\n          height: `${virtualizer.getTotalSize()}px`,\n        }}\n      >\n        {virtualizer.getVirtualItems().map(virtualItem => {\n          const upload = uploadsArray[virtualItem.index];\n          return (\n            <UploadQueueItem\n              style={{\n                height: `${virtualItem.size}px`,\n                transform: `translateY(${virtualItem.start}px)`,\n              }}\n              key={upload.file.id}\n              file={upload.file}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","export default \"__VITE_ASSET__6b065fb0__\"","import React, {ReactNode, useContext} from 'react';\nimport {DashboardLayoutContext} from '@common/ui/layout/dashboard-layout-context';\nimport {FileTypeIcon} from '@common/uploads/file-type-icon/file-type-icon';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {CloseIcon} from '@common/icons/material/Close';\n\ninterface HeaderProps {\n  entryType: string;\n  entryName: ReactNode;\n}\nexport function DetailsSidebarHeader({entryType, entryName}: HeaderProps) {\n  const {setRightSidenavStatus} = useContext(DashboardLayoutContext);\n  return (\n    <div className=\"flex items-center gap-16 text-text-main mb-38\">\n      <FileTypeIcon className=\"w-24 h-24\" type={entryType} />\n      <div className=\"text-xl font-normal text-ellipsis flex-auto mr-auto min-w-0 break-words\">\n        {entryName}\n      </div>\n      <IconButton\n        size=\"md\"\n        className=\"flex-shrink-0\"\n        onClick={() => {\n          setRightSidenavStatus('closed');\n        }}\n      >\n        <CloseIcon />\n      </IconButton>\n    </div>\n  );\n}\n","import React, {ReactNode} from 'react';\nimport clsx from 'clsx';\n\ninterface Props {\n  children: ReactNode;\n  margin?: string;\n}\nexport function DetailsSidebarSectionHeader({\n  children,\n  margin = 'mb-20',\n}: Props) {\n  return <div className={clsx('text-base text-main', margin)}>{children}</div>;\n}\n","import {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {message} from '@common/i18n/message';\nimport {ChipValue} from '@common/ui/forms/input-field/chip-field/chip-field';\nimport {DriveEntry} from '@app/drive/files/drive-entry';\nimport {invalidateEntryQueries} from '@app/drive/drive-query-keys';\n\ninterface Response extends BackendResponse {\n  //\n}\n\ninterface Payload {\n  entry: DriveEntry;\n  tags: ChipValue[];\n}\n\nexport function useSyncEntryTags() {\n  return useMutation({\n    mutationFn: (props: Payload) => createComment(props),\n    onSuccess: () => {\n      invalidateEntryQueries();\n    },\n    onError: err => showHttpErrorToast(err, message('Failed to save tags.')),\n  });\n}\n\nfunction createComment({entry, tags}: Payload): Promise<Response> {\n  return apiClient\n    .post(`file-entries/${entry.id}/sync-tags`, {\n      tags: tags.map(tag => tag.name),\n    })\n    .then(r => r.data);\n}\n","import {keepPreviousData, useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {NormalizedModel} from '@common/datatable/filters/normalized-model';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\n\ninterface Response extends BackendResponse {\n  results: NormalizedModel[];\n}\n\nexport function useFileEntryTags(query?: string) {\n  return useQuery({\n    queryKey: ['file-entry-tags', query],\n    queryFn: () => fetchTags(query),\n    placeholderData: keepPreviousData,\n  });\n}\n\nasync function fetchTags(query?: string) {\n  return apiClient\n    .get<Response>('file-entry-tags', {params: {query}})\n    .then(r => r.data);\n}\n","import {DetailsSidebarSectionHeader} from '@app/drive/details-sidebar/details-sidebar-section-header';\nimport {Trans} from '@common/i18n/trans';\nimport {DriveEntry} from '@app/drive/files/drive-entry';\nimport {\n  ChipField,\n  ChipValue,\n} from '@common/ui/forms/input-field/chip-field/chip-field';\nimport React, {useState} from 'react';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {message} from '@common/i18n/message';\nimport {useSyncEntryTags} from '@app/drive/details-sidebar/requests/use-sync-entry-tags';\nimport {useFileEntryTags} from '@app/drive/details-sidebar/requests/use-file-entry-tags';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\n\ninterface Props {\n  entry: DriveEntry;\n}\nexport function DetailsSidebarTags({entry}: Props) {\n  // use key={entry.id} to force re-render tag chip field when entry changes\n  return (\n    <div className=\"mt-20 border-t pt-20\">\n      <DetailsSidebarSectionHeader margin=\"mb-10\">\n        <Trans message=\"Tags\" />\n      </DetailsSidebarSectionHeader>\n      <TagChipField entry={entry} key={entry.id} />\n    </div>\n  );\n}\n\nfunction TagChipField({entry}: Props) {\n  const {trans} = useTrans();\n  const navigate = useNavigate();\n  const syncTags = useSyncEntryTags();\n  const [inputValue, setInputValue] = useState('');\n  const [value, setValue] = useState<ChipValue[]>(entry.tags || []);\n  const {data, isLoading} = useFileEntryTags(inputValue);\n\n  const handleChange = (newTags: ChipValue[]) => {\n    setValue(newTags);\n    if (!syncTags.isPending) {\n      syncTags.mutate({tags: newTags, entry});\n    }\n  };\n\n  return (\n    <ChipField\n      isAsync\n      inputValue={inputValue}\n      onInputValueChange={setInputValue}\n      suggestions={data?.results}\n      placeholder={trans(message('+Add tag'))}\n      isLoading={isLoading}\n      chipSize=\"sm\"\n      value={value}\n      onChange={handleChange}\n      onChipClick={chip => {\n        navigate(`/drive/search?query=${chip.name}`);\n      }}\n    >\n      {data?.results?.map(result => (\n        <Item value={result} key={result.id}>\n          {result.name}\n        </Item>\n      ))}\n    </ChipField>\n  );\n}\n","import {useSelectedEntryParent} from '@app/drive/files/use-selected-entries';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport React, {ReactNode, useMemo} from 'react';\nimport {prettyBytes} from '@common/uploads/utils/pretty-bytes';\nimport {Trans} from '@common/i18n/trans';\nimport {Button} from '@common/ui/buttons/button';\nimport {FolderIcon} from '@common/icons/material/Folder';\nimport {\n  getPathForFolder,\n  RootFolderPage,\n} from '@app/drive/drive-page/drive-page';\nimport {FormattedDate} from '@common/i18n/formatted-date';\nimport {DriveEntry} from '@app/drive/files/drive-entry';\nimport {FileThumbnail} from '@common/uploads/file-type-icon/file-thumbnail';\nimport {GroupsIcon} from '@common/icons/material/Groups';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\nimport {Avatar} from '@common/ui/images/avatar';\nimport {driveState} from '@app/drive/drive-store';\nimport {DetailsSidebarHeader} from '@app/drive/details-sidebar/details-sidebar-header';\nimport {DetailsSidebarSectionHeader} from '@app/drive/details-sidebar/details-sidebar-section-header';\nimport {DetailsSidebarTags} from '@app/drive/details-sidebar/details-sidebar-tags';\n\ninterface EntryPropertiesProps {\n  entry: DriveEntry;\n}\nexport function DetailsSidebarProperties({entry}: EntryPropertiesProps) {\n  return (\n    <div>\n      <DetailsSidebarHeader entryType={entry.type} entryName={entry.name} />\n      {entry.type === 'image' && (\n        <FileThumbnail className=\"mb-20\" file={entry} />\n      )}\n      <div>\n        <DetailsSidebarSectionHeader>\n          <Trans message=\"Who has access\" />\n        </DetailsSidebarSectionHeader>\n        <div className=\"flex items-center gap-14\">\n          {entry.workspace_id ? (\n            <div className=\"rounded-full border w-32 h-32 flex items-center justify-center\">\n              <GroupsIcon className=\"icon-md\" />\n            </div>\n          ) : null}\n          {entry.users.map(user => (\n            <Tooltip label={user.display_name} key={user.id}>\n              <Avatar src={user.avatar} size=\"md\" circle />\n            </Tooltip>\n          ))}\n        </div>\n        {entry.permissions['files.update'] && (\n          <Button\n            className=\"block mt-20\"\n            variant=\"link\"\n            color=\"primary\"\n            onClick={() => {\n              driveState().setActiveActionDialog('share', [entry]);\n            }}\n          >\n            <Trans message=\"Manage Access\" />\n          </Button>\n        )}\n      </div>\n      <PropertyList entry={entry} />\n      <DetailsSidebarTags entry={entry} />\n    </div>\n  );\n}\n\ninterface Props {\n  entry: DriveEntry;\n}\nfunction PropertyList({entry}: Props) {\n  const parent = useSelectedEntryParent();\n  const navigate = useNavigate();\n  const owner = entry.users.find(user => user.owns_entry);\n  const prettySize = useMemo(\n    () => prettyBytes(entry.file_size),\n    [entry.file_size]\n  );\n\n  return (\n    <div className=\"mt-20 border-t pt-20\">\n      <DetailsSidebarSectionHeader>\n        <Trans message=\"Properties\" />\n      </DetailsSidebarSectionHeader>\n      <PropertyItem\n        label={<Trans message=\"Type\" />}\n        value={\n          <span className=\"capitalize\">\n            <Trans message={entry.type} />\n          </span>\n        }\n      />\n      <PropertyItem\n        label={<Trans message=\"Size\" />}\n        value={entry.file_size ? prettySize : '-'}\n      />\n      <PropertyItem\n        label={<Trans message=\"Location\" />}\n        value={\n          <Button\n            variant=\"link\"\n            startIcon={<FolderIcon />}\n            onClick={() => {\n              navigate(\n                parent ? getPathForFolder(parent.hash) : RootFolderPage.path\n              );\n            }}\n          >\n            {parent ? parent.name : <Trans message=\"Root\" />}\n          </Button>\n        }\n      />\n      {owner && (\n        <PropertyItem\n          label={<Trans message=\"Owner\" />}\n          value={owner.display_name}\n        />\n      )}\n      <PropertyItem\n        label={<Trans message=\"Modified\" />}\n        value={<FormattedDate date={entry.updated_at} />}\n      />\n      <PropertyItem\n        label={<Trans message=\"Created\" />}\n        value={<FormattedDate date={entry.updated_at} />}\n      />\n    </div>\n  );\n}\n\ninterface PropertyItemProps {\n  label: ReactNode;\n  value: ReactNode;\n}\nfunction PropertyItem({label, value}: PropertyItemProps) {\n  return (\n    <div className=\"flex items-center mb-14\">\n      <div className=\"w-1/3 text-xs text-muted\">{label}</div>\n      <div className=\"w-2/3 text-sm text-main\">{value}</div>\n    </div>\n  );\n}\n","import React, {Fragment} from 'react';\nimport {useSelectedEntry} from '../files/use-selected-entries';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {SvgImage} from '@common/ui/images/svg-image/svg-image';\nimport {Trans} from '@common/i18n/trans';\nimport detailedExamination from './detailed-examination.svg';\nimport clsx from 'clsx';\nimport {DetailsSidebarHeader} from '@app/drive/details-sidebar/details-sidebar-header';\nimport {DetailsSidebarProperties} from '@app/drive/details-sidebar/details-sidebar-properties';\n\ninterface DetailsSidebarProps {\n  className?: string;\n}\nexport function DetailsSidebar({className}: DetailsSidebarProps) {\n  const selectedEntry = useSelectedEntry();\n  return (\n    <div\n      className={clsx(\n        className,\n        'bg p-18 text-sm text-muted border-l h-full overflow-y-auto'\n      )}\n    >\n      {selectedEntry ? (\n        <DetailsSidebarProperties entry={selectedEntry} />\n      ) : (\n        <NothingSelected />\n      )}\n    </div>\n  );\n}\n\nfunction NothingSelected() {\n  return (\n    <Fragment>\n      <DetailsSidebarHeader\n        entryType=\"folder\"\n        entryName={<Trans message=\"All files\" />}\n      />\n      <IllustratedMessage\n        image={<SvgImage src={detailedExamination} />}\n        description={\n          <Trans message=\"Select file or folder to see details here\" />\n        }\n      />\n    </Fragment>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {apiClient} from '@common/http/query-client';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\n\ninterface Response extends BackendResponse {\n  fileEntry: FileEntry;\n}\n\ninterface Payload {\n  entryId: number;\n  name: string;\n  initialName: string;\n}\n\nexport function useRenameEntry(form: UseFormReturn<any>) {\n  return useMutation({\n    mutationFn: (payload: Payload) => renameEntry(payload),\n    onSuccess: (r, p) => {\n      invalidateEntryQueries();\n      toast(\n        message(':oldName renamed to :newName', {\n          values: {oldName: p.initialName, newName: r.fileEntry.name},\n        }),\n      );\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction renameEntry({entryId, ...payload}: Payload): Promise<Response> {\n  return apiClient\n    .put(`file-entries/${entryId}`, payload)\n    .then(response => response.data);\n}\n","import React from 'react';\nimport {useForm} from 'react-hook-form';\nimport {useRenameEntry} from '../queries/use-rename-entry';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {Button} from '@common/ui/buttons/button';\nimport {Form} from '@common/ui/forms/form';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {Trans} from '@common/i18n/trans';\nimport {DriveEntry} from '../drive-entry';\n\ninterface FormValue {\n  name?: string;\n}\n\ninterface RenameEntryDialogProps {\n  entries: DriveEntry[];\n}\nexport function RenameEntryDialog({entries}: RenameEntryDialogProps) {\n  const {close, formId} = useDialogContext();\n  const initialName = entries[0]?.name;\n  const form = useForm({defaultValues: {name: initialName}});\n  const renameEntry = useRenameEntry(form);\n\n  const onSubmit = (e: Required<FormValue>) => {\n    renameEntry.mutate(\n      {\n        entryId: entries[0].id,\n        name: e.name,\n        initialName,\n      },\n      {onSuccess: close},\n    );\n  };\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Rename\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form onSubmit={onSubmit} form={form} id={formId}>\n          <FormTextField\n            placeholder=\"Enter a name...\"\n            aria-label=\"Entry name\"\n            autoFocus\n            name=\"name\"\n            required\n            minLength={3}\n            maxLength={200}\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"flat\" onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          form={formId}\n          type=\"submit\"\n          variant=\"flat\"\n          color=\"primary\"\n          disabled={renameEntry.isPending || !form.formState.isDirty}\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {apiClient} from '@common/http/query-client';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {DriveFolder} from '../drive-entry';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\n\ninterface Response extends BackendResponse {\n  folder: DriveFolder;\n}\n\ninterface CreateFolderProps {\n  name: string;\n  parentId?: number | null;\n}\n\nfunction createFolder({name, parentId}: CreateFolderProps): Promise<Response> {\n  return apiClient\n    .post('folders', {\n      name,\n      parentId: parentId === 0 ? null : parentId,\n    })\n    .then(response => response.data);\n}\n\nexport function useCreateFolder(form: UseFormReturn<any>) {\n  return useMutation({\n    mutationFn: ({name, parentId}: CreateFolderProps) => {\n      return createFolder({name, parentId});\n    },\n    onSuccess: () => invalidateEntryQueries(),\n    onError: r => onFormQueryError(r, form),\n  });\n}\n","import React from 'react';\nimport {useForm} from 'react-hook-form';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {Button} from '@common/ui/buttons/button';\nimport {toast} from '@common/ui/toast/toast';\nimport {Form} from '@common/ui/forms/form';\nimport {useCreateFolder} from '../queries/create-folder';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {Trans} from '@common/i18n/trans';\nimport {message} from '@common/i18n/message';\nimport {useTrans} from '@common/i18n/use-trans';\n\ninterface FormValue {\n  name?: string;\n}\n\ninterface NewFolderDialogProps {\n  parentId: number;\n}\nexport function NewFolderDialog({parentId}: NewFolderDialogProps) {\n  const {close, formId} = useDialogContext();\n  const {trans} = useTrans();\n  const form = useForm({\n    defaultValues: {\n      name: trans({message: 'Untitled Folder'}),\n    },\n  });\n  const createFolder = useCreateFolder(form);\n\n  const onSubmit = (value: Required<FormValue>) => {\n    createFolder.mutate(\n      {...value, parentId},\n      {\n        onSuccess: response => {\n          close(response.folder);\n          toast(message('Folder created'));\n        },\n      },\n    );\n  };\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"New Folder\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form onSubmit={onSubmit} form={form} id={formId}>\n          <FormTextField\n            placeholder={trans({\n              message: 'Enter a name...',\n            })}\n            aria-label=\"Entry name\"\n            autoFocus\n            autoSelectText\n            name=\"name\"\n            required\n            minLength={3}\n            maxLength={200}\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"flat\" onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          form={formId}\n          type=\"submit\"\n          variant=\"flat\"\n          color=\"primary\"\n          disabled={createFolder.isPending}\n        >\n          <Trans message=\"Create\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {FilePreviewDialog} from '@common/uploads/preview/file-preview-dialog';\nimport {DriveEntry} from '../drive-entry';\nimport {createElement, Fragment, useState} from 'react';\nimport {useShareAction} from '../../entry-actions/use-entry-actions';\nimport {Button} from '@common/ui/buttons/button';\nimport {Trans} from '@common/i18n/trans';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {useEntries} from '../queries/use-entries';\n\ninterface EntryPreviewDialogProps {\n  selectedEntry: DriveEntry;\n}\nexport function EntryPreviewDialog({selectedEntry}: EntryPreviewDialogProps) {\n  const files = useEntries().filter(entry => entry.type !== 'folder');\n  const defaultActiveIndex = files.findIndex(\n    file => file.id === selectedEntry?.id\n  );\n  const [activeIndex, setActiveIndex] = useState(defaultActiveIndex);\n  return (\n    <FilePreviewDialog\n      allowDownload={selectedEntry.permissions['files.download']}\n      headerActionsLeft={\n        <DriveActions activeIndex={activeIndex} entries={files} />\n      }\n      activeIndex={activeIndex}\n      onActiveIndexChange={setActiveIndex}\n      entries={files}\n    />\n  );\n}\n\ninterface DriveActionsProps {\n  activeIndex: number;\n  entries: DriveEntry[];\n}\nfunction DriveActions({activeIndex, entries}: DriveActionsProps) {\n  const selectedEntry = entries[activeIndex];\n  const share = useShareAction([selectedEntry]);\n  if (!selectedEntry || !share) return null;\n\n  return (\n    <Fragment>\n      <IconButton\n        className=\"md:hidden\"\n        onClick={() => {\n          share.execute();\n        }}\n      >\n        {createElement(share.icon)}\n      </IconButton>\n      <Button\n        className=\"max-md:hidden\"\n        variant=\"text\"\n        startIcon={createElement(share.icon)}\n        onClick={() => {\n          share.execute();\n        }}\n      >\n        <Trans {...share.label} />\n      </Button>\n    </Fragment>\n  );\n}\n","import axios from 'axios';\nimport {useMutation} from '@tanstack/react-query';\nimport {DriveEntryPermissions} from '../../files/drive-entry';\nimport {apiClient} from '@common/http/query-client';\nimport {toast} from '@common/ui/toast/toast';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {BackendErrorResponse} from '@common/errors/backend-error-response';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\nexport interface ShareEntryPayload {\n  emails: string[];\n  permissions: DriveEntryPermissions;\n  entryId: number;\n}\n\nfunction shareEntry({\n  entryId,\n  ...payload\n}: ShareEntryPayload): Promise<BackendResponse> {\n  return apiClient\n    .post(`file-entries/${entryId}/share`, payload)\n    .then(response => response.data);\n}\n\nexport function useShareEntry() {\n  return useMutation({\n    mutationFn: (payload: ShareEntryPayload) => shareEntry(payload),\n    onSuccess: () => {\n      invalidateEntryQueries();\n    },\n    onError: err => {\n      if (axios.isAxiosError(err) && err.response) {\n        const response = err.response.data as BackendErrorResponse;\n        if (response.errors?.emails) {\n          toast.danger(response.errors?.emails[0]);\n        } else {\n          showHttpErrorToast(err);\n        }\n      }\n    },\n  });\n}\n","import {FileEntry} from '@common/uploads/file-entry';\n\nexport interface DriveEntry extends FileEntry {\n  users: DriveEntryUser[];\n  workspace_id?: number;\n  permissions: {\n    'files.create': boolean;\n    'files.update': boolean;\n    'files.delete': boolean;\n    'files.download': boolean;\n  };\n}\n\nexport interface DriveFolder extends DriveEntry {\n  type: 'folder';\n  model_type?: string;\n}\n\nexport interface DriveEntryUser {\n  id: number;\n  email: string;\n  display_name: string;\n  avatar?: string;\n  owns_entry: boolean;\n  entry_permissions: DriveEntryPermissions;\n}\n\nexport interface DriveEntryPermissions {\n  edit?: boolean;\n  view?: boolean;\n  download?: boolean;\n}\n\nexport const DRIVE_ENTRY_FULL_PERMISSIONS = {\n  edit: true,\n  view: true,\n  download: true,\n};\n","import {Button} from '@common/ui/buttons/button';\nimport {ArrowDropDownIcon} from '@common/icons/material/ArrowDropDown';\nimport {\n  DRIVE_ENTRY_FULL_PERMISSIONS,\n  DriveEntryPermissions,\n  DriveEntryUser,\n} from '../files/drive-entry';\nimport {\n  Menu,\n  MenuItem,\n  MenuTrigger,\n} from '@common/ui/navigation/menu/menu-trigger';\nimport {message} from '@common/i18n/message';\nimport {Trans} from '@common/i18n/trans';\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\n\nexport interface PermissionSelectorItem {\n  key: keyof DriveEntryPermissions;\n  value: DriveEntryPermissions;\n  label: MessageDescriptor;\n}\n\nexport const PermissionSelectorItems: PermissionSelectorItem[] = [\n  {\n    key: 'view',\n    value: {view: true},\n    label: message('Can view'),\n  },\n  {\n    key: 'download',\n    value: {view: true, download: true},\n    label: message('Can Download'),\n  },\n  {\n    key: 'edit',\n    value: DRIVE_ENTRY_FULL_PERMISSIONS,\n    label: message('Can edit'),\n  },\n];\n\ninterface Props {\n  onChange: (value: PermissionSelectorItem) => void;\n  value: PermissionSelectorItem;\n}\nexport function PermissionSelector({value, onChange}: Props) {\n  return (\n    <MenuTrigger\n      selectedValue={value.key}\n      selectionMode=\"single\"\n      onSelectionChange={key => {\n        if (key !== value.key) {\n          onChange(PermissionSelectorItems.find(p => p.key === key)!);\n        }\n      }}\n    >\n      <Button\n        variant=\"flat\"\n        color=\"chip\"\n        size=\"xs\"\n        endIcon={<ArrowDropDownIcon />}\n      >\n        <Trans {...value.label} />\n      </Button>\n      <Menu>\n        {PermissionSelectorItems.map(item => {\n          return (\n            <MenuItem key={item.key} value={item.key}>\n              <Trans {...item.label} />\n            </MenuItem>\n          );\n        })}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n\nexport function getPermissionItemForUser(\n  user: DriveEntryUser\n): PermissionSelectorItem {\n  const {download, edit} = user.entry_permissions;\n  if (edit) {\n    return PermissionSelectorItems.find(item => item.key === 'edit')!;\n  }\n  if (download) {\n    return PermissionSelectorItems.find(item => item.key === 'download')!;\n  }\n  return PermissionSelectorItems.find(item => item.key === 'view')!;\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {DriveEntryPermissions} from '../../files/drive-entry';\nimport {apiClient} from '@common/http/query-client';\nimport {toast} from '@common/ui/toast/toast';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\nimport {message} from '@common/i18n/message';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\nexport interface ChangePermissionsPayload {\n  userId: number;\n  permissions: DriveEntryPermissions;\n  entryId: number;\n}\n\nexport function useChangePermission() {\n  return useMutation({\n    mutationFn: (payload: ChangePermissionsPayload) =>\n      changePermission(payload),\n    onSuccess: () => {\n      invalidateEntryQueries();\n      toast(message('Updated user permissions'));\n    },\n    onError: err =>\n      showHttpErrorToast(err, message('Could not update permissions')),\n  });\n}\n\nfunction changePermission({\n  entryId,\n  ...payload\n}: ChangePermissionsPayload): Promise<BackendResponse> {\n  return apiClient\n    .put(`file-entries/${entryId}/change-permissions`, payload)\n    .then(response => response.data);\n}\n","import {Avatar, AvatarProps} from '@common/ui/images/avatar';\nimport {User} from '@common/auth/user';\nimport {useContext} from 'react';\nimport {SiteConfigContext} from '@common/core/settings/site-config-context';\n\ninterface UserAvatarProps extends Omit<AvatarProps, 'label' | 'src' | 'link'> {\n  user?: User;\n}\nexport function UserAvatar({user, ...props}: UserAvatarProps) {\n  const {auth} = useContext(SiteConfigContext);\n  return (\n    <Avatar\n      {...props}\n      label={user?.display_name}\n      src={user?.avatar}\n      link={user?.id && auth.getUserProfileLink?.(user)}\n    />\n  );\n}\n","import {useState} from 'react';\nimport {AnimatePresence, m} from 'framer-motion';\nimport clsx from 'clsx';\nimport {DriveEntry, DriveEntryUser} from '../files/drive-entry';\nimport {\n  getPermissionItemForUser,\n  PermissionSelector,\n  PermissionSelectorItem,\n} from './permission-selector';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {CloseIcon} from '@common/icons/material/Close';\nimport {useChangePermission} from './queries/use-change-permission';\nimport {useUnshareEntries} from './queries/use-unshare-entries';\nimport {Trans} from '@common/i18n/trans';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {UserAvatar} from '@common/ui/images/user-avatar';\n\ninterface MemberListProps {\n  className?: string;\n  entry: DriveEntry;\n}\n\nexport function MemberList({className, entry}: MemberListProps) {\n  if (!entry) return null;\n\n  const users = entry.users;\n\n  return (\n    <div className={clsx(className, 'overflow-hidden')}>\n      <div className=\"mb-14 text-sm\">\n        <Trans message=\"Who has access\" />\n      </div>\n      <AnimatePresence initial={false}>\n        {users.map(user => {\n          return <MemberListItem key={user.id} user={user} entry={entry} />;\n        })}\n      </AnimatePresence>\n    </div>\n  );\n}\n\ninterface MemberListItemProps {\n  user: DriveEntryUser;\n  entry: DriveEntry;\n}\nfunction MemberListItem({user, entry}: MemberListItemProps) {\n  return (\n    <m.div\n      initial={{x: '-100%', opacity: 0}}\n      animate={{x: 0, opacity: 1}}\n      exit={{x: '100%', opacity: 0}}\n      transition={{type: 'tween', duration: 0.125}}\n      className=\"flex items-center text-sm gap-14 mb-20\"\n      key={user.id}\n    >\n      <UserAvatar user={user as any} circle size=\"w-44 h-44\" />\n      <div>\n        <div>{user.display_name}</div>\n        <div className=\"text-muted\">{user.email}</div>\n      </div>\n      <div className=\"ml-auto\">\n        {user.owns_entry ? (\n          <span className=\"text-muted\">\n            <Trans message=\"Owner\" />\n          </span>\n        ) : (\n          <ActionButtons user={user} entry={entry} />\n        )}\n      </div>\n    </m.div>\n  );\n}\n\ninterface ActionButtonsProps {\n  user: DriveEntryUser;\n  entry: DriveEntry;\n}\nfunction ActionButtons({user, entry}: ActionButtonsProps) {\n  const changePermissions = useChangePermission();\n  const unshareEntry = useUnshareEntries();\n  const [activePermission, setActivePermission] =\n    useState<PermissionSelectorItem>(() => {\n      return getPermissionItemForUser(user);\n    });\n\n  return (\n    <div className=\"flex items-center gap-10\">\n      <PermissionSelector\n        onChange={item => {\n          changePermissions.mutate({\n            userId: user.id,\n            permissions: item.value,\n            entryId: entry.id,\n          });\n          setActivePermission(item);\n        }}\n        value={activePermission}\n      />\n      <IconButton\n        onClick={() => {\n          unshareEntry.mutate(\n            {userId: user.id, entryIds: [entry.id]},\n            {\n              onSuccess: () => {\n                toast(message('Member removed'));\n              },\n              onError: err =>\n                showHttpErrorToast(err, message('Could not remove member')),\n            }\n          );\n        }}\n      >\n        <CloseIcon />\n      </IconButton>\n    </div>\n  );\n}\n","import {useState} from 'react';\nimport {Button} from '@common/ui/buttons/button';\nimport {useShareEntry} from './queries/use-share-entry';\nimport {\n  PermissionSelector,\n  PermissionSelectorItem,\n  PermissionSelectorItems,\n} from './permission-selector';\nimport {MemberList} from './member-list';\nimport {\n  ChipField,\n  ChipValue,\n} from '@common/ui/forms/input-field/chip-field/chip-field';\nimport {Avatar} from '@common/ui/images/avatar';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {Trans} from '@common/i18n/trans';\nimport {DriveEntry} from '../files/drive-entry';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport {isEmail} from '@common/utils/string/is-email';\nimport {useNormalizedModels} from '@common/users/queries/use-normalized-models';\nimport {useSettings} from '@common/core/settings/use-settings';\n\ninterface SharePanelProps {\n  className?: string;\n  entry: DriveEntry;\n}\nexport function SharePanel({className, entry}: SharePanelProps) {\n  const {trans} = useTrans();\n  const {share} = useSettings();\n  const shareEntry = useShareEntry();\n  const [chips, setChips] = useState<ChipValue[]>([]);\n  const [isSharing, setIsSharing] = useState(false);\n  const [selectedPermission, setSelectedPermission] =\n    useState<PermissionSelectorItem>(PermissionSelectorItems[0]);\n  const allEmailsValid = chips.every(chip => !chip.invalid);\n  const [inputValue, setInputValue] = useState('');\n  const query = useNormalizedModels(\n    'normalized-models/user',\n    {perPage: 7, query: inputValue},\n    {enabled: share.suggest_emails},\n  );\n\n  // show user's email, instead of name in the chip\n  const displayWith = (chip: ChipValue) => chip.description || chip.name;\n\n  return (\n    <div className={className}>\n      <ChipField\n        value={chips}\n        onChange={setChips}\n        isAsync\n        isLoading={query.fetchStatus === 'fetching'}\n        inputValue={inputValue}\n        onInputValueChange={setInputValue}\n        suggestions={query.data?.results}\n        displayWith={displayWith}\n        validateWith={chip => {\n          const invalid = !isEmail(chip.description);\n          return {\n            ...chip,\n            invalid,\n            errorMessage: invalid\n              ? trans({message: 'Not a valid email'})\n              : undefined,\n          };\n        }}\n        placeholder={trans({message: 'Enter email addresses'})}\n        label={<Trans message=\"Invite people\" />}\n      >\n        {user => (\n          <Item\n            value={user.id}\n            startIcon={<Avatar circle src={user.image} alt=\"\" />}\n            description={user.description}\n          >\n            {user.name}\n          </Item>\n        )}\n      </ChipField>\n      <div className=\"mt-14 flex items-center justify-between gap-14\">\n        <PermissionSelector\n          onChange={setSelectedPermission}\n          value={selectedPermission}\n        />\n        {chips.length ? (\n          <Button\n            variant=\"flat\"\n            color=\"primary\"\n            size=\"sm\"\n            disabled={isSharing || !allEmailsValid}\n            onClick={() => {\n              setIsSharing(true);\n              shareEntry.mutate(\n                {\n                  emails: chips.map(c => displayWith(c)),\n                  permissions: selectedPermission.value,\n                  entryId: entry.id,\n                },\n                {\n                  onSuccess: () => {\n                    setChips([]);\n                  },\n                  onSettled: () => {\n                    setIsSharing(false);\n                  },\n                },\n              );\n            }}\n          >\n            <Trans message=\"Share\" />\n          </Button>\n        ) : null}\n      </div>\n      <MemberList className=\"mt-30\" entry={entry} />\n    </div>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {ShareableLink} from '../shareable-link';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {DriveQueryKeys} from '../../drive-query-keys';\nimport {apiClient} from '@common/http/query-client';\n\nexport interface FetchShareableLinkResponse extends BackendResponse {\n  link: ShareableLink | null;\n}\n\nexport function useEntryShareableLink(entryId: number) {\n  return useQuery({\n    queryKey: DriveQueryKeys.fetchEntryShareableLink(entryId!),\n    queryFn: () => fetchLinkByEntryId(entryId!),\n    enabled: !!entryId,\n  });\n}\n\nfunction fetchLinkByEntryId(\n  entryId: number,\n): Promise<FetchShareableLinkResponse> {\n  return apiClient\n    .get(`file-entries/${entryId}/shareable-link`, {\n      params: {loader: 'shareableLink'},\n    })\n    .then(response => response.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {FetchShareableLinkResponse} from './use-entry-shareable-link';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {DriveQueryKeys} from '../../drive-query-keys';\nimport {message} from '@common/i18n/message';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\ninterface DeleteLinkParams {\n  entryId: number;\n}\n\nfunction deleteShareableLink({\n  entryId,\n}: DeleteLinkParams): Promise<BackendResponse> {\n  return apiClient\n    .delete(`file-entries/${entryId}/shareable-link`)\n    .then(r => r.data);\n}\n\ninterface Payload {\n  entryId: number;\n}\nexport function useDeleteShareableLink() {\n  return useMutation({\n    mutationFn: ({entryId}: Payload) => deleteShareableLink({entryId}),\n    onSuccess: (response, {entryId}) => {\n      queryClient.setQueryData<FetchShareableLinkResponse>(\n        DriveQueryKeys.fetchEntryShareableLink(entryId),\n        {...response, link: null},\n      );\n    },\n    onError: err => showHttpErrorToast(err, message('Could not delete link')),\n  });\n}\n","export function randomString(length: number = 36) {\n  let random = '';\n  const possible =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n  for (let i = 0; i < length; i += 1) {\n    random += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return random;\n}\n","import useClipboard from 'react-use-clipboard';\nimport {useEntryShareableLink} from '../../shareable-link/queries/use-entry-shareable-link';\nimport {useCreateShareableLink} from '../../shareable-link/queries/create-shareable-link';\nimport {useDeleteShareableLink} from '../../shareable-link/queries/use-delete-shareable-link';\nimport {Button} from '@common/ui/buttons/button';\nimport {ShareableLink} from '../../shareable-link/shareable-link';\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport type {ShareDialogActivePanel} from '../share-dialog';\nimport {Switch} from '@common/ui/forms/toggle/switch';\nimport {randomString} from '@common/utils/string/random-string';\nimport {Trans} from '@common/i18n/trans';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {useActiveDialogEntry} from '../../drive-store';\nimport {DriveEntry} from '../../files/drive-entry';\nimport {useSettings} from '@common/core/settings/use-settings';\n\ninterface ShareableLinkPanelProps {\n  setActivePanel: (name: ShareDialogActivePanel) => void;\n  entry: DriveEntry;\n  focusInput?: boolean;\n}\nexport function ShareableLinkPanel({\n  setActivePanel,\n  entry,\n  focusInput,\n}: ShareableLinkPanelProps) {\n  const query = useEntryShareableLink(entry.id);\n  const linkExists = !!query.data?.link;\n  const createLink = useCreateShareableLink();\n  const deleteLink = useDeleteShareableLink();\n  const isLoading =\n    query.isLoading || createLink.isPending || deleteLink.isPending;\n  return (\n    <div>\n      <div className=\"mb-10\">\n        <Trans message=\"Share link\" />\n      </div>\n      <div className=\"flex items-center justify-between gap-14 px-2 pb-4\">\n        <Switch\n          checked={linkExists}\n          disabled={isLoading}\n          onChange={() => {\n            if (linkExists) {\n              deleteLink.mutate({entryId: entry.id});\n            } else {\n              createLink.mutate({entryId: entry.id});\n            }\n          }}\n        >\n          {linkExists ? (\n            <Trans message=\"Shareable link is created\" />\n          ) : (\n            <Trans message=\"Create shareable link\" />\n          )}\n        </Switch>\n        {linkExists && (\n          <Button\n            variant=\"link\"\n            color=\"primary\"\n            onClick={() => {\n              setActivePanel('linkSettings');\n            }}\n          >\n            <Trans message=\"Link settings\" />\n          </Button>\n        )}\n      </div>\n      <ShareableLinkInput autoFocus={focusInput} link={query.data?.link} />\n    </div>\n  );\n}\n\ninterface ShareableLinkInputProps {\n  link?: ShareableLink | null;\n  autoFocus?: boolean;\n}\nfunction ShareableLinkInput({link, autoFocus}: ShareableLinkInputProps) {\n  const {base_url} = useSettings();\n  const {trans} = useTrans();\n  const entry = useActiveDialogEntry();\n  const hash = link?.hash || entry?.hash || randomString();\n  const linkUrl = `${base_url}/drive/s/${hash}`;\n  const [isCopied, setCopied] = useClipboard(linkUrl, {\n    successDuration: 1000,\n  });\n  return (\n    <TextField\n      autoFocus={autoFocus}\n      disabled={!link}\n      className=\"mt-10\"\n      readOnly\n      value={linkUrl}\n      aria-label={trans({message: 'Shareable link'})}\n      onFocus={e => {\n        (e.target as HTMLInputElement).select();\n      }}\n      endAppend={\n        <Button\n          className=\"min-w-100\"\n          variant=\"flat\"\n          color=\"primary\"\n          onClick={setCopied}\n        >\n          {isCopied ? <Trans message=\"Copied!\" /> : <Trans message=\"Copy\" />}\n        </Button>\n      }\n    />\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {FetchShareableLinkResponse} from './use-entry-shareable-link';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {DriveQueryKeys} from '../../drive-query-keys';\n\nexport interface UpdateShareableLinkPayload {\n  allowEdit: boolean;\n  allowDownload: boolean;\n  expiresAt: string;\n  password: string;\n  entryId: number;\n}\n\nfunction updateShareableLink({\n  entryId,\n  ...payload\n}: UpdateShareableLinkPayload): Promise<FetchShareableLinkResponse> {\n  return apiClient\n    .put(`file-entries/${entryId}/shareable-link`, payload)\n    .then(response => response.data);\n}\n\nexport function useUpdateShareableLink(\n  form: UseFormReturn<UpdateShareableLinkPayload>,\n) {\n  return useMutation({\n    mutationFn: (payload: UpdateShareableLinkPayload) =>\n      updateShareableLink(payload),\n    onSuccess: (data, {entryId}) => {\n      queryClient.setQueryData<FetchShareableLinkResponse>(\n        DriveQueryKeys.fetchEntryShareableLink(entryId),\n        data,\n      );\n    },\n    onError: r => onFormQueryError(r, form),\n  });\n}\n","import {useForm} from 'react-hook-form';\nimport {Fragment, ReactElement, useState} from 'react';\nimport clsx from 'clsx';\nimport {m} from 'framer-motion';\nimport {getLocalTimeZone, now} from '@internationalized/date';\nimport {Button} from '@common/ui/buttons/button';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport type {ShareDialogActivePanel} from '../share-dialog';\nimport {useEntryShareableLink} from '../../shareable-link/queries/use-entry-shareable-link';\nimport {Form} from '@common/ui/forms/form';\nimport {\n  UpdateShareableLinkPayload,\n  useUpdateShareableLink,\n} from '../../shareable-link/queries/use-update-shareable-link';\nimport {FormSwitch, Switch} from '@common/ui/forms/toggle/switch';\nimport {toast} from '@common/ui/toast/toast';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {FormDatePicker} from '@common/ui/forms/input-field/date/date-picker/date-picker';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {Trans} from '@common/i18n/trans';\nimport {message} from '@common/i18n/message';\nimport {FileEntry} from '@common/uploads/file-entry';\n\ninterface LinkSettingsDialogProps {\n  className?: string;\n  setActivePanel: (name: ShareDialogActivePanel) => void;\n  entry: FileEntry;\n}\nexport function LinkSettingsDialog({\n  className,\n  setActivePanel,\n  entry,\n}: LinkSettingsDialogProps) {\n  const {formId} = useDialogContext();\n  const {data} = useEntryShareableLink(entry.id);\n  const link = data?.link;\n  const form = useForm<UpdateShareableLinkPayload>({\n    defaultValues: {\n      allowDownload: link?.allow_download,\n      allowEdit: link?.allow_edit,\n      expiresAt: link?.expires_at,\n      entryId: entry.id,\n    },\n  });\n  const updateLink = useUpdateShareableLink(form);\n\n  return (\n    <Fragment>\n      <DialogHeader\n        onDismiss={() => {\n          setActivePanel('main');\n        }}\n      >\n        <Trans message=\"Shareable Link Settings\" />\n      </DialogHeader>\n      <DialogBody>\n        <m.div\n          key=\"link-settings-content\"\n          className=\"min-h-[335px]\"\n          animate={{opacity: 1, y: 0}}\n          initial={{opacity: 0, y: 20}}\n          exit={{opacity: 0, y: -20}}\n          transition={{duration: 0.1}}\n        >\n          <Form\n            id={formId}\n            className={className}\n            form={form}\n            onSubmit={value => {\n              updateLink.mutate(value, {\n                onSuccess: () => {\n                  setActivePanel('main');\n                  toast(message('Link settings saved'));\n                },\n              });\n            }}\n          >\n            <LinkExpirationOption showField={!!link?.expires_at} />\n            <LinkPasswordOption showField={!!link?.password} />\n            <LinkOption>\n              <Trans message=\"Allow download\" />\n              <FormSwitch name=\"allowDownload\">\n                <Trans message=\"Users with link can download this item\" />\n              </FormSwitch>\n            </LinkOption>\n            <LinkOption showBorder={false}>\n              <Trans message=\"Allow import\" />\n              <FormSwitch name=\"allowEdit\">\n                <Trans message=\"Users with link can import this item into their own drive\" />\n              </FormSwitch>\n            </LinkOption>\n          </Form>\n        </m.div>\n      </DialogBody>\n      <DialogFooter>\n        <Button\n          type=\"button\"\n          onClick={() => {\n            setActivePanel('main');\n          }}\n        >\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          type=\"submit\"\n          form={formId}\n          variant=\"flat\"\n          color=\"primary\"\n          disabled={updateLink.isPending}\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Fragment>\n  );\n}\n\nconst minDate = now(getLocalTimeZone());\n\ninterface LinkExpirationOptionProps {\n  showField: boolean;\n}\nfunction LinkExpirationOption({\n  showField: showFieldDefault,\n}: LinkExpirationOptionProps) {\n  const {trans} = useTrans();\n  const [showField, setShowField] = useState(showFieldDefault);\n  return (\n    <LinkOption>\n      <Trans message=\"Link expiration\" />\n      <div>\n        <Switch\n          checked={showField}\n          onChange={e => {\n            setShowField(e.target.checked);\n          }}\n        >\n          <Trans message=\"Link is valid until\" />\n        </Switch>\n        {showField && (\n          <FormDatePicker\n            min={minDate}\n            name=\"expiresAt\"\n            granularity=\"minute\"\n            className=\"mt-20\"\n            aria-label={trans({\n              message: 'Link expiration date and time',\n            })}\n          />\n        )}\n      </div>\n    </LinkOption>\n  );\n}\n\ninterface LinkPasswordOptionProps {\n  showField: boolean;\n}\nfunction LinkPasswordOption({\n  showField: showFieldDefault,\n}: LinkPasswordOptionProps) {\n  const {trans} = useTrans();\n  const [showField, setShowField] = useState(showFieldDefault);\n  return (\n    <LinkOption>\n      <Trans message=\"Password protect\" />\n      <div>\n        <Switch\n          checked={showField}\n          onChange={e => {\n            setShowField(e.target.checked);\n          }}\n        >\n          <Trans message=\"Users will need to enter password in order to view this link\" />\n        </Switch>\n        {showField && (\n          <FormTextField\n            type=\"password\"\n            autoFocus\n            name=\"password\"\n            className=\"mt-20\"\n            aria-label={trans({message: 'Link password'})}\n            description={\n              <Trans message=\"Password will not be requested when viewing the link as file owner.\" />\n            }\n            placeholder={trans({\n              message: 'Enter new password...',\n            })}\n          />\n        )}\n      </div>\n    </LinkOption>\n  );\n}\n\ninterface LinkOptionProps {\n  children: [ReactElement, ReactElement];\n  showBorder?: boolean;\n}\nfunction LinkOption({children, showBorder = true}: LinkOptionProps) {\n  const [title, content] = children;\n  return (\n    <div className={clsx(showBorder && 'mb-20 border-b pb-20')}>\n      <div className=\"mb-8 text-sm font-medium\">{title}</div>\n      {content}\n    </div>\n  );\n}\n","import {Fragment, useState} from 'react';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {SharePanel} from './share-panel';\nimport {ShareableLinkPanel} from './link-panel/shareable-link-panel';\nimport {LinkSettingsDialog} from './link-panel/link-settings-dialog';\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {Trans} from '@common/i18n/trans';\nimport {DriveEntry} from '../files/drive-entry';\nimport {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {DriveQueryKeys} from '../drive-query-keys';\n\nexport type ShareDialogActivePanel = 'main' | 'linkSettings';\n\ninterface ShareDialogProps {\n  entry: DriveEntry;\n  focusLinkInput?: boolean;\n}\nexport function ShareDialog({\n  entry: initialEntry,\n  focusLinkInput,\n}: ShareDialogProps) {\n  const {\n    data: {fileEntry},\n  } = useQuery({\n    queryKey: DriveQueryKeys.fetchFileEntry(initialEntry.id),\n    queryFn: () =>\n      apiClient\n        .get(`drive/file-entries/${initialEntry.id}/model`)\n        .then(response => response.data as {fileEntry: DriveEntry}),\n    initialData: {fileEntry: initialEntry},\n  });\n\n  const [activePanel, setActivePanel] =\n    useState<ShareDialogActivePanel>('main');\n\n  return (\n    <Dialog size=\"lg\">\n      <AnimatePresence initial={false} mode=\"wait\">\n        {activePanel === 'linkSettings' ? (\n          <LinkSettingsDialog\n            key=\"one\"\n            setActivePanel={setActivePanel}\n            entry={fileEntry}\n          />\n        ) : (\n          <MainDialog\n            key=\"two\"\n            setActivePanel={setActivePanel}\n            entry={fileEntry}\n            focusLinkInput={focusLinkInput}\n          />\n        )}\n      </AnimatePresence>\n    </Dialog>\n  );\n}\n\ninterface MainDialogProps {\n  setActivePanel: (name: ShareDialogActivePanel) => void;\n  entry: DriveEntry;\n  focusLinkInput?: boolean;\n}\nfunction MainDialog({setActivePanel, entry, focusLinkInput}: MainDialogProps) {\n  return (\n    <Fragment>\n      <DialogHeader>\n        <Trans message=\"Share ‘:name’\" values={{name: entry.name}} />\n      </DialogHeader>\n      <DialogBody className=\"relative\">\n        <m.div\n          key=\"share-content\"\n          animate={{opacity: 1, y: 0}}\n          initial={{opacity: 0, y: 20}}\n          exit={{opacity: 0, y: -20}}\n          transition={{duration: 0.1}}\n        >\n          <SharePanel className=\"mb-30 border-b pb-30\" entry={entry} />\n          <ShareableLinkPanel\n            setActivePanel={setActivePanel}\n            entry={entry}\n            focusInput={!!focusLinkInput}\n          />\n        </m.div>\n      </DialogBody>\n    </Fragment>\n  );\n}\n","import React from 'react';\nimport {SearchIcon} from '@common/icons/material/Search';\nimport {ComboBox} from '@common/ui/forms/combobox/combobox';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {PartialFolder} from '../../utils/can-move-entries-into';\n\ninterface SearchComboBoxProps {\n  allFolders: PartialFolder[];\n  onFolderSelected: (folder: PartialFolder) => void;\n}\nexport function MoveEntriesDialogSearch({\n  allFolders,\n  onFolderSelected,\n}: SearchComboBoxProps) {\n  const {trans} = useTrans();\n  const searchLabel = trans({message: 'Search folders'});\n  return (\n    <ComboBox\n      size=\"sm\"\n      maxItems={10}\n      placeholder={searchLabel}\n      aria-label={searchLabel}\n      className=\"pt-20\"\n      endAdornmentIcon={<SearchIcon />}\n      items={allFolders}\n      clearInputOnItemSelection\n      onItemSelected={value => {\n        const folderId = parseInt(value as string);\n        const folder = allFolders.find(f => f.id === folderId);\n        if (folder) {\n          onFolderSelected(folder);\n        }\n      }}\n    >\n      {item => (\n        <Item key={item.id} value={item.id}>\n          {item.name}\n        </Item>\n      )}\n    </ComboBox>\n  );\n}\n","import React from 'react';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {ArrowBackIcon} from '@common/icons/material/ArrowBack';\nimport {Breadcrumb} from '@common/ui/breadcrumbs/breadcrumb';\nimport {FolderIcon} from '@common/icons/material/Folder';\nimport {BreadcrumbItem} from '@common/ui/breadcrumbs/breadcrumb-item';\nimport {PartialFolder} from '../../utils/can-move-entries-into';\n\ninterface FolderBreadCrumbsProps {\n  selectedFolder: PartialFolder;\n  allFolders: PartialFolder[];\n  rootFolder: PartialFolder;\n  onFolderSelected: (folder: PartialFolder) => void;\n}\nexport function MoveEntriesDialogBreadcrumbs({\n  selectedFolder,\n  allFolders,\n  rootFolder,\n  onFolderSelected,\n}: FolderBreadCrumbsProps) {\n  const path: PartialFolder[] = selectedFolder.path\n    .split('/')\n    .map(part => {\n      const folderId = parseInt(part);\n      return allFolders.find(folder => folderId === folder.id);\n    })\n    .filter(f => !!f) as PartialFolder[];\n  const fullPath: PartialFolder[] = [rootFolder, ...path];\n\n  const previous = path[path.length - 2];\n\n  return (\n    <div className=\"flex items-center gap-6 border-b pb-10\">\n      <IconButton\n        className=\"flex-shrink-0\"\n        variant=\"outline\"\n        size=\"xs\"\n        disabled={!previous && !selectedFolder.id}\n        onClick={() => {\n          onFolderSelected(previous || rootFolder);\n        }}\n      >\n        <ArrowBackIcon />\n      </IconButton>\n      <Breadcrumb size=\"sm\" className=\"flex-auto\">\n        {fullPath.map(item => {\n          return (\n            <BreadcrumbItem\n              onSelected={() => {\n                onFolderSelected(item);\n              }}\n              key={item.id || 'root'}\n              className=\"flex items-center gap-8\"\n            >\n              {!item.id && <FolderIcon className=\"icon-sm\" />}\n              {item.name}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </div>\n  );\n}\n","export default \"__VITE_ASSET__b64d6dd2__\"","import React, {useMemo} from 'react';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {SvgImage} from '@common/ui/images/svg-image/svg-image';\nimport {FileTypeIcon} from '@common/uploads/file-type-icon/file-type-icon';\nimport {ChevronRightIcon} from '@common/icons/material/ChevronRight';\nimport {Trans} from '@common/i18n/trans';\nimport {List, ListItem} from '@common/ui/list/list';\nimport myFilesSvg from './my-files.svg';\nimport {PartialFolder} from '../../utils/can-move-entries-into';\n\ninterface FolderListProps {\n  selectedFolder: PartialFolder;\n  allFolders: PartialFolder[];\n  onFolderSelected: (folder: PartialFolder) => void;\n}\n\nexport function MoveEntriesDialogFolderList(props: FolderListProps) {\n  const {onFolderSelected, selectedFolder, allFolders} = props;\n\n  const subFolders = useMemo(() => {\n    const parentId = selectedFolder.id || null;\n    return allFolders.filter(f => f.parent_id === parentId);\n  }, [selectedFolder.id, allFolders]);\n\n  if (!subFolders.length) {\n    return (\n      <IllustratedMessage\n        size=\"xs\"\n        className=\"pt-64 pb-20 min-h-288\"\n        image={<SvgImage src={myFilesSvg} />}\n        title={\n          <Trans\n            message={`There are no subfolders in \":folder\"`}\n            values={{folder: selectedFolder.name}}\n          />\n        }\n      />\n    );\n  }\n\n  return (\n    <List className=\"h-288 overflow-y-auto\">\n      {subFolders.map(folder => {\n        return (\n          <ListItem\n            className=\"border-b min-h-48\"\n            key={folder.id}\n            onSelected={() => {\n              onFolderSelected(folder);\n            }}\n            startIcon={<FileTypeIcon type=\"folder\" />}\n            endIcon={<ChevronRightIcon size=\"md\" />}\n          >\n            {folder.name}\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n}\n","import React, {useState} from 'react';\nimport {Button} from '@common/ui/buttons/button';\nimport {useFolders} from '../../queries/use-folders';\nimport {useMoveEntries} from '../../queries/use-move-entries';\nimport {NewFolderDialog} from '../new-folder-dialog';\nimport {CreateNewFolderIcon} from '@common/icons/material/CreateNewFolder';\nimport {MoveEntriesDialogSearch} from './move-entries-dialog-search';\nimport {MoveEntriesDialogBreadcrumbs} from './move-entries-dialog-breadcrumbs';\nimport {MoveEntriesDialogFolderList} from './move-entries-dialog-folder-list';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {Trans} from '@common/i18n/trans';\nimport {RootFolderPage} from '../../../drive-page/drive-page';\nimport {DriveEntry} from '../../drive-entry';\nimport {useDriveStore} from '../../../drive-store';\nimport {\n  canMoveEntriesInto,\n  PartialFolder,\n} from '../../utils/can-move-entries-into';\n\ninterface MoveEntriesDialogProps {\n  entries: DriveEntry[];\n}\nexport function MoveEntriesDialog({entries}: MoveEntriesDialogProps) {\n  const {data} = useFolders();\n  const allFolders = data?.folders || [];\n  const activePage = useDriveStore(s => s.activePage);\n  const [selectedFolder, setSelectedFolder] = useState<PartialFolder>(\n    activePage?.folder || RootFolderPage.folder,\n  );\n\n  return (\n    <Dialog size=\"lg\">\n      <DialogHeader>\n        <Trans\n          message=\"Move [one ‘:name‘|other :count items]\"\n          values={{\n            count: entries.length,\n            name: entries[0].name,\n          }}\n        />\n      </DialogHeader>\n      <DialogBody>\n        <div className=\"text-sm\">\n          <Trans message=\"Select a destination folder.\" />\n        </div>\n        <MoveEntriesDialogSearch\n          allFolders={allFolders}\n          onFolderSelected={setSelectedFolder}\n        />\n        <div className=\"mb-20 mt-40\">\n          <MoveEntriesDialogBreadcrumbs\n            selectedFolder={selectedFolder}\n            allFolders={allFolders}\n            rootFolder={RootFolderPage.folder}\n            onFolderSelected={setSelectedFolder}\n          />\n          <MoveEntriesDialogFolderList\n            selectedFolder={selectedFolder}\n            allFolders={allFolders}\n            onFolderSelected={setSelectedFolder}\n          />\n        </div>\n      </DialogBody>\n      <Footer\n        selectedFolder={selectedFolder}\n        setSelectedFolder={setSelectedFolder}\n        entries={entries}\n      />\n    </Dialog>\n  );\n}\n\ninterface FooterProps {\n  selectedFolder: PartialFolder;\n  setSelectedFolder: (folder: PartialFolder) => void;\n  entries: DriveEntry[];\n}\nfunction Footer({selectedFolder, setSelectedFolder, entries}: FooterProps) {\n  const {close} = useDialogContext();\n  const moveEntries = useMoveEntries();\n  return (\n    <DialogFooter\n      className=\"border-t\"\n      startAction={\n        <DialogTrigger\n          type=\"modal\"\n          onClose={folder => {\n            if (folder) {\n              setSelectedFolder(folder);\n            }\n          }}\n        >\n          <Button startIcon={<CreateNewFolderIcon />} variant=\"text\">\n            <Trans message=\"New Folder\" />\n          </Button>\n          <NewFolderDialog parentId={selectedFolder.id} />\n        </DialogTrigger>\n      }\n    >\n      <Button className=\"max-md:hidden\" variant=\"flat\" onClick={() => close()}>\n        <Trans message=\"Cancel\" />\n      </Button>\n      <Button\n        type=\"submit\"\n        variant=\"flat\"\n        color=\"primary\"\n        disabled={\n          !canMoveEntriesInto(entries, selectedFolder) || moveEntries.isPending\n        }\n        onClick={() => {\n          moveEntries.mutate(\n            {\n              destinationId: selectedFolder.id,\n              entryIds: entries.map(e => e.id),\n            },\n            {onSuccess: close},\n          );\n        }}\n      >\n        <Trans message=\"Move here\" />\n      </Button>\n    </DialogFooter>\n  );\n}\n","import {DriveEntry} from '../drive-entry';\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\nimport {Trans} from '@common/i18n/trans';\nimport {useDeleteEntries} from '../queries/use-delete-entries';\nimport {driveState} from '../../drive-store';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\n\ninterface DeleteEntriesForeverDialogProps {\n  entries: DriveEntry[];\n}\nexport function DeleteEntriesForeverDialog({\n  entries,\n}: DeleteEntriesForeverDialogProps) {\n  const deleteEntries = useDeleteEntries();\n  const {close} = useDialogContext();\n\n  const message =\n    entries.length === 1 ? (\n      <Trans\n        message=\"‘:name‘ will be deleted forever and you won't be able to restore it.\"\n        values={{name: entries[0].name}}\n      />\n    ) : (\n      <Trans\n        message=\":count items will be deleted forever and you won't be able to restore them.\"\n        values={{count: entries.length}}\n      />\n    );\n\n  return (\n    <ConfirmationDialog\n      isDanger\n      title={<Trans message=\"Delete forever?\" />}\n      body={message}\n      confirm={<Trans message=\"Delete forever\" />}\n      isLoading={deleteEntries.isPending}\n      onConfirm={() => {\n        deleteEntries.mutate(\n          {\n            entryIds: entries.map(e => e.id),\n            deleteForever: true,\n          },\n          {\n            onSuccess: () => {\n              close();\n              driveState().selectEntries([]);\n            },\n          },\n        );\n      }}\n    />\n  );\n}\n","import {DriveEntry} from '../drive-entry';\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\nimport {Trans} from '@common/i18n/trans';\nimport {driveState} from '../../drive-store';\nimport {useRestoreEntries} from '../queries/use-restore-entries';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\n\ninterface DeleteEntriesForeverDialogProps {\n  entries: DriveEntry[];\n}\nexport function BlockTrashFolderViewDialog({\n  entries,\n}: DeleteEntriesForeverDialogProps) {\n  const restoreEntries = useRestoreEntries();\n  const {close} = useDialogContext();\n\n  return (\n    <ConfirmationDialog\n      title={<Trans message=\"This folder is in your trash\" />}\n      body={<Trans message=\"To view this folder, restore it from the trash.\" />}\n      confirm={<Trans message=\"Restore\" />}\n      isLoading={restoreEntries.isPending}\n      onConfirm={() => {\n        restoreEntries.mutate(\n          {\n            entryIds: entries.map(e => e.id),\n          },\n          {\n            onSuccess: () => {\n              close();\n              driveState().selectEntries([]);\n            },\n          },\n        );\n      }}\n    />\n  );\n}\n","import React, {ReactElement} from 'react';\nimport {ActiveActionDialog, driveState, useDriveStore} from '../../drive-store';\nimport {RenameEntryDialog} from './rename-entry-dialog';\nimport {NewFolderDialog} from './new-folder-dialog';\nimport {EntryPreviewDialog} from './entry-preview-dialog';\nimport {ShareDialog} from '../../share-dialog/share-dialog';\nimport {MoveEntriesDialog} from './move-entries-dialog/move-entries-dialog';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {DeleteEntriesForeverDialog} from './delete-entries-forever-dialog';\nimport {BlockTrashFolderViewDialog} from './block-trash-folder-view-dialog';\n\nexport function DriveDialogsContainer() {\n  const activeDialog = useDriveStore(s => s.activeActionDialog);\n  const dialog = getDialog(activeDialog);\n\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      isOpen={!!dialog}\n      onClose={() => {\n        driveState().setActiveActionDialog(null);\n      }}\n    >\n      {dialog}\n    </DialogTrigger>\n  );\n}\n\nfunction getDialog(dialog?: ActiveActionDialog | null): ReactElement | null {\n  switch (dialog?.name) {\n    case 'rename':\n      return <RenameEntryDialog entries={dialog.entries} />;\n    case 'newFolder':\n      return <NewFolderDialog parentId={dialog.entries[0]?.id} />;\n    case 'preview':\n      return <EntryPreviewDialog selectedEntry={dialog.entries[0]} />;\n    case 'share':\n      return <ShareDialog entry={dialog.entries[0]} />;\n    case 'getLink':\n      return <ShareDialog entry={dialog.entries[0]} focusLinkInput />;\n    case 'moveTo':\n      return <MoveEntriesDialog entries={dialog.entries} />;\n    case 'confirmAndDeleteForever':\n      return <DeleteEntriesForeverDialog entries={dialog.entries} />;\n    case 'trashFolderBlock':\n      return <BlockTrashFolderViewDialog entries={dialog.entries} />;\n    default:\n      return null;\n  }\n}\n","import React, {useState} from 'react';\nimport {SearchIcon} from '@common/icons/material/Search';\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {SearchPage} from '../drive-page/drive-page';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {useDriveStore} from '../drive-store';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {useSearchParams} from 'react-router-dom';\nimport {IconButton} from '@common/ui/buttons/icon-button';\n\nexport function NavbarSearch() {\n  const {trans} = useTrans();\n  const navigate = useNavigate();\n  const activePage = useDriveStore(s => s.activePage);\n  const [searchParams] = useSearchParams();\n  const [inputValue, setInputValue] = useState(searchParams.get('query') || '');\n\n  return (\n    <form\n      className=\"max-w-620 flex-auto\"\n      onSubmit={e => {\n        e.preventDefault();\n        navigate(\n          {\n            pathname: SearchPage.path,\n            search: `?query=${inputValue}`,\n          },\n          {replace: true},\n        );\n      }}\n    >\n      <TextField\n        size=\"sm\"\n        background=\"bg\"\n        value={inputValue}\n        onChange={e => setInputValue(e.target.value)}\n        onFocus={() => {\n          if (activePage !== SearchPage) {\n            navigate(SearchPage.path);\n          }\n        }}\n        startAdornment={\n          <IconButton type=\"submit\">\n            <SearchIcon />\n          </IconButton>\n        }\n        className=\"max-w-620 flex-auto\"\n        placeholder={trans({message: 'Search'})}\n        aria-label={trans({message: 'Search files and folders'})}\n      />\n    </form>\n  );\n}\n","import {InteractableEvent} from '../interactable-event';\nimport {useEffect, useId, useRef} from 'react';\nimport {dragMonitors, DragSessionStatus} from './drag-state';\nimport {ConnectedDraggable} from './use-draggable';\n\nexport interface DragMonitor {\n  type: string;\n  onDragStart?: (e: InteractableEvent, dragTarget: ConnectedDraggable) => void;\n  onDragMove?: (e: InteractableEvent, dragTarget: ConnectedDraggable) => void;\n  onDragEnd?: (\n    e: InteractableEvent,\n    dragTarget: ConnectedDraggable,\n    status: DragSessionStatus\n  ) => void;\n}\n\nexport function useDragMonitor(monitor: DragMonitor) {\n  const monitorRef = useRef(monitor);\n  const id = useId();\n\n  useEffect(() => {\n    dragMonitors.set(id, monitorRef.current);\n    return () => {\n      dragMonitors.delete(id);\n    };\n  }, [id]);\n}\n","import {useDragMonitor} from '@common/ui/interactions/dnd/use-drag-monitor';\nimport React, {memo, useRef, useState} from 'react';\nimport {FileTypeIcon} from '@common/uploads/file-type-icon/file-type-icon';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {\n  DragSessionStatus,\n  droppables,\n} from '@common/ui/interactions/dnd/drag-state';\nimport {AnimatePresence, m} from 'framer-motion';\nimport clsx from 'clsx';\nimport {\n  isFolderTreeDragId,\n  makeFolderTreeDragId,\n} from '../layout/sidebar/folder-tree-drag-id';\nimport {InteractableEvent} from '@common/ui/interactions/interactable-event';\nimport {useDriveStore} from '../drive-store';\nimport {ConnectedDraggable} from '@common/ui/interactions/dnd/use-draggable';\n\ninterface Point {\n  x: number;\n  y: number;\n}\n\ninterface DragPreviewState {\n  entries?: FileEntry[];\n  e?: InteractableEvent;\n  status?: DragSessionStatus;\n  draggingTreeItem?: boolean;\n}\n\nexport function EntryDragPreview() {\n  const ref = useRef<HTMLDivElement>(null);\n  const [points, setPoints] = useState<{start?: Point; end?: Point}>();\n  const [state, setState] = useState<DragPreviewState>({});\n\n  useDragMonitor({\n    type: 'fileEntry',\n    onDragStart: (e, dragTarget) => {\n      const target = dragTarget as ConnectedDraggable<FileEntry[]>;\n      if (target) {\n        setState({\n          entries: target.getData(),\n          e,\n          draggingTreeItem: isFolderTreeDragId(target.id as number),\n        });\n        setPoints({start: e});\n      }\n    },\n    onDragMove: e => {\n      setState(prev => {\n        return {...prev, e: e};\n      });\n      setPoints(prev => {\n        return {...prev, end: e};\n      });\n    },\n    onDragEnd: (e, dragTarget, status) => {\n      setState({status});\n    },\n  });\n\n  let preview = null;\n\n  if (state.entries && state.e) {\n    preview = (\n      <div\n        ref={ref}\n        style={\n          state.e\n            ? {\n                transform: `translate(${state.e.x}px, ${state.e.y}px)`,\n                width: `${state.e.rect.width}px`,\n              }\n            : undefined\n        }\n        className=\"fixed isolate left-0 top-0 pointer-events-none\"\n      >\n        {state.entries.map((item, index) => (\n          <EntryPreview\n            key={item.id}\n            index={index}\n            entry={item}\n            points={points}\n            state={state}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  return <AnimatePresence custom={state.status}>{preview}</AnimatePresence>;\n}\n\ninterface EntryPreviewProps {\n  entry: FileEntry;\n  index: number;\n  points?: {start?: Point; end?: Point};\n  state: DragPreviewState;\n}\nconst EntryPreview = memo(\n  ({entry, points, index, state}: EntryPreviewProps) => {\n    const viewMode = useDriveStore(s => s.viewMode);\n    const droppableId = state.draggingTreeItem\n      ? makeFolderTreeDragId(entry)\n      : entry.id;\n    const target = droppables.get(droppableId);\n    if (!target?.rect || !points?.start) return null;\n    const rect = target.rect;\n    const itemCount = state.entries?.length || 0;\n\n    const exitVariant = (status: DragSessionStatus) => {\n      if (status === 'dropSuccess') {\n        return {\n          x: 0,\n          y: 0,\n          opacity: 0,\n          transition: {duration: 0.1, delay: 0},\n        };\n      }\n      return {\n        x: rect.left - (points.end?.x || 0),\n        y: rect.top - (points.end?.y || 0),\n        width: `${state.e?.rect.width}px`,\n      };\n    };\n\n    return (\n      <m.div\n        key={entry.id}\n        transition={{delay: 0.01 * index, bounce: 0, duration: 0.2}}\n        initial={{\n          x: rect.left - points.start.x,\n          y: rect.top - points.start.y,\n          width: `${state.e?.rect.width}px`,\n        }}\n        animate={{\n          x: 0,\n          y: 0,\n          // in list/table mode limit preview size to 288px, but start and end the animation\n          // at full width, so it returns to original position at original size smoothly\n          width: viewMode === 'list' ? 288 : undefined,\n        }}\n        exit={exitVariant as any}\n        style={{\n          // in grid mode simply use the width of the draggable item\n          width: viewMode === 'grid' ? `${state.e?.rect.width}px` : undefined,\n          height: `${state.e?.rect.height}px`,\n        }}\n        className={clsx(\n          'absolute bg-paper whitespace-nowrap rounded border border-primary-light max-h-48',\n          index < 2 && 'shadow',\n          index === 0 && 'z-10 top-0 left-0',\n          index > 0 && 'top-6 left-6'\n        )}\n      >\n        {itemCount > 1 && index === 0 && <EntryCount count={itemCount} />}\n        <div className=\"text-sm h-full flex justify-center items-center px-16 gap-10 bg-primary-light/20 overflow-hidden\">\n          <FileTypeIcon type={entry.type} />\n          <div className=\"flex-auto text-ellipsis overflow-hidden\">\n            {entry.name}\n          </div>\n        </div>\n      </m.div>\n    );\n  }\n);\n\ninterface EntryCountProps {\n  count: number;\n}\nconst EntryCount = memo(({count}: EntryCountProps) => {\n  return (\n    <m.div\n      key=\"entryCount\"\n      initial={{opacity: 0}}\n      animate={{opacity: 1, transition: {delay: 0.1}}}\n      exit={{opacity: 0}}\n      transition={{duration: 0.1}}\n      className=\"absolute -top-6 shadow-lg -right-6 z-30 rounded-full bg-danger text-white w-20 h-20 flex items-center justify-center text-sm font-bold z-10\"\n    >\n      {count}\n    </m.div>\n  );\n});\n","import {PageBreadcrumbs} from '../page-breadcrumbs';\nimport {DashboardContentHeader} from '@common/ui/layout/dashboard-content-header';\nimport React, {useContext} from 'react';\nimport {driveState, useDriveStore} from '../drive-store';\nimport {Trans} from '@common/i18n/trans';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {ViewListIcon} from '@common/icons/material/ViewList';\nimport {ViewModuleIcon} from '@common/icons/material/ViewModule';\nimport {DashboardLayoutContext} from '@common/ui/layout/dashboard-layout-context';\nimport {InfoIcon} from '@common/icons/material/Info';\nimport {DriveSortButton} from './sorting/drive-sort-button';\n\nexport function DriveContentHeader() {\n  const {isMobileMode} = useContext(DashboardLayoutContext);\n  const activePage = useDriveStore(s => s.activePage);\n  return (\n    <DashboardContentHeader className=\"px-8 md:px-26 py-4 flex items-center gap-20 border-b h-60\">\n      {isMobileMode ? (\n        <DriveSortButton isDisabled={activePage?.disableSort} />\n      ) : (\n        <PageBreadcrumbs />\n      )}\n      <div className=\"text-muted ml-auto flex-shrink-0\">\n        <ToggleViewModeButton />\n        <ToggleDetailsButton />\n      </div>\n    </DashboardContentHeader>\n  );\n}\n\nfunction ToggleViewModeButton() {\n  const viewMode = useDriveStore(s => s.viewMode);\n  const tooltip =\n    viewMode === 'grid' ? (\n      <Trans message=\"List view\" />\n    ) : (\n      <Trans message=\"Grid view\" />\n    );\n  return (\n    <Tooltip label={tooltip}>\n      <IconButton\n        size=\"md\"\n        onClick={() => {\n          driveState().setViewMode(\n            driveState().viewMode === 'list' ? 'grid' : 'list'\n          );\n        }}\n      >\n        {viewMode === 'list' ? <ViewListIcon /> : <ViewModuleIcon />}\n      </IconButton>\n    </Tooltip>\n  );\n}\n\nfunction ToggleDetailsButton() {\n  const {rightSidenavStatus: status, setRightSidenavStatus} = useContext(\n    DashboardLayoutContext\n  );\n  const tooltip = status ? (\n    <Trans message=\"Hide details\" />\n  ) : (\n    <Trans message=\"Show details\" />\n  );\n  return (\n    <Tooltip label={tooltip}>\n      <IconButton\n        size=\"md\"\n        color={status === 'open' ? 'primary' : null}\n        onClick={() => {\n          setRightSidenavStatus(status === 'open' ? 'closed' : 'open');\n        }}\n      >\n        <InfoIcon />\n      </IconButton>\n    </Tooltip>\n  );\n}\n","import React, {Fragment, useContext, useEffect, useMemo} from 'react';\nimport {Link, useLocation, useParams} from 'react-router-dom';\nimport {Sidebar} from './sidebar/sidebar';\nimport {FileView} from '../file-view/file-view';\nimport {UploadQueue} from '../uploading/upload-queue';\nimport {driveState, useDriveStore} from '../drive-store';\nimport {\n  DRIVE_PAGES,\n  makePartialFolderPage,\n  SearchPage,\n} from '../drive-page/drive-page';\nimport {DetailsSidebar} from '../details-sidebar/details-sidebar';\nimport {DriveDialogsContainer} from '../files/dialogs/drive-dialogs-container';\nimport {NavbarSearch} from '../search/navbar-search';\nimport {useActiveWorkspaceId} from '@common/workspace/active-workspace-id-context';\nimport {FileEntryUrlsContext} from '@common/uploads/hooks/file-entry-urls';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {EntryDragPreview} from '../file-view/entry-drag-preview';\nimport {DashboardLayout} from '@common/ui/layout/dashboard-layout';\nimport {DashboardContent} from '@common/ui/layout/dashboard-content';\nimport {DashboardNavbar} from '@common/ui/layout/dashboard-navbar';\nimport {DriveContentHeader} from './drive-content-header';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {SearchIcon} from '@common/icons/material/Search';\nimport {DashboardLayoutContext} from '@common/ui/layout/dashboard-layout-context';\nimport {CloseIcon} from '@common/icons/material/Close';\nimport {Trans} from '@common/i18n/trans';\nimport {EntryActionList} from '../entry-actions/entry-action-list';\nimport {CreateNewButton} from './create-new-button';\nimport {StaticPageTitle} from '@common/seo/static-page-title';\nimport {DashboardSidenav} from '@common/ui/layout/dashboard-sidenav';\n\nexport function DriveLayout() {\n  const {pathname} = useLocation();\n  const {hash} = useParams();\n  const {workspaceId} = useActiveWorkspaceId();\n  const activePage = useDriveStore(s => s.activePage);\n\n  useEffect(() => {\n    driveState().setActivePage(\n      DRIVE_PAGES.find(p => p.path === pathname) ||\n        makePartialFolderPage(hash!),\n    );\n  }, [pathname, hash]);\n\n  const urlsContextValue = useMemo(() => {\n    return {workspaceId};\n  }, [workspaceId]);\n\n  useEffect(() => {\n    return () => {\n      driveState().reset();\n    };\n  }, []);\n\n  return (\n    <Fragment>\n      {activePage?.label && (\n        <StaticPageTitle>\n          <Trans\n            message={\n              typeof activePage.label === 'string'\n                ? activePage.label\n                : activePage.label.message\n            }\n          />\n        </StaticPageTitle>\n      )}\n      <FileUploadProvider>\n        <FileEntryUrlsContext.Provider value={urlsContextValue}>\n          <DashboardLayout\n            name=\"drive\"\n            onDragOver={e => {\n              e.preventDefault();\n              e.stopPropagation();\n              e.dataTransfer.dropEffect = 'none';\n            }}\n            onDrop={e => {\n              // prevent files from desktop from blowing away the document\n              e.preventDefault();\n            }}\n          >\n            <Navbar />\n            <DashboardSidenav position=\"left\" size=\"md\">\n              <Sidebar />\n            </DashboardSidenav>\n            <DriveContentHeader />\n            <DashboardContent>\n              <FileView />\n            </DashboardContent>\n            <UploadQueue />\n            <DriveDialogsContainer />\n            <DashboardSidenav position=\"right\" size=\"lg\">\n              <DetailsSidebar />\n            </DashboardSidenav>\n          </DashboardLayout>\n        </FileEntryUrlsContext.Provider>\n        <EntryDragPreview />\n      </FileUploadProvider>\n    </Fragment>\n  );\n}\n\nfunction Navbar() {\n  const {isMobileMode} = useContext(DashboardLayoutContext);\n  const activePage = useDriveStore(s => s.activePage);\n\n  const children = isMobileMode ? null : <NavbarSearch />;\n  const searchButton = (\n    <IconButton elementType={Link} to={SearchPage.path}>\n      <SearchIcon />\n    </IconButton>\n  );\n\n  const mobileRightChildren = (\n    <Fragment>\n      {activePage !== SearchPage && searchButton}\n      <CreateNewButton isCompact />\n    </Fragment>\n  );\n\n  return (\n    <Fragment>\n      <DashboardNavbar\n        rightChildren={isMobileMode && mobileRightChildren}\n        menuPosition=\"drive-navbar\"\n      >\n        {children}\n      </DashboardNavbar>\n      {isMobileMode && <FloatingActionList />}\n    </Fragment>\n  );\n}\n\nfunction FloatingActionList() {\n  const entriesSelected = useDriveStore(s => s.selectedEntries.size);\n  if (!entriesSelected) return null;\n  return (\n    <div className=\"fixed right-0 top-0 z-10 flex h-54 w-full items-center justify-center gap-10 rounded bg-primary px-6 text-on-primary shadow-xl\">\n      <IconButton\n        onClick={() => {\n          driveState().selectEntries([]);\n        }}\n      >\n        <CloseIcon />\n      </IconButton>\n      <Trans message=\":count selected\" values={{count: entriesSelected}} />\n      <EntryActionList className=\"ml-auto\" />\n    </div>\n  );\n}\n","import {RouteObject, useRoutes} from 'react-router-dom';\nimport React from 'react';\nimport {ShareableLinkPage} from './shareable-link/shareable-link-page/shareable-link-page';\nimport {DriveLayout} from './layout/drive-layout';\nimport {AuthRoute} from '@common/auth/guards/auth-route';\nimport {NotFoundPage} from '@common/ui/not-found-page/not-found-page';\n\nconst DriveRouteConfig: RouteObject[] = [\n  {\n    path: '/',\n    element: (\n      <AuthRoute>\n        <DriveLayout />\n      </AuthRoute>\n    ),\n  },\n  {\n    path: '/folders/:hash',\n    element: (\n      <AuthRoute>\n        <DriveLayout />\n      </AuthRoute>\n    ),\n  },\n  {\n    path: '/shares',\n    element: (\n      <AuthRoute>\n        <DriveLayout />\n      </AuthRoute>\n    ),\n  },\n  {\n    path: '/recent',\n    element: (\n      <AuthRoute>\n        <DriveLayout />\n      </AuthRoute>\n    ),\n  },\n  {\n    path: '/starred',\n    element: (\n      <AuthRoute>\n        <DriveLayout />\n      </AuthRoute>\n    ),\n  },\n  {\n    path: '/trash',\n    element: (\n      <AuthRoute>\n        <DriveLayout />\n      </AuthRoute>\n    ),\n  },\n  {\n    path: '/search',\n    element: (\n      <AuthRoute>\n        <DriveLayout />\n      </AuthRoute>\n    ),\n  },\n  {path: 's/:hash', element: <ShareableLinkPage />},\n  {path: '*', element: <NotFoundPage />},\n];\n\nexport default function DriveRoutes() {\n  return useRoutes(DriveRouteConfig);\n}\n"],"names":["InfiniteQueryObserver","QueryObserver","client","options","notifyOptions","infiniteQueryBehavior","query","state","result","isFetching","isRefetching","isFetchingNextPage","_b","_a","isFetchingPreviousPage","_d","_c","hasNextPage","hasPreviousPage","useInfiniteQuery","queryClient","useBaseQuery","DriveQueryKeys","params","key","hash","entryId","id","invalidateEntryQueries","useLinkPageStore","create","immer","set","getFromLocalStorage","value","mode","setInLocalStorage","linkPageState","useShareableLinkPage","useParams","orderBy","orderDir","s","order","isPasswordProtected","password","pageParam","response","fetchLinkByHash","data","getBootstrapData","lastResponse","currentPage","lastPage","keepPreviousData","p","page","apiClient","checkLinkPassword","linkHash","r","useCheckLinkPassword","useMutation","props","err","showHttpErrorToast","message","importIntoOwnDrive","linkId","useImportIntoOwnDrive","toast","ShareableLinkPageActionButtons","link","user","isLoggedIn","useAuth","downloadUrl","useFileEntryUrls","alreadyImported","u","jsx","DownloadButton","jsxs","MenuTrigger","downloadFileFromUrl","IconButton","KeyboardArrowDownIcon","Menu","MenuItem","FileDownloadIcon","Trans","ImportExportIcon","Fragment","Tooltip","Button","ShareableLinkNavbar","isMobile","useIsMobileMediaQuery","Navbar","FileTypeIcon","PasswordPage","trans","useTrans","fieldLabel","setPassword","useState","checkPassword","passwordIsInvalid","SvgImage","secureFilesSvg","e","TextField","BaseFileGridItem","React","entry","className","isSelected","isMobileMode","footerAdornment","domProps","ref","clsx","FileThumbnail","Footer","adornment","FolderPreviewFileGrid","entries","onEntrySelected","index","stableArray","enableMapSet","initialState","useDriveStore","get","isOpen","activePageId","storedDescriptor","name","current","merge","driveState","useActiveDialogEntry","dialog","createShareableLink","useCreateShareableLink","addStarToEntries","entryIds","useAddStarToEntries","payload","removeStarFromEntries","useRemoveStarFromEntries","duplicateEntries","useDuplicateEntries","addFilesSvg","timeManagement","fileSearching","throwAwaySvg","lovingItSvg","shareSvg","defaultSortDescriptor","makeFolderPage","folder","makePartialFolderPage","getPathForFolder","rootFolder","RootFolderPage","RecentPage","SearchPage","isSearchingOrFiltering","SharesPage","TrashPage","StarredPage","DRIVE_PAGES","deleteEntries","useDeleteEntries","getLoaderMessage","emptyTrash","deleteForever","backendError","getAxiosErrorMessage","useUnshareEntries","unshareEntries","useRestoreEntries","restoreEntries","useEntryActions","preview","usePreviewAction","share","useShareAction","getLink","useGetLinkAction","addStar","useAddToStarredAction","removeStar","useRemoveFromStarred","moveTo","useMoveToAction","rename","useRenameAction","makeCopy","useMakeCopyAction","download","useDownloadEntriesAction","deleteAction","useDeleteEntriesAction","removeSharedEntries","useRemoveSharedEntriesAction","useRestoreEntriesAction","action","RemoveRedEyeIcon","activePage","PersonAddIcon","createLink","LinkIcon","starEntries","tag","StarIcon","StarOutlineIcon","DriveFileMoveIcon","DriveFileRenameOutlineIcon","ContentCopyIcon","DeleteIcon","RestoreIcon","useStorageSummary","useQuery","fetchStorageSummary","formatResponse","percentage","prettyBytes","EightMB","useDriveUploadQueue","uploadMultiple","useFileUploadStore","usage","uploads","useSettings","maxFileSize","allowedFileTypes","blockedFileTypes","useCallback","files","getActiveWorkspaceId","file","UploadedFile","sizeOfFiles","sum","currentlyUsing","availableSpace","useDrivePageActions","newFolder","useNewFolderAction","uploadFiles","useUploadFilesAction","uploadFolder","useUploadFolderAction","useEmptyTrashAction","CreateNewFolderIcon","FileUploadIcon","openUploadWindow","DriveFolderUploadIcon","DeleteForeverIcon","EntryActionMenuTrigger","children","PageMenu","EntriesMenu","actions","BaseMenu","createElement","formatFileSize","memoize","bytes","fileTableColumns","FileNameColumn","FormattedDate","ActionsColumn","isCollapsedMode","useContext","TableContext","sizeClassName","selectedRows","Checkbox","MoreVertIcon","mobileColumns","config","FolderPreviewFileTable","sortDescriptor","Table","item","buildFolderHash","folderHash","useNavigateToSubfolder","navigate","useNavigate","FolderPreviewFileView","pathname","useLocation","navigateToSubfolder","activePreviewIndex","setActivePreviewIndex","viewMode","sentinelRef","useRef","fetchNextPage","isPlaceholderData","useEffect","sentinelEl","observer","ProgressCircle","handlePreview","folderEntries","AdHost","AnimatePresence","m","opacityAnimation","DialogTrigger","FilePreviewDialog","DashboardContentHeader","useFolderPath","isEnabled","fetchFolderPath","FolderPreviewBreadcrumb","content","items","parent","Breadcrumb","BreadcrumbItem","AVAILABLE_SORTS","EntriesSortButton","descriptor","onChange","isDisabled","column","direction","sort","SortIcon","MenuSection","FolderPreviewHeader","activeSort","hasEntry","GridViewIcon","FolderPreview","isFetched","showEmptyMessage","DashboardLayout","DashboardNavbar","FileUploadProvider","DashboardContent","EmptyMessage","IllustratedMessage","ShareableLinkPageFilePreview","FilePreviewContainer","ShareableLinkPage","status","NotFoundPage","FileEntryUrlsContext","Meter","ProgressBarBase","StorageMeter","isLoading","label","StorageIcon","useCreateWorkspace","form","createWorkspace","WorkspaceQueryKeys","onFormQueryError","NewWorkspaceDialog","useForm","formId","close","useDialogContext","Dialog","DialogHeader","DialogBody","Form","FormTextField","DialogFooter","fetchWorkspaceWithMembers","workspaceId","useWorkspaceWithMembers","InviteMembers","other","useInviteMembers","ResendInvite","inviteId","useResendInvite","matcher","isEmail","string","ChangeRole","member","modelType","memberId","useChangeRole","removeMember","memberType","endpoint","useRemoveMember","setWorkspaceId","useActiveWorkspaceId","PersonalWorkspace","LeaveWorkspaceConfirmation","onConfirm","ConfirmationDialog","WorkspaceMembersDialog","workspace","Manager","can","usePermissions","members","shouldHideOtherMembers","InviteChipField","GroupIcon","MemberListItem","MemberDisplayNameAppend","MemberActions","authUser","permissions","authMember","mb","permission","selectedRole","setSelectedRole","changeRole","isOwner","isCurrentUser","roleSelector","RoleMenuTrigger","roleId","RemoveMemberButton","chips","setChips","allEmailsValid","chip","displayWith","inviteMembers","useValueLists","ChipField","invalid","c","type","isConfirmed","ExitToAppIcon","CloseIcon","RemoveMemberConfirmation","size","role","newValue","ArrowDropDownIcon","ResendInviteDialogTrigger","resendInvite","updateWorkspace","useUpdateWorkspace","RenameWorkspaceDialog","deleteWorkspace","useDeleteWorkspace","PolicyFailMessage","resourceName","color","reason","MessageText","SectionHelper","billing","upgradeMsgValues","text","Link","LinkStyle","WorkspaceSelector","trigger","placement","workspaces","useUserWorkspaces","activeWorkspace","useActiveWorkspace","selectorIsOpen","setSelectorIsOpen","hasPermission","cloneElement","DefaultTrigger","WorkspaceItem","CreateWorkspaceButton","onClick","onCreated","workspaceCount","checkOverQuotaOrNoPermission","overQuotaOrNoPermission","openDialog","AddIcon","forwardRef","ButtonBase","UnfoldMoreIcon","isActive","CheckIcon","ManageButton","LeaveWorkspaceDialog","DeleteWorkspaceConfirmation","EditIcon","MenuPositions","__assign","this","t","n","o","defaultConfig","exports","arrayToTree","a","h","i","d","getNestedProperty","l","countNodes","fetchUserFolders","useFolders","useMoveEntries","moveEntries","canMoveEntriesInto","targets","destination","target","destinationIsInTarget","destinationPath","part","useFolderDropAction","folderAcceptsDrop","makeFolderTreeDragId","isFolderTreeDragId","useSidebarTreeDropTarget","isDragOver","setIsDragOver","onDrop","useDroppable","draggable","TreeContext","createContext","renderTree","nodes","itemRenderer","parentNode","level","node","TreeLabel","icon","expandedKeys","setExpandedKeys","selectedKeys","setSelectedKeys","isExpanded","handleExpandIconClick","newExpandedKeys","_","ArrowRightIcon","TreeItem","labelRef","labelClassName","focusManager","useFocusManager","focusedNode","setFocusedNode","hasChildren","isFirstNode","isFocused","onKeyDown","newKeys","parentEl","childNode","createEventHandler","Tree","useControlledState","FocusScope","TreeRoot","FolderTree","tree","useMemo","folders","keys","entryHash","findHash","FolderTreeItem","isRootFolder","isDragging","draggableProps","useDraggable","droppableProps","mergeProps","BackupIcon","FolderIcon","SidebarMenu","CustomMenu","TrashMenuItem","CustomMenuItem","CreateNewButton","isCompact","button","activeFolder","UploadFileIcon","Sidebar","isSubscribed","WorkspaceSwitcher","fetchEntries","setActiveFolder","shallowEqual","usePaginatedEntries","searchParams","useSearchParams","isDisabledInSearch","getAllEntries","all","cache","driveSearchFilters","FILE_ENTRY_TYPE_FILTER","FilterOperator","FilterControlType","createdAtFilter","updatedAtFilter","alwaysShownFilters","f","SearchFilterList","DashboardLayoutContext","inputValue","setInputValue","SearchIcon","FilterList","restrictResizableWithinBoundary","rect","boundaryRect","boundedRect","leftRestriction","topRestriction","mouseSelectables","useMouseSelectable","optionsRef","useLayoutEffect","droppables","rectsIntersect","rectA","rectB","useMouseSelectionBox","onPointerDown","defaultRef","containerRef","boxRef","drawSelectionBox","startPoint","endPoint","initialScrollTop","currentScrollTop","newRect","scrollDiff","scrollValue","absoluteRect","selectable","intersect","_e","_f","_g","usePointerEvents","activeInteraction","updateRects","el","reachedBottomEdge","reachedTopEdge","useEntries","useSelectedEntries","ids","useSelectedEntry","useSelectedEntryParent","getSelectedEntries","allEntries","EntryActionList","selectedEntries","ActionList","removeShared","DriveContextMenu","PageContextMenu","EntriesContextMenu","position","BaseContextMenu","ContextMenu","useIsTouchDevice","useMediaQuery","useFileViewDnd","isTouchDevice","itemClassName","FileTableRow","useViewItemActionHandler","FileTable","performViewItemAction","FileGridItem","toggleEntry","pressHandler","isCtrlOrShiftPressed","pressProps","keyboardHandler","contextMenuHandler","FooterAdornment","FileGrid","DriveSortButton","PageBreadcrumbs","rootItem","useRootItem","isMenuItem","MixedText","owner","InfiniteScrollSentinel","isInitialLoading","loaderMarginTop","style","_variant","loadMoreExtraContent","loadMoreClickCount","setLoadMoreClickCount","innerVariant","DropTargetMask","isVisible","mask","FileView","containerProps","boxProps","noContentMessage","handleContextMenu","handleKeybinds","isCtrlKeyPressed","Toolbar","UploadQueueItem","memo","SizeInfo","FileStatus","fileUpload","bytesUploaded","totalBytes","uploadedBytes","statusMessage","abortUpload","errorMessage","isHovered","setIsHovered","abortButton","progressButton","statusButton","errMessage","AnimatedStatus","ErrorIcon","WarningIcon","CheckCircleIcon","UploadQueue","Header","UploadList","inProgressUploadsCount","completedUploadsCount","clearInactive","uploadsArray","virtualizer","useVirtualizer","virtualItem","upload","detailedExamination","DetailsSidebarHeader","entryType","entryName","setRightSidenavStatus","DetailsSidebarSectionHeader","margin","useSyncEntryTags","createComment","tags","useFileEntryTags","fetchTags","DetailsSidebarTags","TagChipField","syncTags","setValue","handleChange","newTags","Item","DetailsSidebarProperties","GroupsIcon","Avatar","PropertyList","prettySize","PropertyItem","DetailsSidebar","selectedEntry","NothingSelected","useRenameEntry","renameEntry","RenameEntryDialog","initialName","onSubmit","createFolder","parentId","useCreateFolder","NewFolderDialog","EntryPreviewDialog","defaultActiveIndex","activeIndex","setActiveIndex","DriveActions","shareEntry","useShareEntry","axios","DRIVE_ENTRY_FULL_PERMISSIONS","PermissionSelectorItems","PermissionSelector","getPermissionItemForUser","edit","useChangePermission","changePermission","UserAvatar","auth","SiteConfigContext","MemberList","users","ActionButtons","changePermissions","unshareEntry","activePermission","setActivePermission","SharePanel","isSharing","setIsSharing","selectedPermission","setSelectedPermission","useNormalizedModels","useEntryShareableLink","fetchLinkByEntryId","deleteShareableLink","useDeleteShareableLink","randomString","length","random","possible","ShareableLinkPanel","setActivePanel","focusInput","linkExists","deleteLink","Switch","ShareableLinkInput","autoFocus","base_url","linkUrl","isCopied","setCopied","useClipboard","updateShareableLink","useUpdateShareableLink","LinkSettingsDialog","updateLink","LinkExpirationOption","LinkPasswordOption","LinkOption","FormSwitch","minDate","now","getLocalTimeZone","showFieldDefault","showField","setShowField","FormDatePicker","showBorder","title","ShareDialog","initialEntry","focusLinkInput","fileEntry","activePanel","MainDialog","MoveEntriesDialogSearch","allFolders","onFolderSelected","searchLabel","ComboBox","folderId","MoveEntriesDialogBreadcrumbs","selectedFolder","path","fullPath","previous","ArrowBackIcon","myFilesSvg","MoveEntriesDialogFolderList","subFolders","List","ListItem","ChevronRightIcon","MoveEntriesDialog","setSelectedFolder","DeleteEntriesForeverDialog","BlockTrashFolderViewDialog","DriveDialogsContainer","activeDialog","getDialog","NavbarSearch","useDragMonitor","monitor","monitorRef","useId","dragMonitors","EntryDragPreview","points","setPoints","setState","dragTarget","prev","EntryPreview","droppableId","itemCount","exitVariant","EntryCount","count","DriveContentHeader","ToggleViewModeButton","ToggleDetailsButton","tooltip","ViewListIcon","ViewModuleIcon","InfoIcon","DriveLayout","urlsContextValue","StaticPageTitle","DashboardSidenav","searchButton","mobileRightChildren","FloatingActionList","entriesSelected","DriveRouteConfig","AuthRoute","DriveRoutes","useRoutes"],"mappings":"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","x_google_ignoreList":[0,1,63]}